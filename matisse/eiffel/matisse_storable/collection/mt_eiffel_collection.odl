/*
 * The contents of this file are subject to the Matisse Interfaces 
 * Public License Version 1.0 (the "License"); you may not use this 
 * file except in compliance with the License. You may obtain a copy of
 * the License at http://www.matisse.com/pdf/developers/MIPL.html
 *
 * Software distributed under the License is distributed on an "AS IS" 
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See 
 * the License for the specific language governing rights and
 * limitations under the License.
 *
 * The Original Code was created by Matisse Software Inc. 
 * and its successors.
 *
 * The Initial Developer of the Original Code is Matisse Software Inc. 
 * Portions created by Matisse Software are Copyright (C) 
 * Matisse Software Inc. All Rights Reserved.
 *
 * Contributor(s): Kazuhiro Nakao
 *                 Didier Cabannes
 *
 */

//  
//
// Meta-Schema Extension for MATISSE-Eiffel Binding
// ------------------------------------------------

//
// You can write an interface definition using one of the 
// meta-schema extension as follows:
//
//  interface FOO : persistent {
//  	relationship List<BAR> a_list[0, -1]
//  	  inverse another_list
//  	  mt_instance_of CompositeRelationship;
//  };
//

// For composite object
interface CompositeRelationship : "MtRelationship" : persistent {
};

// For hash_table
interface HashTableRelationship : "MtRelationship" : persistent {
};


mt_relationship List<Any> hash_table_of_void_key_value
  inverse HASH_TABLE::void_key_obj_value;

mt_relationship List<Any> hash_table_of_value
  inverse HASH_TABLE::obj_values;

mt_relationship List<Any> hash_table_of_key
  inverse HASH_TABLE::obj_keys;
  
interface HASH_TABLE : persistent {
  attribute List<Any> Nullable att_keys;
  attribute List<Any> Nullable att_values;
  attribute List<MtInteger> Nullable value_index;
  attribute Any Nullable void_key_att_value;
  relationship List<Any> obj_keys inverse hash_table_of_key;
  relationship List<Any> obj_values inverse hash_table_of_value;
  relationship Any void_key_obj_value[0, 1] inverse hash_table_of_void_key_value;
  attribute MtBoolean has_default = MT_FALSE;
};
