<?xml version="1.0"?>

<!--
description:

"Using the examples"

copyright: "Copyright (c) 2004-2005, Andreas Leitner and others"
license: "Eiffel Forum License v2 (see forum.txt)"
date: "$Date$"
revision: "$Revision$"

-->

<chapter xmlns="http://www.gobosoft.com/eiffel/gobo/documentation" id="ewg/using_the_examples">
  <chapterinfo>
    <copyright>
      <year>2004-2005</year>
      <holder>Andreas Leitner</holder>
    </copyright>
    <author>
      <firstname>Andreas</firstname><surname>Leitner</surname>
    </author>
    <email>aleitner@raboof.at</email>
    <date>8 March 2005</date>
  </chapterinfo>

  <title>Using the examples</title>

  <title>Using the Examples</title>

  <para>
    EWG comes with the following examples
  </para>
  <itemizedlist>
    <listitem>
      <para><emphasis>simple</emphasis> -- A minimal example. This is a very good example to start with</para>
    </listitem>
    <listitem>
      <para><emphasis>callback</emphasis> -- Demonstrates the use of C callbacks from within Eiffel</para>
    </listitem>
    <listitem>
      <para><emphasis>Berkeley DB</emphasis> -- Proof of concept wrapper for <ulink url="http://www.sleepycat.com/">Berkely DB</ulink></para>
    </listitem>
    <listitem>
      <para><emphasis>GTK 2.x</emphasis> -- Wrapper for <ulink url="http://www.gtk.org">GTK 2.0</ulink></para>
    </listitem>
    <listitem>
      <para><emphasis>SDL</emphasis> -- Proof of concept wrapper for <ulink url="http://www.libsdl.org/index.php">SDL</ulink></para>
    </listitem>
    <listitem>
      <para><emphasis>SDL</emphasis> -- Proof of concept wrapper for <ulink url="http://www.opengl.org/">OpenGL</ulink></para>
    </listitem>
  </itemizedlist>
  <para>
    For an up-to-date list of EWG based wrapper libraries please visit the <ulink url="http://ewg.sf.net/">EWG Homepage</ulink>.
    Note that all examples compile on all platforms with all compilers.
  </para>
  <para>
    It is worth mentioning that the GTK wrapper is already pretty much advanced (although by for not complete yet).
    By using an inheritance trick GTK-EWG supports <emphasis>agents</emphasis> (which is a powerful concept especially for GUIs), but
    has fall-back support for <emphasis>command classes</emphasis> on <emphasis>Visual Eiffel</emphasis> (which doesn't support agents yet).
  </para>

  <section id="examples_requirements">

    <title>Requirements</title>

    <para>
      The following is a list of requirements that need to be fullfilled in order
      to build library wrappers with EWG and compile applications using those library wrappers.
      Please note that these are not necessarily the same as the 
      requirements needed to compile EWG (the tool) itself.
    </para>
    <itemizedlist>
      <listitem>
	 <para>Library</para>
	 <itemizedlist>
	   <listitem><para>GOBO (3.4) -- (you just need geant and gexace)</para></listitem>
	 </itemizedlist>
      </listitem>
      <listitem>
	 <para>Compiler</para>
	 <itemizedlist>
	   <listitem><para>Smart Eiffel (1.1)</para></listitem>
	   <listitem><para>ISE Eiffel (5.6)</para></listitem>
	   <listitem><para>Visual Eiffel (4.1)</para></listitem>
	 </itemizedlist>
      </listitem>
      <listitem>
	 <para>Platform</para>
	 <itemizedlist>
	   <listitem><para>Everything supported by above requirements</para></listitem>
	 </itemizedlist>
      </listitem>
    </itemizedlist>

    <note>
      <para>
	 Please note that the code generated by EWG does not require <ulink url="http://www.gobosoft.com">GOBO</ulink>.
	 The examples supplied with EWG need the GOBO build tools though.
      </para>
    </note>      

    <note>
      <para>
	 Support for Visual Eiffel on Windows is currently not fully supported, because I only have the free version of Visual Eiffel.
	 This version refuses to compile the bigger examples like OpenGL and GTK 2.x, thus I cannot test them.
      </para>
    </note>      

    <para>
      The examples provided with EWG have been tested using the following combinations:
    </para>
    <itemizedlist>
      <listitem><para>se / gcc</para></listitem>
      <listitem><para>ise / gcc</para></listitem>
      <listitem><para>se / msc</para></listitem>
      <listitem><para>se / lcc</para></listitem>
      <listitem><para>ise / msc</para></listitem>
      <listitem><para>ve / gcc</para></listitem>
      <listitem><para>ve / msc</para></listitem>
    </itemizedlist>

    <para>
      Other combinations might or might not work.
      If you test another combination I would be happy to hear from your results.
    </para>
  </section>

  <section id="building_and_running_the_ examples">
    <title>Building and Running the examples</title>
    <para>
      This step requires that you already have compiled the <emphasis>ewg</emphasis> tool.
      If you have downloaded a release package for you platform, 
      you are lucky, since these packages already come with the <emphasis>ewg</emphasis> tool pre-compiled.
    </para>
    
    <para>
      You can find examples on how to use EWG to create wrappers for C libraries in the directory 
      <literal>${EWG}/example</literal>. These examples are fully functional, in that they include the necessary
      build automation to build the examples using all platform/eiffel-compiler/c-compiler combinations.
    </para>
    
    <warning>
      <para>
	 Most examples wrap a 3rd party C library. If you want to build such an example
	 please read the <emphasis>Readme.txt</emphasis> file in the examples directory.
	 It is usually necessary for you to install certain development versions of the libraries to
	 wrap. The <emphasis>Readme.txt</emphasis> file gives details on what is necessary.
      </para>
    </warning>

    <para>
      To generate the Eiffel wrapper for a given example go into the <literal>library</literal>
      subdirectory of the examples directory. The examples usually have two subdirectories. 
      <literal>library</literal> contains the files necessary to build the wrapper and 
      <literal>hello_world</literal> contains the source code for an actual Eiffel application that
      uses the wrapper.
      For example to generate the wrappers for the <emphasis>simple</emphasis>-example do:
    </para>

    <programlisting>
      cd ${EWG}/example/simple/library
      geant install
      geant c_build_library
    </programlisting>

    <para>
      This will use the ewg tool to generate Eiffel and C files that make the c library accessible from within
      Eiffel. It may sound weird that C files are generated too, but it is unfortunately necessary. The generated
      C files will be compiled and put into a static link library.
    </para>
    <para>
      To compile and run an example application go into the example applications directory.
      For example to build the <literal>hello_world</literal> application of the <literal>simple</literal>
      example do:
    </para>

    <programlisting>
      cd ${EWG}/example/simple/example/hello_world
      geant install
      geant compile
      ./simple_hello_world
    </programlisting>
  </section>

</chapter>

