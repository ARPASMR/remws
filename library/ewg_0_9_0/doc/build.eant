<?xml version="1.0"?>

<project name="ewg_documentation" default="help">

  <description>
    description: "Eiffel Ant file for EWG  Documentation"
    system: "EWG Documentation"
    copyright: "Copyright (c) 2002, Andreas Leitner and others"
    license: "Eiffel Forum License v2 (see forum.txt)"
    date: "$Date: 2005/08/17 11:28:04 $"
    revision: "$Revision: 1.9 $"
  </description>

  <target name="help">
    <echo message="usage:"/>
    <echo message="   geant convert_images"/>
    <echo message="   geant install"/>
    <echo message="   geant clean"/>
    <echo message="   geant clobber"/>
  </target>

  <target name="convert_images" unless="${GOBO_OS}=windows">
    <description>
      Convert Images from their source format to PNG.
      Requires the tools 'dia' and 'convert'.
    </description>
    
    <exec executable="dia --nosplash ${fs.filename} --export=${fs.mapped_filename}">
      <fileset 
	   dir="${EWG}/doc/image"
	   filename_directory="${EWG}/doc/image"  
	   mapped_filename_directory="${EWG}/doc/image" 
	   include="@(**/*.dia)">
	 <map type="glob" from="*.dia" to="*.eps"/>
      </fileset>
    </exec>
    <exec executable="convert ${fs.filename} ${fs.mapped_filename}">
      <fileset 
	   dir="${EWG}/doc/image"
	   filename_directory="${EWG}/doc/image"  
	   mapped_filename_directory="${EWG}/doc/image" 
	   include="@(**/*.eps)">
	 <map type="glob" from="*.eps" to="*.png"/>
      </fileset>
    </exec>
  </target>

  <target name="install">
    <description>
      Install the Gobo Eiffel Developer Guidelines.
    </description>

    <geant target="convert_images"/>

    <set name="xslt_processor" value="gexslt" unless="$GOBO_XSLT_PROCESSOR"/>
    <set name="xslt_processor" value="${GOBO_XSLT_PROCESSOR}" if="$GOBO_XSLT_PROCESSOR"/>

    <set name="previous" value="introduction"/>
    <set name="current" value="introduction"/>
    <geant target="xslt_and_shift" arguments="installation"/>
    <geant target="xslt_and_shift" arguments="building_the_tools"/>
    <geant target="xslt_and_shift" arguments="using_the_examples"/>
    <geant target="xslt_and_shift" arguments="understanding_ewg"/>
    <geant target="xslt_and_shift" arguments="how_to_create_a_wrapper"/>
    <geant target="xslt_and_shift" arguments="appendix"/>
    <geant target="xslt_and_shift" arguments="introduction"/>
  </target>

  <target name="clean">
    <description>
      Remove intermediary generated files.
    </description>

    <!-- do nothing -->
  </target>

  <target name="clobber">
    <description>
      Remove all generated files.
    </description>
    
    <delete file="${EWG}/doc/introduction.html"/>
    <delete file="${EWG}/doc/installation.html"/>
    <delete file="${EWG}/doc/building_the_tools.html"/>
    <delete file="${EWG}/doc/using_the_examples.html"/>
    <delete file="${EWG}/doc/understanding_ewg.html"/>
    <delete file="${EWG}/doc/how_to_create_a_wrapper.html"/>
    <delete file="${EWG}/doc/appendix.html"/>

    <delete file="${EWG}/doc/image/application_components.png"/>
    <delete file="${EWG}/doc/image/application_components.eps"/>
    <delete file="${EWG}/doc/image/struct_wrapper.png"/>
    <delete file="${EWG}/doc/image/struct_wrapper.eps"/>
    <delete file="${EWG}/doc/image/wrapper_creation_matrix.png"/>
    <delete file="${EWG}/doc/image/wrapper_creation_matrix.eps"/>
    <delete file="${EWG}/doc/image/ewg_flow.png"/>
    <delete file="${EWG}/doc/image/ewg_flow.eps"/>
  </target>

  <!-- Implementation -->

  <target name="xslt_and_shift" export="NONE">
    <description>
      Call `xslt' and shift variables `previous' and `current' one chapter forward.
    </description>
    <argument name="a_next"/>

    <geant target="xslt" arguments="${previous},${current},${a_next}"/>
    <!-- Shift parameters -->
    <set name="previous" value="${current}"/>
    <set name="current" value="${a_next}"/>
  </target>

  <target name="xslt" export="NONE">
    <description>
      Execute XSL Transformation for argument ${a_file}, ${a_previous}
      and ${a_next} using processor ${xslt_processor}.
    </description>
    <argument name="a_previous"/>
    <argument name="a_file"/>
    <argument name="a_next"/>

    <xslt processor="${xslt_processor}" input="${a_file}.xml" output="${a_file}.html" stylesheet="${EWG}/doc/misc/gobo2html2.xsl">
      <parameter name="previous" value="&quot;'${a_previous}.html'&quot;"/>
      <parameter name="next" value="&quot;'${a_next}.html'&quot;"/>
      <parameter name="toc" value="&quot;'introduction.html'&quot;"/>
    </xslt>
  </target>

</project>
