<?xml version="1.0"?>

<project name="ewg_test_suite" default="help">

  <description>
    system: "EWG Test Suite"
    copyright: "Copyright (c) 2001-2002, Andreas Leitner and others"
    license: "Eiffel Forum License v2 (see forum.txt)"
    date: "$Date: 2003/12/19 19:51:03 $"
    revision: "$Revision: 1.15 $"
  </description>

  <inherit>
    <parent location="${GOBO}/misc/test.eant">
      <redefine target="install"/>
      <redefine target="init"/>
      <redefine target="init_windows"/>
      <redefine target="init_unix"/>
      <redefine target="clean"/>
      <redefine target="clobber"/>
      <redefine target="test"/>
      <redefine target="xace"/>
    </parent>
  </inherit>


  <target name="install" depend="init">
    <precursor/>
    <geant target="cpp_test_data_${cc}"/>
    <geant file="compile_runtime.eant" target="install"/>
  </target>

  <target name="cpp_test_data_gcc" depend="init">
    <description>
      C Preprocess test headers with gcc.
    </description>
    <mkdir directory="${system_dir}/preprocessed"/>
    <exec executable="cpp ${fs.filename} &gt; ${fs.mapped_filename}" dir="${system_dir}/data/header">
      <fileset directory="${system_dir}/data/header" include="@(**/*.h)">
	 <map type="glob" from="*.h" to="${system_dir}/preprocessed/*.hpp"/>
      </fileset>
    </exec>
  </target>

  <target name="cpp_test_data_msc" depend="init">
    <description>
      C Preprocess test headers with cl.
    </description>
    <mkdir directory="${system_dir}/preprocessed"/>
    <exec executable="cl /nologo /E ${fs.filename} &gt; ${fs.mapped_filename}" dir="${system_dir}/data/header">
      <fileset directory="${system_dir}/data/header" include="@(**/*.h)">
	 <map type="glob" from="*.h" to="${system_dir}/preprocessed/*.hpp"/>
      </fileset>
    </exec>
  </target>

  <target name="cpp_test_data_lcc" depend="init">
    <description>
      C Preprocess test headers with lcc.
    </description>
    <mkdir directory="${system_dir}/preprocessed"/>
    <exec executable="lcc  -E ${fs.filename} -Fo${fs.mapped_filename}" dir="${system_dir}/data/header">
      <fileset directory="${system_dir}/data/header" include="@(**/*.h)">
	 <map type="glob" from="*.h" to="${system_dir}/preprocessed/*.hpp"/>
      </fileset>
    </exec>
  </target>

  <target name="cpp_test_data_bcb" depend="init">
    <description>
      C Preprocess test headers with bcb.
    </description>
    <mkdir directory="${system_dir}/preprocessed"/>
    <exec executable="${bcb.cpp} -P- -o${fs.mapped_filename} ${fs.filename}" dir="${system_dir}/data/header">
      <fileset directory="${system_dir}/data/header" include="@(**/*.h)">
	 <map type="glob" from="*.h" to="${system_dir}/preprocessed/*.hpp"/>
      </fileset>
    </exec>
  </target>

  <target name="clean" depend="init">
    <precursor/>
    <delete directory="${system_dir}/preprocessed"/>
    <geant file="compile_runtime.eant" target="clean"/>
  </target>

  <target name="clobber" depend="clean">
    <precursor/>
    <geant file="compile_runtime.eant" target="clobber"/>
  </target>



  <!-- Implementation -->

  <target name="init">
    <set name="cc" value="${GOBO_CC}"/>
    <precursor/>
    <set name="system" value="ewg_test_suite"/>
    <set name="library" value="ewg"/>
    <set name="system_dir" value="${EWG}/test"/>
    <set name="vetuner" value="huge"/>
    <set name="bcb.cpp" value="${EIFFEL5}\BCC55\bin\cpp32" if="${EIFFEL5}"/>
    <set name="bcb.cpp" value="cpp32" unless="${EIFFEL5}"/>
  </target>

  <target name="init_windows" if="${GOBO_OS}=windows">
    <precursor/>
    <set name="cc" value="msc" unless="${cc}"/>
  </target>

  <target name="init_unix" unless="${GOBO_OS}=windows">
    <precursor/>
    <set name="cc" value="gcc" if="${cc}"/>
  </target>

  <target name="test" depend="init">
    <geant file="compile_runtime.eant" target="c_build_library_${eiffel}"/>
    <precursor/>
  </target>

  <target name="xace" depend="init">
    <description>
      Build Ace file or ESD file for Eiffel compiler ${eiffel}.
      Generate file in ${gexace_output} if specified.
      Pass $DEBUG option to 'gexace' if ${debug} is defined.
      Pass $BOOTSTRAP option to 'gexace' if ${bootstrap} is defined.
      Pass $GOBO_OS value to 'gexace'.
      Pass $cc value to 'gexace' as $GOBO_CC.
      Pass $eiffel value to 'gexace' as $GOBO_EIFFEL.
      Pass $GOBO_XML_EXPAT option to 'gexace' if defined.
      Pass $GOBO_DOTNET option to 'gexace' if defined.
      Pass $ISE_5_1 option to 'gexace' if defined.
      Pass $SE_0_74 option to 'gexace' if defined.
      Pass $EWG_FFCALL option to 'gexace' if defined.
      To be redefined in descendant if additional options are
      necessary.
    </description>

    <set name="gexace_output" value="" unless="${gexace_output}"/>
    <gexace system="${eiffel}" output="${gexace_output}" xace="${system_dir}/system.xace">
      <define name="DEBUG" value="${debug}" if="${debug}"/>
      <define name="BOOTSTRAP" value="${bootstrap}" if="${bootstrap}"/>
      <define name="GOBO_OS" value="${GOBO_OS}"/>
      <define name="GOBO_CC" value="${cc}"/>
      <define name="GOBO_EIFFEL" value="${eiffel}"/>
      <define name="GOBO_XML_EXPAT" value="true" if="${GOBO_XML_EXPAT}"/>
      <define name="GOBO_DOTNET" value="true" if="${GOBO_DOTNET}"/>
      <define name="ISE_5_1" value="true" if="${ISE_5_1}"/>
      <define name="SE_0_74" value="true" if="${SE_0_74}"/>
      <define name="EWG_FFCALL" value="true" if="${EWG_FFCALL}"/>
    </gexace>
  </target>

</project>
