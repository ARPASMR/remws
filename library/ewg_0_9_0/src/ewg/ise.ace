system

	ewg

root

	EWG: "make"

default

	address_expression (no)
	array_optimization (no)
	assertion (no)
	check_vape (yes)
	cls_compliant (yes)
	console_application (yes)
	dead_code_removal (yes)
	debug (no)
	dotnet_naming_convention (no)
	dynamic_runtime (no)
	exception_trace (no)
	il_verifiable (yes)
	inlining (no)
	inlining_size ("4")
	line_generation (no)
	msil_generation (no)
	multithreaded (no)
	profile (no)
	msil_generation_type ("exe")
	trace (no)

cluster

	ewg: "${EWG}/src/ewg"
	gexace: "${GOBO}/src/gexace"
	ewg_library: "${EWG}/library"
	ewg_printer (ewg_library): "$/printer"
	ewg_support (ewg_library): "$/support"
	ewg_error (ewg_library): "$/error"
	ewg_processor (ewg_library): "$/processor"
	ewg_ewg_configconfig (ewg_library): "$/config"
	ewg_ewg_configast (ewg_ewg_configconfig): "$/ast"
	ewg_ewg_configparser (ewg_ewg_configconfig): "$/parser"
	ewg_parser (ewg_library): "$/parser"
	ewg_c_parser (ewg_parser): "$/c_parser"
	ewg_c_macro_parser (ewg_parser): "$/c_macro_parser"
	ewg_ast (ewg_library): "$/ast"
	ewg_c_ast (ewg_ast): "$/c_ast"
	ewg_phase_1 (ewg_c_ast): "$/phase_1"
	ewg_phase_2 (ewg_c_ast): "$/phase_2"
	ewg_type (ewg_phase_2): "$/type"
	ewg_declaration (ewg_phase_2): "$/declaration"
	ewg_eiffel_ast (ewg_ast): "$/eiffel_ast"
	ewg_generator (ewg_library): "$/generator"
	ewg_c_glue_code (ewg_generator): "$/c_glue_code"
	ewg_eiffel_external (ewg_generator): "$/eiffel_external"
	ewg_eiffel_abstraction (ewg_generator): "$/eiffel_abstraction"
	ise: "${ISE_EIFFEL}/library"
	library base (ise): "$/base"
		exclude
			"table_eiffel3";
			"desc"
		end
	time (ise): "$/time"
	format (time): "$/format"
	english (format): "$/english"
	kl_kernel: "${GOBO}/library/kernel"
	kl_basic (kl_kernel): "$/basic"
	kl_elks (kl_kernel): "$/elks"
	kl_io (kl_kernel): "$/io"
	kl_misc (kl_kernel): "$/misc"
	kl_unicode (kl_kernel): "$/unicode"
	kl_support (kl_kernel): "$/support"
	kl_spec (kl_kernel): "$/spec"
	kl_spec_ise (kl_spec): "$/ise"
	lx_lexical: "${GOBO}/library/lexical"
	lx_automaton (lx_lexical): "$/automaton"
	lx_error (lx_lexical): "$/error"
	lx_generation (lx_lexical): "$/generation"
	lx_lex (lx_lexical): "$/lex"
	lx_regexp (lx_lexical): "$/regexp"
	lx_scanner (lx_lexical): "$/scanner"
	lx_skeleton (lx_lexical): "$/skeleton"
	lx_support (lx_lexical): "$/support"
	ma_math: "${GOBO}/library/math"
	ma_decimal (ma_math): "$/decimal"
	pr_parse: "${GOBO}/library/parse"
	pr_error (pr_parse): "$/error"
	pr_fsm (pr_parse): "$/fsm"
	pr_generation (pr_parse): "$/generation"
	pr_grammar (pr_parse): "$/grammar"
	pr_parser (pr_parse): "$/parser"
	pr_skeleton (pr_parse): "$/skeleton"
	pr_support (pr_parse): "$/support"
	pr_yacc (pr_parse): "$/yacc"
	dp_pattern: "${GOBO}/library/pattern"
	dp_bridge (dp_pattern): "$/bridge"
	dp_command (dp_pattern): "$/command"
	rx_regexp: "${GOBO}/library/regexp"
	rx_interface (rx_regexp): "$/interface"
	rx_pcre (rx_regexp): "$/pcre"
	rx_support (rx_regexp): "$/support"
	st_string: "${GOBO}/library/string"
	st_collation (st_string): "$/collation"
	st_support (st_string): "$/support"
	st_formatter (st_string): "$/formatter"
	st_general (st_formatter): "$/general"
	st_parameter (st_formatter): "$/parameter"
	ds_structure: "${GOBO}/library/structure"
	ds_container (ds_structure): "$/container"
	ds_dispenser (ds_structure): "$/dispenser"
	ds_list (ds_structure): "$/list"
	ds_set (ds_structure): "$/set"
	ds_sort (ds_structure): "$/sort"
	ds_support (ds_structure): "$/support"
	ds_table (ds_structure): "$/table"
	ts_test: "${GOBO}/library/test"
	ts_generation (ts_test): "$/generation"
	ts_harness (ts_test): "$/harness"
	dt_time: "${GOBO}/library/time"
	dt_clock (dt_time): "$/clock"
	dt_date (dt_time): "$/date"
	dt_format (dt_time): "$/format"
	dt_time_zone (dt_time): "$/time_zone"
	et_tools: "${GOBO}/library/tools"
	et_eiffel_eiffel (et_tools): "$/eiffel"
	et_eiffel_ast (et_eiffel_eiffel): "$/ast"
	et_eiffel_assertion (et_eiffel_ast): "$/assertion"
	et_eiffel_class (et_eiffel_ast): "$/class"
	et_eiffel_cluster (et_eiffel_ast): "$/cluster"
	et_eiffel_constant (et_eiffel_ast): "$/constant"
	et_eiffel_dynamic (et_eiffel_ast): "$/dynamic"
	et_eiffel_expression (et_eiffel_ast): "$/expression"
	et_eiffel_feature (et_eiffel_ast): "$/feature"
	et_eiffel_instruction (et_eiffel_ast): "$/instruction"
	et_eiffel_misc (et_eiffel_ast): "$/misc"
	et_eiffel_name (et_eiffel_ast): "$/name"
	et_eiffel_type (et_eiffel_ast): "$/type"
	et_eiffel_compilation (et_eiffel_eiffel): "$/compilation"
	et_eiffel_error (et_eiffel_eiffel): "$/error"
	et_eiffel_parser (et_eiffel_eiffel): "$/parser"
	et_eiffel_processor (et_eiffel_eiffel): "$/processor"
	et_lace_lace (et_tools): "$/lace"
	et_lace_ast (et_lace_lace): "$/ast"
	et_lace_error (et_lace_lace): "$/error"
	et_lace_parser (et_lace_lace): "$/parser"
	et_xace_xace (et_tools): "$/xace"
	et_xace_ast (et_xace_xace): "$/ast"
	et_xace_error (et_xace_xace): "$/error"
	et_xace_generator (et_xace_xace): "$/generator"
	et_xace_parser (et_xace_xace): "$/parser"
	et_xace_support (et_xace_xace): "$/support"
	et_xace_universe (et_xace_xace): "$/universe"
	ut_utility: "${GOBO}/library/utility"
	ut_error (ut_utility): "$/error"
	ut_formatter (ut_utility): "$/formatter"
	ut_command (ut_utility): "$/command"
	ut_support (ut_utility): "$/support"
	ut_transcoder (ut_utility): "$/transcoder"
	ut_uri (ut_utility): "$/uri"
	xm_xml: "${GOBO}/library/xml"
	xm_position (xm_xml): "$/position"
	xm_source (xm_xml): "$/source"
	xm_general (xm_xml): "$/general"
	xm_event (xm_xml): "$/event"
	xm_tree (xm_xml): "$/tree"
	xm_formatter (xm_xml): "$/formatter"
	xm_resolver (xm_xml): "$/resolver"
	xm_resolver_interface (xm_resolver): "$/interface"
	xm_catalog (xm_resolver): "$/catalog"
	xm_simple (xm_resolver): "$/simple"
	xm_uri (xm_resolver): "$/uri"
	xm_parser (xm_xml): "$/parser"
	xm_interface (xm_parser): "$/interface"
	xm_eiffel (xm_parser): "$/eiffel"
	xm_no_expat (xm_parser): "$/no_expat"
	xm_xml_xpointer (xm_xml): "${GOBO}/library/xml/xpointer"
	xm_xpointer_common (xm_xml_xpointer): "$/common"
	xm_xpointer_event (xm_xml_xpointer): "$/event"
	xm_xml_xslt: "${GOBO}/library/xml/xslt"
	xm_patterns (xm_xml_xslt): "$/patterns"
	xm_xslt_functions (xm_xml_xslt): "$/functions"
	xm_instructions (xm_xml_xslt): "$/instructions"
	xm_style (xm_xml_xslt): "$/style"
	xm_tracing (xm_xml_xslt): "$/tracing"
	xm_number (xm_xml_xslt): "$/number"
	xm_xslt_sort (xm_xml_xslt): "$/sort"
	xm_xslt_events (xm_xml_xslt): "$/events"
	xm_transformation_support (xm_xml_xslt): "$/transformation_support"
	xm_xml_xpath: "${GOBO}/library/xml/xpath"
	xm_data_model (xm_xml_xpath): "$/data_model"
	xm_tinytree (xm_xml_xpath): "$/tinytree"
	xm_xpath_tree (xm_xml_xpath): "$/tree"
	xm_values (xm_xml_xpath): "$/values"
	xm_expressions (xm_xml_xpath): "$/expressions"
	xm_events (xm_xml_xpath): "$/events"
	xm_exslt (xm_xml_xpath): "$/exslt"
	xm_functions (xm_xml_xpath): "$/functions"
	xm_sort (xm_xml_xpath): "$/sort"
	xm_stand_alone (xm_xml_xpath): "$/stand_alone"
	xm_node_tests (xm_xml_xpath): "$/node_tests"
	xm_types (xm_xml_xpath): "$/types"
	xm_xpath_xpointer (xm_xml_xpath): "$/xpointer"

end
