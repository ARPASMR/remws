/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2008-10-26 20:24:44 +0100 (Sun, 26 Oct 2008) $"
	revision: "$Revision: 6538 $"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
#define EIF_REFERENCE EIF_ANY*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif 
#endif 

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_PROCEDURE EIF_POINTER
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-09-14 15:16:48 +0200 (Fri, 14 Sep 2007) $"
	revision: "$Revision: 6069 $"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern char** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-12-24 20:11:16 +0100 (Mon, 24 Dec 2007) $"
	revision: "$Revision: 6226 $"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Information about the feature being executed.
*/
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
	char* feature_name;
	char* type_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
	Context of features containing a rescue clause.
*/
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern GE_rescue* GE_last_rescue;

/*
	Raise an exception with code 'code'.
*/
extern void GE_raise(int code);

/*
	Check whether the type id of 'obj' is not in 'type_ids'.
	If it is, then raise a CAT-call exception. Don't do anything if 'obj' is Void.
	'nb' is the number of ids in 'type_ids' and is expected to be >0.
	'type_ids' is sorted in increasing order.
	Return 'obj'.
*/
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, int type_ids[], int nb);

/*
	Check whether 'obj' is Void.
	If it is, then raise a call-on-void-target exception.
	Return 'obj'
*/
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
	Check whether 'ptr' is a null pointer.
	If it is, then raise a no-more-memory exception.
	Return 'ptr'
*/
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-09-14 23:22:53 +0200 (Fri, 14 Sep 2007) $"
	revision: "$Revision: 6074 $"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-09-13 20:19:54 +0200 (Thu, 13 Sep 2007) $"
	revision: "$Revision: 6067 $"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Main entry point when compiling a Windows application.
	See:
		http://en.wikipedia.org/wiki/WinMain
		http://msdn2.microsoft.com/en-us/library/ms633559.aspx
*/
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2008, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2008-03-02 16:08:34 +0100 (Sun, 02 Mar 2008) $"
	revision: "$Revision: 6318 $"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC

/*
	Use the Boehm garbage collector.
	See:
		http://en.wikipedia.org/wiki/Boehm_GC
		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
*/

#include "gc.h"

/*
	GC initialization.
*/
#define GE_init_gc() GC_INIT(); GC_enable_incremental()

/*
	Memory allocation.
*/

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 */
#define GE_alloc(x) GE_null(GC_MALLOC(x))

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
#define GE_alloc_cleared

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 */
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */

/*
	Dispose
*/

/*
 * Call dispose routine `disp' on object `C'.
 */
extern void GE_boehm_dispose(void*, void*);

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)

#else

/*
	No garbage collector.
*/

/*
	GC initialization.
*/
#define GE_init_gc() /* do nothing */

/*
	Memory allocation.
*/

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 */
#define GE_alloc(x) GE_null(malloc(x))

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_cleared */

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 */
#define GE_alloc_atomic(x) GE_null(malloc(x))

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */

/*
	Dispose
*/

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#define GE_register_dispose(obj, disp) /* do nothing */

#endif


/*
	Access to objects, useful with GCs which move objects in memory.
	This is not the case here, since the Boehm GC is not a moving GC.
*/

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GETEST */
typedef struct S21 T21;

/* TS_CONFIG */
typedef struct S22 T22;

/* TS_CONFIG_PARSER */
typedef struct S23 T23;

/* KL_TEXT_INPUT_FILE */
typedef struct S24 T24;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S25 T25;

/* KL_ARGUMENTS */
typedef struct S26 T26;

/* TS_VARIABLES */
typedef struct S27 T27;

/* TS_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_STANDARD_FILES */
typedef struct S29 T29;

/* KL_STDOUT_FILE */
typedef struct S30 T30;

/* KL_EXCEPTIONS */
typedef struct S33 T33;

/* LX_DFA_REGULAR_EXPRESSION */
typedef struct S35 T35;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S36 T36;

/* UT_VERSION_NUMBER */
typedef struct S37 T37;

/* UT_USAGE_MESSAGE */
typedef struct S38 T38;

/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
typedef struct S39 T39;

/* TS_TESTCASES */
typedef struct S40 T40;

/* UT_ERROR_HANDLER */
typedef struct S41 T41;

/* DP_SHELL_COMMAND */
typedef struct S42 T42;

/* YY_FILE_BUFFER */
typedef struct S43 T43;

/* YY_BUFFER */
typedef struct S44 T44;

/* SPECIAL [INTEGER_32] */
typedef struct S45 T45;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S46 T46;

/* SPECIAL [ANY] */
typedef struct S48 T48;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S49 T49;

/* ET_IDENTIFIER */
typedef struct S50 T50;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S51 T51;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S52 T52;

/* DS_ARRAYED_LIST [TS_CLUSTER] */
typedef struct S53 T53;

/* TS_CLUSTER */
typedef struct S54 T54;

/* SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
typedef struct S55 T55;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]] */
typedef struct S57 T57;

/* SPECIAL [TS_CLUSTER] */
typedef struct S58 T58;

/* KL_SPECIAL_ROUTINES [TS_CLUSTER] */
typedef struct S59 T59;

/* KL_STDERR_FILE */
typedef struct S60 T60;

/* KL_PLATFORM */
typedef struct S62 T62;

/* KL_INTEGER_ROUTINES */
typedef struct S63 T63;

/* TYPED_POINTER [ANY] */
typedef struct S65 T65;

/* UNIX_FILE_INFO */
typedef struct S66 T66;

/* KL_STRING_ROUTINES */
typedef struct S67 T67;

/* SPECIAL [STRING_8] */
typedef struct S70 T70;

/* ARRAY [STRING_8] */
typedef struct S71 T71;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S72 T72;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S73 T73;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S74 T74;

/* ET_ERROR_HANDLER */
typedef struct S76 T76;

/* TS_OPTION_REGEXP_SYNTAX_ERROR */
typedef struct S77 T77;

/* TS_EIFFEL_COMPILATION_ERROR */
typedef struct S78 T78;

/* UT_SYNTAX_ERROR */
typedef struct S79 T79;

/* ARRAY [INTEGER_32] */
typedef struct S80 T80;

/* LX_REGEXP_PARSER */
typedef struct S81 T81;

/* LX_DESCRIPTION */
typedef struct S82 T82;

/* LX_FULL_DFA */
typedef struct S83 T83;

/* EXECUTION_ENVIRONMENT */
typedef struct S85 T85;

/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
typedef struct S86 T86;

/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
typedef struct S88 T88;

/* DS_PAIR [DS_LIST [STRING_8], STRING_8] */
typedef struct S89 T89;

/* ET_CLASS */
typedef struct S90 T90;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S91 T91;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S92 T92;

/* KL_DIRECTORY */
typedef struct S93 T93;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S96 T96;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S97 T97;

/* KL_OPERATING_SYSTEM */
typedef struct S98 T98;

/* C_STRING */
typedef struct S99 T99;

/* ET_FILE_POSITION */
typedef struct S101 T101;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S102 T102;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S103 T103;

/* TS_REGEXP_SYNTAX_ERROR */
typedef struct S104 T104;

/* TO_SPECIAL [INTEGER_32] */
typedef struct S106 T106;

/* TO_SPECIAL [ANY] */
typedef struct S107 T107;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S108 T108;

/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER] */
typedef struct S109 T109;

/* TO_SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
typedef struct S110 T110;

/* TO_SPECIAL [TS_CLUSTER] */
typedef struct S111 T111;

/* TYPED_POINTER [SPECIAL [CHARACTER_8]] */
typedef struct S112 T112;

/* KL_ANY_ROUTINES */
typedef struct S114 T114;

/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
typedef struct S115 T115;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S117 T117;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S118 T118;

/* LX_START_CONDITIONS */
typedef struct S119 T119;

/* LX_ACTION_FACTORY */
typedef struct S120 T120;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S121 T121;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S122 T122;

/* LX_SYMBOL_CLASS */
typedef struct S123 T123;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S124 T124;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S125 T125;

/* LX_NFA */
typedef struct S126 T126;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S127 T127;

/* LX_RULE */
typedef struct S128 T128;

/* SPECIAL [LX_NFA] */
typedef struct S129 T129;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S130 T130;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S131 T131;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S132 T132;

/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR */
typedef struct S133 T133;

/* LX_INTEGER_TOO_LARGE_ERROR */
typedef struct S134 T134;

/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR */
typedef struct S135 T135;

/* LX_MISSING_BRACKET_ERROR */
typedef struct S136 T136;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S137 T137;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S138 T138;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S139 T139;

/* LX_FULL_AND_META_ERROR */
typedef struct S140 T140;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S141 T141;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S142 T142;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S143 T143;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S144 T144;

/* SPECIAL [LX_RULE] */
typedef struct S145 T145;

/* ARRAY [LX_RULE] */
typedef struct S146 T146;

/* LX_DFA_STATE */
typedef struct S147 T147;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S148 T148;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S149 T149;

/* LX_SYMBOL_PARTITIONS */
typedef struct S150 T150;

/* LX_START_CONDITION */
typedef struct S151 T151;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S152 T152;

/* SPECIAL [BOOLEAN] */
typedef struct S153 T153;

/* ARRAY [BOOLEAN] */
typedef struct S154 T154;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S155 T155;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S156 T156;

/* LX_NFA_STATE */
typedef struct S157 T157;

/* KL_EQUALITY_TESTER [ET_CLASS] */
typedef struct S158 T158;

/* DS_SPARSE_TABLE_KEYS [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
typedef struct S160 T160;

/* KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
typedef struct S162 T162;

/* SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
typedef struct S163 T163;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S164 T164;

/* SPECIAL [ET_CLASS] */
typedef struct S165 T165;

/* KL_PATHNAME */
typedef struct S167 T167;

/* MANAGED_POINTER */
typedef struct S168 T168;

/* SPECIAL [NATURAL_8] */
typedef struct S169 T169;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S170 T170;

/* KL_CHARACTER_BUFFER */
typedef struct S173 T173;

/* LX_BAD_ITERATION_VALUES_ERROR */
typedef struct S175 T175;

/* LX_ITERATION_NOT_POSITIVE_ERROR */
typedef struct S176 T176;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S177 T177;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
typedef struct S178 T178;

/* TO_SPECIAL [STRING_8] */
typedef struct S179 T179;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S180 T180;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S181 T181;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S182 T182;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S183 T183;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S184 T184;

/* DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S186 T186;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S188 T188;

/* TO_SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S189 T189;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S190 T190;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S193 T193;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S194 T194;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S195 T195;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S196 T196;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S197 T197;

/* LX_ACTION */
typedef struct S199 T199;

/* TO_SPECIAL [LX_NFA] */
typedef struct S200 T200;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S201 T201;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S202 T202;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S204 T204;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S206 T206;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S208 T208;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S209 T209;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S211 T211;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S212 T212;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S213 T213;

/* ARRAY [LX_DFA_STATE] */
typedef struct S214 T214;

/* KL_ARRAY_ROUTINES [LX_DFA_STATE] */
typedef struct S215 T215;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S216 T216;

/* KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S217 T217;

/* DS_SPARSE_TABLE_KEYS [LX_NFA, INTEGER_32] */
typedef struct S219 T219;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S221 T221;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
typedef struct S222 T222;

/* TO_SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
typedef struct S223 T223;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S224 T224;

/* EXCEPTIONS */
typedef struct S225 T225;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S226 T226;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S228 T228;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S229 T229;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S232 T232;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S236 T236;

/* TO_SPECIAL [LX_RULE] */
typedef struct S238 T238;

/* TO_SPECIAL [LX_START_CONDITION] */
typedef struct S239 T239;

/* DS_SPARSE_TABLE_KEYS_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S240 T240;

/* TO_SPECIAL [LX_NFA_STATE] */
typedef struct S241 T241;

/* TO_SPECIAL [LX_DFA_STATE] */
typedef struct S242 T242;

/* DS_SPARSE_TABLE_KEYS_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S243 T243;

/* ET_LACE_CLUSTER */
typedef struct S245 T245;

/* ET_LACE_CLUSTERS */
typedef struct S246 T246;

/* ET_LACE_SYSTEM */
typedef struct S247 T247;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S248 T248;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S250 T250;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S252 T252;

/* ET_PROCEDURE_LIST */
typedef struct S253 T253;

/* DS_SHELL_SORTER [INTEGER_32] */
typedef struct S256 T256;

/* SPECIAL [NATURAL_64] */
typedef struct S258 T258;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S261 T261;

/* PLATFORM */
typedef struct S262 T262;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S263 T263;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S266 T266;

/* ET_TOKEN_CONSTANTS */
typedef struct S267 T267;

/* ET_AST_FACTORY */
typedef struct S268 T268;

/* ET_SYSTEM */
typedef struct S269 T269;

/* ET_AST_NULL_PROCESSOR */
typedef struct S270 T270;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S272 T272;

/* ET_EIFFEL_PREPARSER */
typedef struct S273 T273;

/* ET_EIFFEL_PARSER */
typedef struct S274 T274;

/* ET_PROVIDER_CHECKER */
typedef struct S275 T275;

/* ET_ANCESTOR_BUILDER */
typedef struct S276 T276;

/* ET_FEATURE_FLATTENER */
typedef struct S277 T277;

/* ET_INTERFACE_CHECKER */
typedef struct S278 T278;

/* ET_ADAPTED_LIBRARIES */
typedef struct S279 T279;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S280 T280;

/* ET_CLASS_NAME_TESTER */
typedef struct S281 T281;

/* ET_NONE_GROUP */
typedef struct S283 T283;

/* ET_TUPLE_TYPE */
typedef struct S284 T284;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S286 T286;

/* ET_CLASS_TYPE */
typedef struct S287 T287;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S288 T288;

/* TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S290 T290;

/* TUPLE */
typedef struct S291 T291;

/* PROCEDURE [ET_DOTNET_ASSEMBLIES, TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S292 T292;

/* TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S293 T293;

/* PROCEDURE [ET_DOTNET_ASSEMBLY, TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S296 T296;

/* TUPLE [ET_LIBRARY] */
typedef struct S298 T298;

/* PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
typedef struct S299 T299;

/* ET_CLIENT */
typedef struct S301 T301;

/* ET_PARENT */
typedef struct S302 T302;

/* ET_RENAME_LIST */
typedef struct S304 T304;

/* ET_EXPORT_LIST */
typedef struct S305 T305;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S306 T306;

/* ET_PARENT_LIST */
typedef struct S307 T307;

/* ET_CLIENT_LIST */
typedef struct S309 T309;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S312 T312;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S313 T313;

/* PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
typedef struct S318 T318;

/* TUPLE [ET_AST_PROCESSOR] */
typedef struct S319 T319;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S322 T322;

/* PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S323 T323;

/* TUPLE [ET_LACE_SYSTEM] */
typedef struct S324 T324;

/* TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S327 T327;

/* PROCEDURE [ET_ADAPTED_DOTNET_ASSEMBLY, TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S328 T328;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S331 T331;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S332 T332;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S333 T333;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S334 T334;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S335 T335;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S337 T337;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S338 T338;

/* DS_LINKABLE [STRING_8] */
typedef struct S339 T339;

/* TUPLE [ET_LACE_CLUSTER] */
typedef struct S341 T341;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S342 T342;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S344 T344;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S345 T345;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S346 T346;

/* ET_FEATURE_CHECKER */
typedef struct S347 T347;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S348 T348;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S349 T349;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S350 T350;

/* ET_SUPPLIER_BUILDER */
typedef struct S351 T351;

/* KL_STDIN_FILE */
typedef struct S352 T352;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S354 T354;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S355 T355;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S356 T356;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S357 T357;

/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
typedef struct S358 T358;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S359 T359;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S360 T360;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S361 T361;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S362 T362;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S363 T363;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S364 T364;

/* ET_PARENT_CHECKER1 */
typedef struct S365 T365;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S366 T366;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S367 T367;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S368 T368;

/* ET_FEATURE_NAME_TESTER */
typedef struct S369 T369;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S371 T371;

/* ET_ALIAS_NAME_TESTER */
typedef struct S372 T372;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S374 T374;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S375 T375;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S376 T376;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S377 T377;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S378 T378;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S379 T379;

/* ET_SIGNATURE_CHECKER */
typedef struct S380 T380;

/* ET_PARENT_CHECKER2 */
typedef struct S381 T381;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S382 T382;

/* ET_PRECURSOR_CHECKER */
typedef struct S383 T383;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S384 T384;

/* ET_PARENT_CHECKER3 */
typedef struct S385 T385;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S386 T386;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S387 T387;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
typedef struct S388 T388;

/* TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
typedef struct S389 T389;

/* DS_ARRAYED_LIST [ET_LIBRARY] */
typedef struct S390 T390;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S391 T391;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S392 T392;

/* TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S393 T393;

/* ET_SYMBOL */
typedef struct S394 T394;

/* ET_BRACKET_SYMBOL */
typedef struct S395 T395;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S397 T397;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S398 T398;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S399 T399;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S400 T400;

/* ET_KEYWORD */
typedef struct S401 T401;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S403 T403;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S404 T404;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef struct S405 T405;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef struct S406 T406;

/* ET_BRACED_TYPE_LIST */
typedef struct S408 T408;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S409 T409;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S410 T410;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S411 T411;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S412 T412;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S413 T413;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S414 T414;

/* UC_UNICODE_ROUTINES */
typedef struct S415 T415;

/* ET_BASE_TYPE_LIST */
typedef struct S417 T417;

/* ET_QUERY_LIST */
typedef struct S418 T418;

/* ET_CREATOR_LIST */
typedef struct S419 T419;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S420 T420;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S421 T421;

/* ET_INVARIANTS */
typedef struct S423 T423;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S426 T426;

/* ET_FORMAL_PARAMETER */
typedef struct S427 T427;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S429 T429;

/* ET_FORMAL_ARGUMENT */
typedef struct S430 T430;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S431 T431;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S432 T432;

/* ET_TYPE_CHECKER */
typedef struct S433 T433;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S436 T436;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S437 T437;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S438 T438;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S439 T439;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S440 T440;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S442 T442;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S443 T443;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S444 T444;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S445 T445;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S446 T446;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S447 T447;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S448 T448;

/* SPECIAL [ET_QUERY] */
typedef struct S449 T449;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S450 T450;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S451 T451;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S452 T452;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S453 T453;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S454 T454;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S455 T455;

/* SPECIAL [ET_KEYWORD] */
typedef struct S456 T456;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S457 T457;

/* SPECIAL [ET_SYMBOL] */
typedef struct S458 T458;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
typedef struct S459 T459;

/* ET_OBJECT_TEST_LIST */
typedef struct S460 T460;

/* SPECIAL [ET_OBJECT_TEST_LIST] */
typedef struct S461 T461;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S462 T462;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S464 T464;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S465 T465;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S466 T466;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S467 T467;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S468 T468;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S470 T470;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S471 T471;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S472 T472;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S473 T473;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
typedef struct S474 T474;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
typedef struct S476 T476;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S478 T478;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S479 T479;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S480 T480;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S482 T482;

/* SPECIAL [ET_TYPE] */
typedef struct S483 T483;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S484 T484;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S486 T486;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S488 T488;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S489 T489;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S491 T491;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S492 T492;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S493 T493;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S494 T494;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S496 T496;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S497 T497;

/* ET_ALIAS_NAME */
typedef struct S498 T498;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S499 T499;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S500 T500;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S501 T501;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S502 T502;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S504 T504;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S506 T506;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S507 T507;

/* SPECIAL [ET_CLIENT] */
typedef struct S508 T508;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S509 T509;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S510 T510;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S511 T511;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S512 T512;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S513 T513;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S514 T514;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S516 T516;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S517 T517;

/* ET_REDECLARED_FEATURE */
typedef struct S518 T518;

/* DS_SPARSE_TABLE_KEYS [ET_FEATURE, INTEGER_32] */
typedef struct S520 T520;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S522 T522;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S523 T523;

/* SPECIAL [ET_FEATURE] */
typedef struct S524 T524;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S525 T525;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S526 T526;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S527 T527;

/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
typedef struct S528 T528;

/* SPECIAL [ET_LIBRARY] */
typedef struct S530 T530;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S531 T531;

/* DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
typedef struct S532 T532;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S533 T533;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S534 T534;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S535 T535;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S536 T536;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S537 T537;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S538 T538;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S539 T539;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S540 T540;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S541 T541;

/* TO_SPECIAL [ET_CLIENT_ITEM] */
typedef struct S542 T542;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S544 T544;

/* ET_UNKNOWN_GROUP */
typedef struct S547 T547;

/* ET_DEFERRED_PROCEDURE */
typedef struct S548 T548;

/* ET_PARENT_FEATURE */
typedef struct S550 T550;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S551 T551;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S552 T552;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S554 T554;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S556 T556;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S557 T557;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S558 T558;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S559 T559;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S560 T560;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S561 T561;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S562 T562;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S563 T563;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S564 T564;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S565 T565;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S566 T566;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S567 T567;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S568 T568;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S569 T569;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S570 T570;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S571 T571;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S572 T572;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S573 T573;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S574 T574;

/* TO_SPECIAL [ET_OBJECT_TEST_LIST] */
typedef struct S575 T575;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S576 T576;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S577 T577;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S578 T578;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
typedef struct S579 T579;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S581 T581;

/* SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S582 T582;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
typedef struct S583 T583;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
typedef struct S584 T584;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S586 T586;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S587 T587;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S588 T588;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S589 T589;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S590 T590;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S591 T591;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S592 T592;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S593 T593;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S594 T594;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S595 T595;

/* TO_SPECIAL [ET_CLIENT_LIST] */
typedef struct S596 T596;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S597 T597;

/* TO_SPECIAL [ET_CLIENT] */
typedef struct S598 T598;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S600 T600;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S602 T602;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S603 T603;

/* ET_RENAME */
typedef struct S604 T604;

/* SPECIAL [ET_RENAME] */
typedef struct S605 T605;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S606 T606;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S608 T608;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S610 T610;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S611 T611;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S613 T613;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S615 T615;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S616 T616;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S618 T618;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S619 T619;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S620 T620;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S622 T622;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S624 T624;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S626 T626;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S627 T627;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S629 T629;

/* DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S630 T630;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S631 T631;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S633 T633;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S634 T634;

/* TO_SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S635 T635;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
typedef struct S637 T637;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
typedef struct S639 T639;

/* TO_SPECIAL [ET_LIBRARY] */
typedef struct S640 T640;

/* TO_SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S641 T641;

/* TO_SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S642 T642;

/* ET_CLUSTERS */
typedef struct S644 T644;

/* ST_SPLITTER */
typedef struct S645 T645;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S646 T646;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S648 T648;

/* ET_CLIENTS */
typedef struct S650 T650;

/* ET_FEATURE_CLAUSE */
typedef struct S651 T651;

/* ET_AGENT_KEYWORD */
typedef struct S653 T653;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S654 T654;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S655 T655;

/* ET_PRECURSOR_KEYWORD */
typedef struct S656 T656;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S658 T658;

/* SPECIAL [ET_POSITION] */
typedef struct S659 T659;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S660 T660;

/* ET_BIT_CONSTANT */
typedef struct S661 T661;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S662 T662;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S663 T663;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S665 T665;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S666 T666;

/* SPECIAL [ET_BREAK] */
typedef struct S667 T667;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S668 T668;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S670 T670;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S671 T671;

/* ET_CURRENT */
typedef struct S672 T672;

/* SPECIAL [ET_CURRENT] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S674 T674;

/* ET_FREE_OPERATOR */
typedef struct S675 T675;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S677 T677;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S680 T680;

/* ET_KEYWORD_OPERATOR */
typedef struct S681 T681;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S683 T683;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S686 T686;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S688 T688;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S689 T689;

/* ET_RESULT */
typedef struct S690 T690;

/* SPECIAL [ET_RESULT] */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S692 T692;

/* ET_RETRY_INSTRUCTION */
typedef struct S693 T693;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S694 T694;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S695 T695;

/* ET_SYMBOL_OPERATOR */
typedef struct S696 T696;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S697 T697;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S698 T698;

/* ET_VOID */
typedef struct S699 T699;

/* SPECIAL [ET_VOID] */
typedef struct S700 T700;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S701 T701;

/* ET_SEMICOLON_SYMBOL */
typedef struct S702 T702;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S703 T703;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S704 T704;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S705 T705;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S706 T706;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S707 T707;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S708 T708;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S709 T709;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S710 T710;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S711 T711;

/* ET_VERBATIM_STRING */
typedef struct S712 T712;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S713 T713;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S714 T714;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S715 T715;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S716 T716;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S717 T717;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S718 T718;

/* ET_TRUE_CONSTANT */
typedef struct S720 T720;

/* ET_FALSE_CONSTANT */
typedef struct S721 T721;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S722 T722;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S723 T723;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S724 T724;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S725 T725;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S726 T726;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S727 T727;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S728 T728;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S729 T729;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S731 T731;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S733 T733;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S735 T735;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S737 T737;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S742 T742;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S744 T744;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S745 T745;

/* ET_CREATE_EXPRESSION */
typedef struct S746 T746;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S747 T747;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S748 T748;

/* ET_MANIFEST_TUPLE */
typedef struct S749 T749;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S750 T750;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S751 T751;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S752 T752;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S753 T753;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S754 T754;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S756 T756;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S758 T758;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S759 T759;

/* ET_CONSTRAINT_CREATOR */
typedef struct S760 T760;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S761 T761;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S762 T762;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S764 T764;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S765 T765;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S766 T766;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S767 T767;

/* UT_VERSION */
typedef struct S768 T768;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S770 T770;

/* ET_BIT_N */
typedef struct S771 T771;

/* ET_BIT_FEATURE */
typedef struct S772 T772;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S773 T773;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S775 T775;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S776 T776;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S777 T777;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S778 T778;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S779 T779;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S780 T780;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S781 T781;

/* SPECIAL [ET_PARENT] */
typedef struct S782 T782;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S783 T783;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S784 T784;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S785 T785;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S787 T787;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S789 T789;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S790 T790;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S791 T791;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S792 T792;

/* SPECIAL [ET_EXPORT] */
typedef struct S794 T794;

/* SPECIAL [ET_CLIENTS] */
typedef struct S795 T795;

/* ET_ALL_EXPORT */
typedef struct S796 T796;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S797 T797;

/* ET_FEATURE_EXPORT */
typedef struct S798 T798;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S799 T799;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S801 T801;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S802 T802;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S803 T803;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S804 T804;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S805 T805;

/* ET_CREATOR */
typedef struct S806 T806;

/* SPECIAL [ET_CREATOR] */
typedef struct S807 T807;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S808 T808;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S809 T809;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S811 T811;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S813 T813;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S814 T814;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S815 T815;

/* ET_CONVERT_FUNCTION */
typedef struct S816 T816;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S817 T817;

/* ET_CONVERT_PROCEDURE */
typedef struct S818 T818;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S819 T819;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S820 T820;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S821 T821;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S822 T822;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S823 T823;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S826 T826;

/* ET_ATTRIBUTE */
typedef struct S827 T827;

/* SPECIAL [ET_CONSTANT] */
typedef struct S829 T829;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S830 T830;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S831 T831;

/* ET_PRECONDITIONS */
typedef struct S832 T832;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S833 T833;

/* ET_COMPOUND */
typedef struct S834 T834;

/* SPECIAL [ET_COMPOUND] */
typedef struct S835 T835;

/* ET_POSTCONDITIONS */
typedef struct S836 T836;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S837 T837;

/* ET_DO_FUNCTION */
typedef struct S838 T838;

/* ET_ONCE_FUNCTION */
typedef struct S839 T839;

/* ET_DEFERRED_FUNCTION */
typedef struct S840 T840;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S843 T843;

/* ET_EXTERNAL_FUNCTION */
typedef struct S844 T844;

/* ET_DO_PROCEDURE */
typedef struct S845 T845;

/* ET_ONCE_PROCEDURE */
typedef struct S846 T846;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S847 T847;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S848 T848;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S849 T849;

/* ET_PREFIX_NAME */
typedef struct S850 T850;

/* ET_PREFIX_FREE_NAME */
typedef struct S851 T851;

/* ET_INFIX_NAME */
typedef struct S852 T852;

/* ET_INFIX_FREE_NAME */
typedef struct S853 T853;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S854 T854;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S855 T855;

/* ET_ALIAS_FREE_NAME */
typedef struct S856 T856;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S858 T858;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S859 T859;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S861 T861;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S862 T862;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S864 T864;

/* ET_LOCAL_VARIABLE */
typedef struct S865 T865;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S866 T866;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S868 T868;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S869 T869;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S871 T871;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S872 T872;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S873 T873;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S874 T874;

/* ET_LOOP_INVARIANTS */
typedef struct S875 T875;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S876 T876;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S877 T877;

/* ET_VARIANT */
typedef struct S878 T878;

/* SPECIAL [ET_VARIANT] */
typedef struct S879 T879;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S880 T880;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S881 T881;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S882 T882;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S883 T883;

/* ET_LIKE_FEATURE */
typedef struct S885 T885;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S886 T886;

/* ET_LIKE_CURRENT */
typedef struct S887 T887;

/* SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S889 T889;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S892 T892;

/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S893 T893;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S894 T894;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S896 T896;

/* ET_CALL_EXPRESSION */
typedef struct S897 T897;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S898 T898;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S899 T899;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S900 T900;

/* ET_BRACKET_EXPRESSION */
typedef struct S901 T901;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S902 T902;

/* SPECIAL [ET_WRITABLE] */
typedef struct S904 T904;

/* ET_ASSIGNMENT */
typedef struct S905 T905;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S906 T906;

/* ET_IF_INSTRUCTION */
typedef struct S907 T907;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S908 T908;

/* ET_INSPECT_INSTRUCTION */
typedef struct S909 T909;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S910 T910;

/* ET_LOOP_INSTRUCTION */
typedef struct S912 T912;

/* ET_DEBUG_INSTRUCTION */
typedef struct S913 T913;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S914 T914;

/* ET_CHECK_INSTRUCTION */
typedef struct S915 T915;

/* ET_BANG_INSTRUCTION */
typedef struct S917 T917;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S918 T918;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S919 T919;

/* ET_QUALIFIED_CALL */
typedef struct S920 T920;

/* ET_CREATE_INSTRUCTION */
typedef struct S921 T921;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S922 T922;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S923 T923;

/* ET_ELSEIF_PART_LIST */
typedef struct S924 T924;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S925 T925;

/* ET_ELSEIF_PART */
typedef struct S926 T926;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S927 T927;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S928 T928;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S929 T929;

/* ET_WHEN_PART_LIST */
typedef struct S930 T930;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S931 T931;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S932 T932;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S933 T933;

/* ET_WHEN_PART */
typedef struct S934 T934;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S935 T935;

/* ET_CHOICE_LIST */
typedef struct S936 T936;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S937 T937;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S938 T938;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S939 T939;

/* SPECIAL [ET_CHOICE] */
typedef struct S941 T941;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S943 T943;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S944 T944;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S946 T946;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S947 T947;

/* ET_CHOICE_RANGE */
typedef struct S948 T948;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S949 T949;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S950 T950;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S951 T951;

/* ET_MANIFEST_STRING_LIST */
typedef struct S952 T952;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S953 T953;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S954 T954;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S955 T955;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S957 T957;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S958 T958;

/* ET_CALL_INSTRUCTION */
typedef struct S959 T959;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S960 T960;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S962 T962;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S963 T963;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S964 T964;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S965 T965;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S966 T966;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S967 T967;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S968 T968;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S969 T969;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S971 T971;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S972 T972;

/* ET_FEATURE_ADDRESS */
typedef struct S973 T973;

/* ET_CURRENT_ADDRESS */
typedef struct S974 T974;

/* ET_RESULT_ADDRESS */
typedef struct S975 T975;

/* ET_EXPRESSION_ADDRESS */
typedef struct S976 T976;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S977 T977;

/* ET_INFIX_EXPRESSION */
typedef struct S978 T978;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S979 T979;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S980 T980;

/* ET_EQUALITY_EXPRESSION */
typedef struct S981 T981;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S982 T982;

/* ET_PREFIX_EXPRESSION */
typedef struct S983 T983;

/* ET_OLD_EXPRESSION */
typedef struct S984 T984;

/* ET_OBJECT_TEST */
typedef struct S985 T985;

/* ET_CALL_AGENT */
typedef struct S986 T986;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S987 T987;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S988 T988;

/* ET_MANIFEST_ARRAY */
typedef struct S989 T989;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S990 T990;

/* ET_STRIP_EXPRESSION */
typedef struct S991 T991;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S992 T992;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S993 T993;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S994 T994;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S995 T995;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S996 T996;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S997 T997;

/* ET_MANIFEST_TYPE */
typedef struct S998 T998;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S999 T999;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S1000 T1000;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S1001 T1001;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S1002 T1002;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S1003 T1003;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1004 T1004;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S1005 T1005;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S1007 T1007;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1008 T1008;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1009 T1009;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1010 T1010;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1011 T1011;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1012 T1012;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1013 T1013;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S1014 T1014;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1015 T1015;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1016 T1016;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1018 T1018;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1020 T1020;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1021 T1021;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1022 T1022;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1023 T1023;

/* ET_TAGGED_ASSERTION */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1027 T1027;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1028 T1028;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1029 T1029;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1030 T1030;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S1031 T1031;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S1032 T1032;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S1033 T1033;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1034 T1034;

/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1035 T1035;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1037 T1037;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1039 T1039;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1041 T1041;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1045 T1045;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1046 T1046;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1047 T1047;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S1048 T1048;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1049 T1049;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1050 T1050;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1051 T1051;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1052 T1052;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1053 T1053;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1054 T1054;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1055 T1055;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1056 T1056;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1058 T1058;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1060 T1060;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
typedef struct S1062 T1062;

/* ET_INTERNAL_ERROR */
typedef struct S1063 T1063;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1066 T1066;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S1067 T1067;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1068 T1068;

/* ARRAY [ET_TYPE] */
typedef struct S1078 T1078;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S1079 T1079;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1080 T1080;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1081 T1081;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1098 T1098;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1099 T1099;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1101 T1101;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1104 T1104;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1107 T1107;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1113 T1113;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1119 T1119;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1122 T1122;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1128 T1128;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1129 T1129;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1131 T1131;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1132 T1132;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1133 T1133;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1134 T1134;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1137 T1137;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1138 T1138;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1139 T1139;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1140 T1140;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1141 T1141;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1142 T1142;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1143 T1143;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1144 T1144;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1145 T1145;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1146 T1146;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1147 T1147;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1148 T1148;

/* TO_SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1149 T1149;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1150 T1150;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1151 T1151;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1152 T1152;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1153 T1153;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1154 T1154;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1155 T1155;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1156 T1156;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1157 T1157;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1158 T1158;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1159 T1159;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1160 T1160;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1161 T1161;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1162 T1162;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1163 T1163;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1164 T1164;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1165 T1165;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1166 T1166;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1167 T1167;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1168 T1168;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1169 T1169;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1170 T1170;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1171 T1171;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1172 T1172;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1173 T1173;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1174 T1174;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1175 T1175;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1176 T1176;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1177 T1177;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1178 T1178;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1179 T1179;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1180 T1180;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1181 T1181;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1182 T1182;

/* TO_SPECIAL [ET_OBJECT_TEST] */
typedef struct S1183 T1183;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1185 T1185;

/* TO_SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1190 T1190;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1191 T1191;

/* ET_CLUSTER_ERROR */
typedef struct S1193 T1193;

/* ET_SYNTAX_ERROR */
typedef struct S1194 T1194;

/* ET_VALIDITY_ERROR */
typedef struct S1195 T1195;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1197 T1197;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1198 T1198;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1199 T1199;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1200 T1200;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1201 T1201;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1220 T1220;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
typedef struct S1223 T1223;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1225 T1225;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S1227 T1227;

/* TO_SPECIAL [ET_CLUSTER] */
typedef struct S1228 T1228;

/* SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1237 T1237;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1238 T1238;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1239 T1239;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1240 T1240;

/* ET_COMPRESSED_POSITION */
typedef struct S1241 T1241;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1242 T1242;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S65 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER_8]] */
struct S112 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S226 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type GETEST */
struct S21 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
	T0* a3; /* config_filename */
	T1 a4; /* must_generate */
	T1 a5; /* must_compile */
	T1 a6; /* must_execute */
	T1 a7; /* fail_on_rescue */
	T1 a8; /* compiler_ge */
	T1 a9; /* compiler_ise */
	T0* a10; /* compile_command */
	T0* a11; /* class_regexp */
	T0* a12; /* feature_regexp */
	T1 a13; /* default_test_included */
	T1 a14; /* is_verbose */
};

/* Struct for type TS_CONFIG */
struct S22 {
	int id;
	T0* a1; /* testgen */
	T0* a2; /* root_class */
	T0* a3; /* compile */
	T0* a4; /* execute */
	T0* a5; /* clusters */
};

/* Struct for type TS_CONFIG_PARSER */
struct S23 {
	int id;
	T0* a1; /* last_config */
	T0* a2; /* variables */
	T1 a3; /* fail_on_rescue */
	T1 a4; /* compiler_ge */
	T1 a5; /* compiler_ise */
	T0* a6; /* filename */
	T0* a7; /* class_regexp */
	T0* a8; /* feature_regexp */
	T0* a9; /* class_prefix */
	T0* a10; /* compile */
	T0* a11; /* execute */
	T0* a12; /* error_handler */
	T0* a13; /* buffer */
	T0* a14; /* yyss */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_parsing_status */
	T6 a21; /* yy_suspended_yystacksize */
	T6 a22; /* yy_suspended_yystate */
	T6 a23; /* yy_suspended_yyn */
	T6 a24; /* yy_suspended_yychar1 */
	T6 a25; /* yy_suspended_index */
	T6 a26; /* yy_suspended_yyss_top */
	T6 a27; /* yy_suspended_yy_goto */
	T0* a28; /* yyr1 */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* yytypes1 */
	T0* a42; /* yytypes2 */
	T6 a43; /* yy_start_state */
	T6 a44; /* line */
	T6 a45; /* column */
	T6 a46; /* position */
	T1 a47; /* yy_more_flag */
	T6 a48; /* yy_more_len */
	T6 a49; /* yy_last_accepting_state */
	T6 a50; /* yy_last_accepting_cpos */
	T1 a51; /* yy_rejected */
	T6 a52; /* yy_state_count */
	T6 a53; /* yy_full_match */
	T6 a54; /* yy_lp */
	T6 a55; /* yy_looking_for_trail_begin */
	T6 a56; /* yy_full_lp */
	T6 a57; /* yy_full_state */
	T6 a58; /* yy_start */
	T6 a59; /* yyvsp1 */
	T6 a60; /* yyvsp2 */
	T6 a61; /* yyvsp3 */
	T6 a62; /* yyvsp4 */
	T0* a63; /* yy_state_stack */
	T0* a64; /* yy_ec */
	T0* a65; /* yy_content_area */
	T0* a66; /* yy_content */
	T0* a67; /* yy_accept */
	T0* a68; /* yy_chk */
	T0* a69; /* yy_base */
	T0* a70; /* yy_def */
	T0* a71; /* yy_meta */
	T0* a72; /* yy_nxt */
	T0* a73; /* yy_acclist */
	T6 a74; /* yyvsc1 */
	T0* a75; /* yyvs1 */
	T0* a76; /* yyspecial_routines1 */
	T0* a77; /* last_any_value */
	T6 a78; /* yyvsc2 */
	T0* a79; /* yyvs2 */
	T0* a80; /* yyspecial_routines2 */
	T0* a81; /* last_et_identifier_value */
	T0* a82; /* testgen */
	T0* a83; /* yyvs4 */
	T6 a84; /* yyvsc4 */
	T0* a85; /* yyspecial_routines4 */
	T0* a86; /* yyvs3 */
	T6 a87; /* yyvsc3 */
	T0* a88; /* yyspecial_routines3 */
	T6 a89; /* code_ */
	T0* a90; /* str_ */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S24 {
	int id;
	T0* a1; /* name */
	T0* a2; /* string_name */
	T6 a3; /* mode */
	T0* a4; /* character_buffer */
	T1 a5; /* end_of_file */
	T14 a6; /* file_pointer */
	T1 a7; /* descriptor_available */
	T2 a8; /* last_character */
	T0* a9; /* last_string */
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S25 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_ARGUMENTS */
struct S26 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type TS_VARIABLES */
struct S27 {
	int id;
	T0* a1; /* variables */
};

/* Struct for type TS_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* error_reported */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* has_error */
	T1 a6; /* has_internal_error */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* is_verbose */
	T1 a9; /* is_pedantic */
	T1 a10; /* is_ise */
	T1 a11; /* is_ge */
};

/* Struct for type KL_STANDARD_FILES */
struct S29 {
	int id;
};

/* Struct for type KL_STDOUT_FILE */
struct S30 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type KL_EXCEPTIONS */
struct S33 {
	int id;
};

/* Struct for type LX_DFA_REGULAR_EXPRESSION */
struct S35 {
	int id;
	T0* a1; /* yy_nxt */
	T1 a2; /* has_caret */
	T1 a3; /* has_dollar */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S36 {
	int id;
};

/* Struct for type UT_VERSION_NUMBER */
struct S37 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_USAGE_MESSAGE */
struct S38 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
struct S39 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TS_TESTCASES */
struct S40 {
	int id;
	T0* a1; /* testcases */
	T0* a2; /* testgen */
	T0* a3; /* error_handler */
	T0* a4; /* tester_parent */
	T0* a5; /* version */
};

/* Struct for type UT_ERROR_HANDLER */
struct S41 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type DP_SHELL_COMMAND */
struct S42 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type YY_FILE_BUFFER */
struct S43 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T1 a9; /* end_of_file */
	T6 a10; /* capacity */
	T1 a11; /* interactive */
	T0* a12; /* file */
};

/* Struct for type YY_BUFFER */
struct S44 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S45 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S46 {
	int id;
};

/* Struct for type SPECIAL [ANY] */
struct S48 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S49 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S50 {
	int id;
	T6 a1; /* compressed_position */
	T6 a2; /* hash_code */
	T0* a3; /* name */
	T6 a4; /* seed */
	T2 a5; /* status_code */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S51 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S52 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [TS_CLUSTER] */
struct S53 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type TS_CLUSTER */
struct S54 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T0* a3; /* class_regexp */
	T0* a4; /* feature_regexp */
	T0* a5; /* class_prefix */
	T1 a6; /* default_test_included */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
struct S55 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]] */
struct S57 {
	int id;
};

/* Struct for type SPECIAL [TS_CLUSTER] */
struct S58 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TS_CLUSTER] */
struct S59 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S60 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type KL_PLATFORM */
struct S62 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S63 {
	int id;
};

/* Struct for type UNIX_FILE_INFO */
struct S66 {
	int id;
	T0* a1; /* buffered_file_info */
	T0* a2; /* file_name */
};

/* Struct for type KL_STRING_ROUTINES */
struct S67 {
	int id;
};

/* Struct for type SPECIAL [STRING_8] */
struct S70 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S71 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S72 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* key_storage */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S73 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S74 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S76 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_internal_error */
	T1 a5; /* has_error */
	T1 a6; /* has_eiffel_error */
	T1 a7; /* is_verbose */
	T1 a8; /* is_pedantic */
	T1 a9; /* is_ise */
	T1 a10; /* is_ge */
};

/* Struct for type TS_OPTION_REGEXP_SYNTAX_ERROR */
struct S77 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TS_EIFFEL_COMPILATION_ERROR */
struct S78 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S79 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S80 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_REGEXP_PARSER */
struct S81 {
	int id;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* error_handler */
	T0* a13; /* name_definitions */
	T0* a14; /* character_classes */
	T6 a15; /* line_nb */
	T0* a16; /* yyss */
	T0* a17; /* input_buffer */
	T6 a18; /* yy_end */
	T6 a19; /* yy_position */
	T6 a20; /* yy_line */
	T6 a21; /* yy_column */
	T6 a22; /* yy_parsing_status */
	T6 a23; /* yy_suspended_yystacksize */
	T6 a24; /* yy_suspended_yystate */
	T6 a25; /* yy_suspended_yyn */
	T6 a26; /* yy_suspended_yychar1 */
	T6 a27; /* yy_suspended_index */
	T6 a28; /* yy_suspended_yyss_top */
	T6 a29; /* yy_suspended_yy_goto */
	T0* a30; /* yyr1 */
	T6 a31; /* yyssp */
	T0* a32; /* yypgoto */
	T0* a33; /* yycheck */
	T0* a34; /* yytable */
	T0* a35; /* yydefgoto */
	T6 a36; /* error_count */
	T1 a37; /* yy_lookahead_needed */
	T6 a38; /* yyerrstatus */
	T0* a39; /* yypact */
	T6 a40; /* last_token */
	T0* a41; /* yytranslate */
	T0* a42; /* yydefact */
	T0* a43; /* yytypes1 */
	T0* a44; /* yytypes2 */
	T6 a45; /* yy_start */
	T6 a46; /* yyvsp1 */
	T6 a47; /* yyvsp2 */
	T6 a48; /* yyvsp3 */
	T6 a49; /* yyvsp4 */
	T6 a50; /* yyvsp5 */
	T1 a51; /* yy_more_flag */
	T6 a52; /* yy_more_len */
	T6 a53; /* line */
	T6 a54; /* column */
	T6 a55; /* position */
	T6 a56; /* yy_start_state */
	T0* a57; /* yy_state_stack */
	T6 a58; /* yy_state_count */
	T0* a59; /* yy_ec */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_content */
	T0* a62; /* yy_accept */
	T6 a63; /* yy_last_accepting_state */
	T6 a64; /* yy_last_accepting_cpos */
	T0* a65; /* yy_chk */
	T0* a66; /* yy_base */
	T0* a67; /* yy_def */
	T0* a68; /* yy_meta */
	T0* a69; /* yy_nxt */
	T6 a70; /* yy_lp */
	T0* a71; /* yy_acclist */
	T6 a72; /* yy_looking_for_trail_begin */
	T6 a73; /* yy_full_match */
	T6 a74; /* yy_full_state */
	T6 a75; /* yy_full_lp */
	T1 a76; /* yy_rejected */
	T6 a77; /* yyvsc1 */
	T0* a78; /* yyvs1 */
	T0* a79; /* yyspecial_routines1 */
	T0* a80; /* last_any_value */
	T6 a81; /* yyvsc2 */
	T0* a82; /* yyvs2 */
	T0* a83; /* yyspecial_routines2 */
	T6 a84; /* last_integer_value */
	T6 a85; /* yyvsc3 */
	T0* a86; /* yyvs3 */
	T0* a87; /* yyspecial_routines3 */
	T0* a88; /* last_lx_symbol_class_value */
	T6 a89; /* yyvsc4 */
	T0* a90; /* yyvs4 */
	T0* a91; /* yyspecial_routines4 */
	T0* a92; /* last_string_value */
	T1 a93; /* in_trail_context */
	T0* a94; /* rule */
	T0* a95; /* yyvs5 */
	T1 a96; /* has_trail_context */
	T6 a97; /* trail_count */
	T6 a98; /* regexp_count */
	T6 a99; /* head_count */
	T6 a100; /* head_line */
	T6 a101; /* regexp_line */
	T6 a102; /* head_column */
	T6 a103; /* regexp_column */
	T6 a104; /* series_count */
	T6 a105; /* series_line */
	T6 a106; /* series_column */
	T6 a107; /* yyvsc5 */
	T0* a108; /* yyspecial_routines5 */
	T6 a109; /* singleton_count */
	T6 a110; /* singleton_line */
	T6 a111; /* singleton_column */
	T0* a112; /* last_string */
	T6 a113; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S82 {
	int id;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T0* a12; /* eof_rules */
	T0* a13; /* eiffel_header */
	T1 a14; /* case_insensitive */
	T1 a15; /* bol_needed */
	T0* a16; /* input_filename */
	T1 a17; /* inspect_used */
	T1 a18; /* actions_separated */
	T0* a19; /* eiffel_code */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S83 {
	int id;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S85 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
struct S86 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
struct S88 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_PAIR [DS_LIST [STRING_8], STRING_8] */
struct S89 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type ET_CLASS */
struct S90 {
	int id;
	T0* a1; /* name */
	T0* a2; /* procedures */
	T0* a3; /* overridden_class */
	T0* a4; /* group */
	T1 a5; /* is_parsed */
	T6 a6; /* time_stamp */
	T0* a7; /* filename */
	T1 a8; /* ancestors_built */
	T1 a9; /* has_ancestors_error */
	T1 a10; /* features_flattened */
	T1 a11; /* has_flattening_error */
	T1 a12; /* interface_checked */
	T1 a13; /* implementation_checked */
	T1 a14; /* has_interface_error */
	T1 a15; /* has_implementation_error */
	T0* a16; /* formal_parameters */
	T6 a17; /* id */
	T1 a18; /* has_deferred_features */
	T0* a19; /* base_class */
	T0* a20; /* class_mark */
	T0* a21; /* ancestors */
	T0* a22; /* queries */
	T0* a23; /* class_keyword */
	T0* a24; /* end_keyword */
	T0* a25; /* master_class */
	T6 a26; /* index */
	T1 a27; /* in_system */
	T1 a28; /* has_syntax_error */
	T0* a29; /* external_keyword */
	T0* a30; /* frozen_keyword */
	T0* a31; /* creators */
	T0* a32; /* convert_features */
	T0* a33; /* feature_clauses */
	T0* a34; /* first_indexing */
	T0* a35; /* second_indexing */
	T0* a36; /* invariants */
	T0* a37; /* obsolete_message */
	T0* a38; /* parents */
	T0* a39; /* leading_break */
	T0* a40; /* providers */
	T1 a41; /* is_basic */
	T0* a42; /* suppliers */
	T1 a43; /* redeclared_signatures_checked */
	T1 a44; /* is_interface */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S91 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S92 {
	int id;
	T6 a1; /* mode */
	T0* a2; /* name */
	T0* a3; /* string_name */
	T14 a4; /* file_pointer */
	T1 a5; /* descriptor_available */
};

/* Struct for type KL_DIRECTORY */
struct S93 {
	int id;
	T0* a1; /* string_name */
	T0* a2; /* name */
	T6 a3; /* mode */
	T14 a4; /* directory_pointer */
	T1 a5; /* end_of_input */
	T0* a6; /* last_entry */
	T0* a7; /* entry_buffer */
	T0* a8; /* lastentry */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S96 {
	int id;
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S97 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S98 {
	int id;
};

/* Struct for type C_STRING */
struct S99 {
	int id;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type ET_FILE_POSITION */
struct S101 {
	int id;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S102 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S103 {
	int id;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type TS_REGEXP_SYNTAX_ERROR */
struct S104 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TO_SPECIAL [INTEGER_32] */
struct S106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [TS_CLUSTER] */
struct S109 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
struct S110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [TS_CLUSTER] */
struct S111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S114 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
struct S115 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S117 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S118 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S119 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S120 {
	int id;
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S121 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
struct S122 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* key_storage */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type LX_SYMBOL_CLASS */
struct S123 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T1 a5; /* sort_needed */
	T1 a6; /* negated */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S124 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S125 {
	int id;
};

/* Struct for type LX_NFA */
struct S126 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S127 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S128 {
	int id;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S129 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S130 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S131 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S132 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_TRAILING_CONTEXT_USED_TWICE_ERROR */
struct S133 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_INTEGER_TOO_LARGE_ERROR */
struct S134 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_IN_BRACKETS_ERROR */
struct S135 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_BRACKET_ERROR */
struct S136 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S137 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S138 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S139 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S140 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S141 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S142 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S143 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S144 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S145 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [LX_RULE] */
struct S146 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_DFA_STATE */
struct S147 {
	int id;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S148 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S149 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S150 {
	int id;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type LX_START_CONDITION */
struct S151 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S152 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S153 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S154 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S155 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S156 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* found_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* key_storage */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S157 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type KL_EQUALITY_TESTER [ET_CLASS] */
struct S158 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
struct S160 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
struct S162 {
	int id;
};

/* Struct for type SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
struct S163 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S164 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S165 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_PATHNAME */
struct S167 {
	int id;
	T1 a1; /* is_relative */
	T6 a2; /* count */
	T0* a3; /* drive */
	T0* a4; /* hostname */
	T0* a5; /* sharename */
	T0* a6; /* components */
};

/* Struct for type MANAGED_POINTER */
struct S168 {
	int id;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S169 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S170 {
	int id;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S173 {
	int id;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type LX_BAD_ITERATION_VALUES_ERROR */
struct S175 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_ITERATION_NOT_POSITIVE_ERROR */
struct S176 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S177 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
struct S178 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [STRING_8] */
struct S179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S180 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S181 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S182 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S183 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S184 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8] */
struct S186 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S188 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type TO_SPECIAL [LX_SYMBOL_CLASS] */
struct S189 {
	int id;
	T0* a1; /* area */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S190 {
	int id;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S193 {
	int id;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S194 {
	int id;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S195 {
	int id;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S196 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S197 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_ACTION */
struct S199 {
	int id;
	T0* a1; /* text */
};

/* Struct for type TO_SPECIAL [LX_NFA] */
struct S200 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S201 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S202 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S204 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S206 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S208 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S209 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S211 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S212 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S213 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ARRAY [LX_DFA_STATE] */
struct S214 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_DFA_STATE] */
struct S215 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S216 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [INTEGER_32] */
struct S217 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [LX_NFA, INTEGER_32] */
struct S219 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S221 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
struct S222 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
struct S223 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S224 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S225 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S228 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S229 {
	int id;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S232 {
	int id;
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S236 {
	int id;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type TO_SPECIAL [LX_RULE] */
struct S238 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [LX_START_CONDITION] */
struct S239 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S240 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [LX_NFA_STATE] */
struct S241 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [LX_DFA_STATE] */
struct S242 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [LX_NFA, INTEGER_32] */
struct S243 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type ET_LACE_CLUSTER */
struct S245 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* overridden_constraint_enabled */
	T0* a6; /* subclusters */
	T1 a7; /* is_preparsed */
	T1 a8; /* is_abstract */
	T1 a9; /* is_read_only */
	T1 a10; /* is_override */
	T1 a11; /* is_recursive */
	T0* a12; /* parent */
	T0* a13; /* exclude */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T1 a16; /* is_implicit */
};

/* Struct for type ET_LACE_CLUSTERS */
struct S246 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_SYSTEM */
struct S247 {
	int id;
	T0* a1; /* classes */
	T0* a2; /* error_handler */
	T0* a3; /* ast_factory */
	T0* a4; /* current_system */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* external_library_pathnames */
	T1 a8; /* console_application_mode */
	T1 a9; /* unknown_builtin_reported */
	T0* a10; /* null_processor */
	T0* a11; /* eiffel_preparser */
	T0* a12; /* eiffel_parser */
	T0* a13; /* provider_checker */
	T0* a14; /* ancestor_builder */
	T0* a15; /* feature_flattener */
	T0* a16; /* interface_checker */
	T0* a17; /* implementation_checker */
	T0* a18; /* flat_implementation_checker */
	T0* a19; /* clusters */
	T1 a20; /* use_attribute_keyword */
	T1 a21; /* use_reference_keyword */
	T0* a22; /* libraries */
	T0* a23; /* dotnet_assemblies */
	T0* a24; /* mapped_classes */
	T1 a25; /* preparse_shallow_mode */
	T1 a26; /* preparse_single_mode */
	T1 a27; /* preparse_multiple_mode */
	T0* a28; /* array_class */
	T0* a29; /* arguments_class */
	T0* a30; /* bit_class */
	T0* a31; /* boolean_class */
	T0* a32; /* boolean_ref_class */
	T0* a33; /* character_8_ref_class */
	T0* a34; /* character_32_ref_class */
	T0* a35; /* disposable_class */
	T0* a36; /* function_class */
	T0* a37; /* identified_routines_class */
	T0* a38; /* integer_8_ref_class */
	T0* a39; /* integer_16_ref_class */
	T0* a40; /* integer_32_ref_class */
	T0* a41; /* integer_64_ref_class */
	T0* a42; /* native_array_class */
	T0* a43; /* natural_8_ref_class */
	T0* a44; /* natural_16_ref_class */
	T0* a45; /* natural_32_ref_class */
	T0* a46; /* natural_64_ref_class */
	T0* a47; /* platform_class */
	T0* a48; /* pointer_class */
	T0* a49; /* pointer_ref_class */
	T0* a50; /* predicate_class */
	T0* a51; /* procedure_class */
	T0* a52; /* real_32_ref_class */
	T0* a53; /* real_64_ref_class */
	T0* a54; /* routine_class */
	T0* a55; /* special_class */
	T0* a56; /* system_string_class */
	T0* a57; /* tuple_class */
	T0* a58; /* tuple_type */
	T0* a59; /* type_class */
	T0* a60; /* typed_pointer_class */
	T0* a61; /* character_class */
	T0* a62; /* character_8_class */
	T0* a63; /* character_type */
	T0* a64; /* character_ref_class */
	T0* a65; /* double_class */
	T0* a66; /* real_64_class */
	T0* a67; /* double_type */
	T0* a68; /* double_ref_class */
	T0* a69; /* integer_class */
	T0* a70; /* integer_32_class */
	T0* a71; /* integer_type */
	T0* a72; /* integer_ref_class */
	T0* a73; /* natural_class */
	T0* a74; /* natural_32_class */
	T0* a75; /* natural_type */
	T0* a76; /* natural_ref_class */
	T0* a77; /* real_class */
	T0* a78; /* real_32_class */
	T0* a79; /* real_type */
	T0* a80; /* real_ref_class */
	T0* a81; /* string_class */
	T0* a82; /* string_8_class */
	T0* a83; /* string_type */
	T0* a84; /* wide_character_class */
	T0* a85; /* character_32_class */
	T0* a86; /* wide_character_ref_class */
	T6 a87; /* registered_class_count */
	T0* a88; /* any_class */
	T0* a89; /* any_type */
	T0* a90; /* any_parent */
	T0* a91; /* any_parents */
	T0* a92; /* any_clients */
	T0* a93; /* array_any_type */
	T0* a94; /* character_8_convert_feature */
	T0* a95; /* character_32_convert_feature */
	T0* a96; /* integer_8_class */
	T0* a97; /* integer_8_convert_feature */
	T0* a98; /* integer_16_class */
	T0* a99; /* integer_16_convert_feature */
	T0* a100; /* integer_32_convert_feature */
	T0* a101; /* integer_64_class */
	T0* a102; /* integer_64_convert_feature */
	T0* a103; /* natural_8_class */
	T0* a104; /* natural_8_convert_feature */
	T0* a105; /* natural_16_class */
	T0* a106; /* natural_16_convert_feature */
	T0* a107; /* natural_32_convert_feature */
	T0* a108; /* natural_64_class */
	T0* a109; /* natural_64_convert_feature */
	T0* a110; /* none_class */
	T0* a111; /* none_type */
	T0* a112; /* array_none_type */
	T0* a113; /* real_32_convert_feature */
	T0* a114; /* real_64_convert_feature */
	T0* a115; /* string_8_convert_feature */
	T0* a116; /* string_32_class */
	T0* a117; /* string_32_convert_feature */
	T0* a118; /* system_object_class */
	T0* a119; /* system_object_parents */
	T0* a120; /* root_class */
	T1 a121; /* classes_modified */
	T1 a122; /* classes_added */
	T1 a123; /* is_preparsed */
	T1 a124; /* preparse_override_mode */
	T1 a125; /* preparse_readonly_mode */
	T0* a126; /* internal_dotnet_assembly_consumer */
	T1 a127; /* cluster_dependence_enabled */
	T0* a128; /* ise_version */
	T1 a129; /* qualified_anchored_types_enabled */
	T1 a130; /* providers_enabled */
	T6 a131; /* default_create_seed */
	T6 a132; /* copy_seed */
	T6 a133; /* is_equal_seed */
	T6 a134; /* routine_call_seed */
	T6 a135; /* function_item_seed */
	T6 a136; /* dispose_seed */
	T6 a137; /* registered_feature_count */
	T6 a138; /* registered_inline_constant_count */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S248 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S250 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S252 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* equality_tester */
	T0* a4; /* internal_cursor */
	T0* a5; /* last_cell */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S253 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type DS_SHELL_SORTER [INTEGER_32] */
struct S256 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S258 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S261 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type PLATFORM */
struct S262 {
	int id;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S263 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S266 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S267 {
	int id;
};

/* Struct for type ET_AST_FACTORY */
struct S268 {
	int id;
};

/* Struct for type ET_SYSTEM */
struct S269 {
	int id;
	T0* a1; /* current_system */
	T0* a2; /* error_handler */
	T0* a3; /* ast_factory */
	T0* a4; /* any_class */
	T0* a5; /* system_object_class */
	T0* a6; /* system_object_parents */
	T0* a7; /* any_parents */
	T0* a8; /* any_parent */
	T0* a9; /* external_include_pathnames */
	T0* a10; /* external_object_pathnames */
	T0* a11; /* external_library_pathnames */
	T1 a12; /* console_application_mode */
	T1 a13; /* unknown_builtin_reported */
	T0* a14; /* null_processor */
	T0* a15; /* eiffel_preparser */
	T0* a16; /* eiffel_parser */
	T0* a17; /* provider_checker */
	T0* a18; /* ancestor_builder */
	T0* a19; /* feature_flattener */
	T0* a20; /* interface_checker */
	T0* a21; /* implementation_checker */
	T0* a22; /* flat_implementation_checker */
	T0* a23; /* libraries */
	T0* a24; /* clusters */
	T0* a25; /* dotnet_assemblies */
	T0* a26; /* classes */
	T0* a27; /* mapped_classes */
	T1 a28; /* preparse_shallow_mode */
	T1 a29; /* preparse_single_mode */
	T1 a30; /* preparse_multiple_mode */
	T0* a31; /* array_class */
	T0* a32; /* arguments_class */
	T0* a33; /* bit_class */
	T0* a34; /* boolean_class */
	T0* a35; /* boolean_ref_class */
	T0* a36; /* character_8_ref_class */
	T0* a37; /* character_32_ref_class */
	T0* a38; /* disposable_class */
	T0* a39; /* function_class */
	T0* a40; /* identified_routines_class */
	T0* a41; /* integer_8_ref_class */
	T0* a42; /* integer_16_ref_class */
	T0* a43; /* integer_32_ref_class */
	T0* a44; /* integer_64_ref_class */
	T0* a45; /* native_array_class */
	T0* a46; /* natural_8_ref_class */
	T0* a47; /* natural_16_ref_class */
	T0* a48; /* natural_32_ref_class */
	T0* a49; /* natural_64_ref_class */
	T0* a50; /* platform_class */
	T0* a51; /* pointer_class */
	T0* a52; /* pointer_ref_class */
	T0* a53; /* predicate_class */
	T0* a54; /* procedure_class */
	T0* a55; /* real_32_ref_class */
	T0* a56; /* real_64_ref_class */
	T0* a57; /* routine_class */
	T0* a58; /* special_class */
	T0* a59; /* system_string_class */
	T0* a60; /* tuple_class */
	T0* a61; /* tuple_type */
	T0* a62; /* type_class */
	T0* a63; /* typed_pointer_class */
	T0* a64; /* character_class */
	T0* a65; /* character_8_class */
	T0* a66; /* character_type */
	T0* a67; /* character_ref_class */
	T0* a68; /* double_class */
	T0* a69; /* real_64_class */
	T0* a70; /* double_type */
	T0* a71; /* double_ref_class */
	T0* a72; /* integer_class */
	T0* a73; /* integer_32_class */
	T0* a74; /* integer_type */
	T0* a75; /* integer_ref_class */
	T0* a76; /* natural_class */
	T0* a77; /* natural_32_class */
	T0* a78; /* natural_type */
	T0* a79; /* natural_ref_class */
	T0* a80; /* real_class */
	T0* a81; /* real_32_class */
	T0* a82; /* real_type */
	T0* a83; /* real_ref_class */
	T0* a84; /* string_class */
	T0* a85; /* string_8_class */
	T0* a86; /* string_type */
	T0* a87; /* wide_character_class */
	T0* a88; /* character_32_class */
	T0* a89; /* wide_character_ref_class */
	T1 a90; /* use_attribute_keyword */
	T1 a91; /* use_reference_keyword */
	T6 a92; /* registered_class_count */
	T0* a93; /* any_type */
	T0* a94; /* any_clients */
	T0* a95; /* array_any_type */
	T0* a96; /* character_8_convert_feature */
	T0* a97; /* character_32_convert_feature */
	T0* a98; /* integer_8_class */
	T0* a99; /* integer_8_convert_feature */
	T0* a100; /* integer_16_class */
	T0* a101; /* integer_16_convert_feature */
	T0* a102; /* integer_32_convert_feature */
	T0* a103; /* integer_64_class */
	T0* a104; /* integer_64_convert_feature */
	T0* a105; /* natural_8_class */
	T0* a106; /* natural_8_convert_feature */
	T0* a107; /* natural_16_class */
	T0* a108; /* natural_16_convert_feature */
	T0* a109; /* natural_32_convert_feature */
	T0* a110; /* natural_64_class */
	T0* a111; /* natural_64_convert_feature */
	T0* a112; /* none_class */
	T0* a113; /* none_type */
	T0* a114; /* array_none_type */
	T0* a115; /* real_32_convert_feature */
	T0* a116; /* real_64_convert_feature */
	T0* a117; /* string_8_convert_feature */
	T0* a118; /* string_32_class */
	T0* a119; /* string_32_convert_feature */
	T1 a120; /* preparse_readonly_mode */
	T1 a121; /* preparse_override_mode */
	T1 a122; /* cluster_dependence_enabled */
	T0* a123; /* ise_version */
	T1 a124; /* qualified_anchored_types_enabled */
	T1 a125; /* providers_enabled */
	T6 a126; /* default_create_seed */
	T6 a127; /* copy_seed */
	T6 a128; /* is_equal_seed */
	T6 a129; /* routine_call_seed */
	T6 a130; /* function_item_seed */
	T6 a131; /* dispose_seed */
	T6 a132; /* registered_feature_count */
	T6 a133; /* registered_inline_constant_count */
	T1 a134; /* classes_modified */
	T1 a135; /* classes_added */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S270 {
	int id;
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S272 {
	int id;
	T1 a1; /* flat_mode */
	T0* a2; /* feature_checker */
	T0* a3; /* precursor_procedures */
	T0* a4; /* precursor_queries */
	T0* a5; /* supplier_builder */
	T0* a6; /* current_class */
	T0* a7; /* no_suppliers */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S273 {
	int id;
	T0* a1; /* eiffel_buffer */
	T6 a2; /* last_text_count */
	T6 a3; /* last_literal_start */
	T0* a4; /* filename */
	T0* a5; /* group */
	T0* a6; /* input_buffer */
	T6 a7; /* yy_start_state */
	T6 a8; /* yy_line */
	T6 a9; /* yy_column */
	T6 a10; /* yy_position */
	T6 a11; /* line */
	T6 a12; /* column */
	T6 a13; /* position */
	T0* a14; /* yy_state_stack */
	T6 a15; /* yy_end */
	T6 a16; /* yy_start */
	T0* a17; /* yy_nxt */
	T0* a18; /* yy_chk */
	T0* a19; /* yy_base */
	T0* a20; /* yy_def */
	T0* a21; /* yy_ec */
	T0* a22; /* yy_meta */
	T0* a23; /* yy_accept */
	T0* a24; /* yy_acclist */
	T0* a25; /* yy_content */
	T0* a26; /* yy_content_area */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S274 {
	int id;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* assertions */
	T0* a10; /* queries */
	T0* a11; /* procedures */
	T0* a12; /* constraints */
	T0* a13; /* providers */
	T0* a14; /* current_class */
	T6 a15; /* last_text_count */
	T6 a16; /* last_literal_start */
	T0* a17; /* filename */
	T0* a18; /* group */
	T0* a19; /* yyss */
	T0* a20; /* input_buffer */
	T0* a21; /* yytranslate */
	T0* a22; /* yyr1 */
	T0* a23; /* yytypes1 */
	T0* a24; /* yytypes2 */
	T0* a25; /* yydefact */
	T0* a26; /* yydefgoto */
	T0* a27; /* yypact */
	T0* a28; /* yypgoto */
	T0* a29; /* yytable */
	T0* a30; /* yycheck */
	T6 a31; /* yy_start_state */
	T6 a32; /* yy_line */
	T6 a33; /* yy_column */
	T6 a34; /* yy_position */
	T6 a35; /* line */
	T6 a36; /* column */
	T6 a37; /* position */
	T0* a38; /* yy_state_stack */
	T6 a39; /* yy_end */
	T6 a40; /* yy_start */
	T0* a41; /* yy_nxt */
	T0* a42; /* yy_chk */
	T0* a43; /* yy_base */
	T0* a44; /* yy_def */
	T0* a45; /* yy_ec */
	T0* a46; /* yy_meta */
	T0* a47; /* yy_accept */
	T0* a48; /* yy_acclist */
	T0* a49; /* yy_content */
	T0* a50; /* yy_content_area */
	T6 a51; /* time_stamp */
	T6 a52; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a60; /* yyssp */
	T6 a61; /* error_count */
	T1 a62; /* yy_lookahead_needed */
	T6 a63; /* yyerrstatus */
	T6 a64; /* last_token */
	T0* a65; /* last_class */
	T0* a66; /* last_clients */
	T0* a67; /* last_export_clients */
	T0* a68; /* last_feature_clause */
	T6 a69; /* last_literal_end */
	T0* a70; /* verbatim_marker */
	T0* a71; /* verbatim_open_white_characters */
	T0* a72; /* verbatim_close_white_characters */
	T1 a73; /* yy_more_flag */
	T6 a74; /* yy_more_len */
	T6 a75; /* yy_last_accepting_state */
	T6 a76; /* yy_last_accepting_cpos */
	T1 a77; /* yy_rejected */
	T6 a78; /* yy_state_count */
	T6 a79; /* yy_full_match */
	T6 a80; /* yy_lp */
	T6 a81; /* yy_looking_for_trail_begin */
	T6 a82; /* yy_full_lp */
	T6 a83; /* yy_full_state */
	T6 a84; /* yyvsp1 */
	T6 a85; /* yyvsp2 */
	T6 a86; /* yyvsp3 */
	T6 a87; /* yyvsp4 */
	T6 a88; /* yyvsp5 */
	T6 a89; /* yyvsp6 */
	T6 a90; /* yyvsp7 */
	T6 a91; /* yyvsp8 */
	T6 a92; /* yyvsp9 */
	T6 a93; /* yyvsp10 */
	T6 a94; /* yyvsp11 */
	T6 a95; /* yyvsp12 */
	T6 a96; /* yyvsp13 */
	T6 a97; /* yyvsp14 */
	T6 a98; /* yyvsp15 */
	T6 a99; /* yyvsp16 */
	T6 a100; /* yyvsp17 */
	T6 a101; /* yyvsp18 */
	T6 a102; /* yyvsp19 */
	T6 a103; /* yyvsp20 */
	T6 a104; /* yyvsp21 */
	T6 a105; /* yyvsp22 */
	T6 a106; /* yyvsp23 */
	T6 a107; /* yyvsp24 */
	T6 a108; /* yyvsp25 */
	T6 a109; /* yyvsp26 */
	T6 a110; /* yyvsp27 */
	T6 a111; /* yyvsp28 */
	T6 a112; /* yyvsp29 */
	T6 a113; /* yyvsp30 */
	T6 a114; /* yyvsp31 */
	T6 a115; /* yyvsp32 */
	T6 a116; /* yyvsp33 */
	T6 a117; /* yyvsp34 */
	T6 a118; /* yyvsp35 */
	T6 a119; /* yyvsp36 */
	T6 a120; /* yyvsp37 */
	T6 a121; /* yyvsp38 */
	T6 a122; /* yyvsp39 */
	T6 a123; /* yyvsp40 */
	T6 a124; /* yyvsp41 */
	T6 a125; /* yyvsp42 */
	T6 a126; /* yyvsp43 */
	T6 a127; /* yyvsp44 */
	T6 a128; /* yyvsp45 */
	T6 a129; /* yyvsp46 */
	T6 a130; /* yyvsp47 */
	T6 a131; /* yyvsp48 */
	T6 a132; /* yyvsp49 */
	T6 a133; /* yyvsp50 */
	T6 a134; /* yyvsp51 */
	T6 a135; /* yyvsp52 */
	T6 a136; /* yyvsp53 */
	T6 a137; /* yyvsp54 */
	T6 a138; /* yyvsp55 */
	T6 a139; /* yyvsp56 */
	T6 a140; /* yyvsp57 */
	T6 a141; /* yyvsp58 */
	T6 a142; /* yyvsp59 */
	T6 a143; /* yyvsp60 */
	T6 a144; /* yyvsp61 */
	T6 a145; /* yyvsp62 */
	T6 a146; /* yyvsp63 */
	T6 a147; /* yyvsp64 */
	T6 a148; /* yyvsp65 */
	T6 a149; /* yyvsp66 */
	T6 a150; /* yyvsp67 */
	T6 a151; /* yyvsp68 */
	T6 a152; /* yyvsp69 */
	T6 a153; /* yyvsp70 */
	T6 a154; /* yyvsp71 */
	T6 a155; /* yyvsp72 */
	T6 a156; /* yyvsp73 */
	T6 a157; /* yyvsp74 */
	T6 a158; /* yyvsp75 */
	T6 a159; /* yyvsp76 */
	T6 a160; /* yyvsp77 */
	T6 a161; /* yyvsp78 */
	T6 a162; /* yyvsp79 */
	T6 a163; /* yyvsp80 */
	T6 a164; /* yyvsp81 */
	T6 a165; /* yyvsp82 */
	T6 a166; /* yyvsp83 */
	T6 a167; /* yyvsp84 */
	T6 a168; /* yyvsp85 */
	T6 a169; /* yyvsp86 */
	T6 a170; /* yyvsp87 */
	T6 a171; /* yyvsp88 */
	T6 a172; /* yyvsp89 */
	T6 a173; /* yyvsp90 */
	T6 a174; /* yyvsp91 */
	T6 a175; /* yyvsp92 */
	T6 a176; /* yyvsp93 */
	T6 a177; /* yyvsp94 */
	T6 a178; /* yyvsp95 */
	T6 a179; /* yyvsp96 */
	T6 a180; /* yyvsp97 */
	T6 a181; /* yyvsp98 */
	T6 a182; /* yyvsp99 */
	T6 a183; /* yyvsp100 */
	T6 a184; /* yyvsp101 */
	T6 a185; /* yyvsp102 */
	T6 a186; /* yyvsp103 */
	T6 a187; /* yyvsp104 */
	T6 a188; /* yyvsp105 */
	T6 a189; /* yyvsp106 */
	T6 a190; /* yyvsp107 */
	T6 a191; /* yyvsp108 */
	T6 a192; /* yyvsp109 */
	T6 a193; /* yyvsp110 */
	T6 a194; /* yyvsp111 */
	T6 a195; /* yyvsp112 */
	T6 a196; /* yyvsp113 */
	T6 a197; /* yyvsp114 */
	T6 a198; /* yyvsp115 */
	T6 a199; /* yyvsp116 */
	T6 a200; /* yyvsp117 */
	T6 a201; /* yyvsp118 */
	T6 a202; /* yyvsc1 */
	T0* a203; /* yyvs1 */
	T0* a204; /* yyspecial_routines1 */
	T0* a205; /* last_any_value */
	T6 a206; /* yyvsc2 */
	T0* a207; /* yyvs2 */
	T0* a208; /* yyspecial_routines2 */
	T0* a209; /* last_et_keyword_value */
	T6 a210; /* yyvsc3 */
	T0* a211; /* yyvs3 */
	T0* a212; /* yyspecial_routines3 */
	T0* a213; /* last_et_agent_keyword_value */
	T6 a214; /* yyvsc4 */
	T0* a215; /* yyvs4 */
	T0* a216; /* yyspecial_routines4 */
	T0* a217; /* last_et_precursor_keyword_value */
	T6 a218; /* yyvsc5 */
	T0* a219; /* yyvs5 */
	T0* a220; /* yyspecial_routines5 */
	T0* a221; /* last_et_symbol_value */
	T6 a222; /* yyvsc6 */
	T0* a223; /* yyvs6 */
	T0* a224; /* yyspecial_routines6 */
	T0* a225; /* last_et_position_value */
	T6 a226; /* yyvsc7 */
	T0* a227; /* yyvs7 */
	T0* a228; /* yyspecial_routines7 */
	T0* a229; /* last_et_bit_constant_value */
	T6 a230; /* yyvsc8 */
	T0* a231; /* yyvs8 */
	T0* a232; /* yyspecial_routines8 */
	T0* a233; /* last_et_boolean_constant_value */
	T6 a234; /* yyvsc9 */
	T0* a235; /* yyvs9 */
	T0* a236; /* yyspecial_routines9 */
	T0* a237; /* last_et_break_value */
	T6 a238; /* yyvsc10 */
	T0* a239; /* yyvs10 */
	T0* a240; /* yyspecial_routines10 */
	T0* a241; /* last_et_character_constant_value */
	T6 a242; /* yyvsc11 */
	T0* a243; /* yyvs11 */
	T0* a244; /* yyspecial_routines11 */
	T0* a245; /* last_et_current_value */
	T6 a246; /* yyvsc12 */
	T0* a247; /* yyvs12 */
	T0* a248; /* yyspecial_routines12 */
	T0* a249; /* last_et_free_operator_value */
	T6 a250; /* yyvsc13 */
	T0* a251; /* yyvs13 */
	T0* a252; /* yyspecial_routines13 */
	T0* a253; /* last_et_identifier_value */
	T6 a254; /* yyvsc14 */
	T0* a255; /* yyvs14 */
	T0* a256; /* yyspecial_routines14 */
	T0* a257; /* last_et_integer_constant_value */
	T6 a258; /* yyvsc15 */
	T0* a259; /* yyvs15 */
	T0* a260; /* yyspecial_routines15 */
	T0* a261; /* last_et_keyword_operator_value */
	T6 a262; /* yyvsc16 */
	T0* a263; /* yyvs16 */
	T0* a264; /* yyspecial_routines16 */
	T0* a265; /* last_et_manifest_string_value */
	T6 a266; /* yyvsc17 */
	T0* a267; /* yyvs17 */
	T0* a268; /* yyspecial_routines17 */
	T0* a269; /* last_et_real_constant_value */
	T6 a270; /* yyvsc18 */
	T0* a271; /* yyvs18 */
	T0* a272; /* yyspecial_routines18 */
	T0* a273; /* last_et_result_value */
	T6 a274; /* yyvsc19 */
	T0* a275; /* yyvs19 */
	T0* a276; /* yyspecial_routines19 */
	T0* a277; /* last_et_retry_instruction_value */
	T6 a278; /* yyvsc20 */
	T0* a279; /* yyvs20 */
	T0* a280; /* yyspecial_routines20 */
	T0* a281; /* last_et_symbol_operator_value */
	T6 a282; /* yyvsc21 */
	T0* a283; /* yyvs21 */
	T0* a284; /* yyspecial_routines21 */
	T0* a285; /* last_et_void_value */
	T6 a286; /* yyvsc22 */
	T0* a287; /* yyvs22 */
	T0* a288; /* yyspecial_routines22 */
	T0* a289; /* last_et_semicolon_symbol_value */
	T6 a290; /* yyvsc23 */
	T0* a291; /* yyvs23 */
	T0* a292; /* yyspecial_routines23 */
	T0* a293; /* last_et_bracket_symbol_value */
	T6 a294; /* yyvsc24 */
	T0* a295; /* yyvs24 */
	T0* a296; /* yyspecial_routines24 */
	T0* a297; /* last_et_question_mark_symbol_value */
	T0* a298; /* last_formal_arguments */
	T0* a299; /* last_local_variables */
	T0* a300; /* last_object_tests */
	T6 a301; /* last_break_end */
	T6 a302; /* last_comment_end */
	T6 a303; /* ms_column */
	T6 a304; /* ms_line */
	T6 a305; /* break_kind */
	T0* a306; /* yyvs42 */
	T0* a307; /* yyvs78 */
	T0* a308; /* yyvs98 */
	T0* a309; /* yyvs102 */
	T0* a310; /* yyvs56 */
	T0* a311; /* yyvs53 */
	T0* a312; /* yyvs67 */
	T0* a313; /* yyvs86 */
	T6 a314; /* yyvsc42 */
	T0* a315; /* yyspecial_routines42 */
	T6 a316; /* yyvsc78 */
	T0* a317; /* yyspecial_routines78 */
	T0* a318; /* yyvs79 */
	T0* a319; /* yyvs82 */
	T6 a320; /* yyvsc79 */
	T0* a321; /* yyspecial_routines79 */
	T0* a322; /* yyvs80 */
	T6 a323; /* yyvsc82 */
	T0* a324; /* yyspecial_routines82 */
	T0* a325; /* yyvs81 */
	T6 a326; /* yyvsc80 */
	T0* a327; /* yyspecial_routines80 */
	T0* a328; /* yyvs54 */
	T0* a329; /* yyvs96 */
	T6 a330; /* yyvsc81 */
	T0* a331; /* yyspecial_routines81 */
	T6 a332; /* yyvsc76 */
	T0* a333; /* yyvs76 */
	T0* a334; /* yyspecial_routines76 */
	T0* a335; /* yyvs74 */
	T0* a336; /* yyvs75 */
	T6 a337; /* yyvsc75 */
	T0* a338; /* yyspecial_routines75 */
	T6 a339; /* yyvsc74 */
	T0* a340; /* yyspecial_routines74 */
	T0* a341; /* yyvs50 */
	T0* a342; /* yyvs49 */
	T6 a343; /* yyvsc49 */
	T0* a344; /* yyspecial_routines49 */
	T0* a345; /* yyvs70 */
	T0* a346; /* yyvs48 */
	T6 a347; /* yyvsc50 */
	T0* a348; /* yyspecial_routines50 */
	T0* a349; /* yyvs88 */
	T6 a350; /* yyvsc48 */
	T0* a351; /* yyspecial_routines48 */
	T0* a352; /* yyvs47 */
	T6 a353; /* yyvsc47 */
	T0* a354; /* yyspecial_routines47 */
	T6 a355; /* yyvsc98 */
	T0* a356; /* yyspecial_routines98 */
	T6 a357; /* yyvsc102 */
	T0* a358; /* yyspecial_routines102 */
	T0* a359; /* yyvs27 */
	T6 a360; /* yyvsc100 */
	T0* a361; /* yyvs100 */
	T0* a362; /* yyspecial_routines100 */
	T0* a363; /* yyvs109 */
	T0* a364; /* yyvs61 */
	T0* a365; /* yyvs87 */
	T0* a366; /* yyvs101 */
	T6 a367; /* yyvsc101 */
	T0* a368; /* yyspecial_routines101 */
	T6 a369; /* yyvsc109 */
	T0* a370; /* yyspecial_routines109 */
	T0* a371; /* yyvs108 */
	T0* a372; /* yyvs69 */
	T0* a373; /* yyvs64 */
	T6 a374; /* yyvsc108 */
	T0* a375; /* yyspecial_routines108 */
	T6 a376; /* yyvsc61 */
	T0* a377; /* yyspecial_routines61 */
	T0* a378; /* yyvs60 */
	T0* a379; /* yyvs44 */
	T6 a380; /* yyvsc60 */
	T0* a381; /* yyspecial_routines60 */
	T0* a382; /* yyvs68 */
	T6 a383; /* yyvsc68 */
	T0* a384; /* yyspecial_routines68 */
	T6 a385; /* yyvsc44 */
	T0* a386; /* yyspecial_routines44 */
	T0* a387; /* yyvs43 */
	T6 a388; /* yyvsc43 */
	T0* a389; /* yyspecial_routines43 */
	T6 a390; /* yyvsc87 */
	T0* a391; /* yyspecial_routines87 */
	T6 a392; /* yyvsc70 */
	T0* a393; /* yyspecial_routines70 */
	T6 a394; /* yyvsc56 */
	T0* a395; /* yyspecial_routines56 */
	T0* a396; /* yyvs55 */
	T6 a397; /* yyvsc55 */
	T0* a398; /* yyspecial_routines55 */
	T6 a399; /* yyvsc53 */
	T0* a400; /* yyspecial_routines53 */
	T0* a401; /* yyvs51 */
	T0* a402; /* yyvs52 */
	T6 a403; /* yyvsc52 */
	T0* a404; /* yyspecial_routines52 */
	T0* a405; /* yyvs114 */
	T6 a406; /* yyvsc51 */
	T0* a407; /* yyspecial_routines51 */
	T6 a408; /* yyvsc114 */
	T0* a409; /* yyspecial_routines114 */
	T0* a410; /* yyvs112 */
	T0* a411; /* yyvs113 */
	T6 a412; /* yyvsc113 */
	T0* a413; /* yyspecial_routines113 */
	T6 a414; /* yyvsc67 */
	T0* a415; /* yyspecial_routines67 */
	T0* a416; /* yyvs66 */
	T6 a417; /* yyvsc66 */
	T0* a418; /* yyspecial_routines66 */
	T0* a419; /* yyvs107 */
	T0* a420; /* yyvs105 */
	T0* a421; /* yyvs33 */
	T6 a422; /* yyvsc107 */
	T0* a423; /* yyspecial_routines107 */
	T0* a424; /* yyvs46 */
	T0* a425; /* yyvs104 */
	T0* a426; /* yyvs91 */
	T0* a427; /* yyvs45 */
	T0* a428; /* yyvs103 */
	T0* a429; /* yyvs73 */
	T0* a430; /* yyvs65 */
	T6 a431; /* yyvsc105 */
	T0* a432; /* yyspecial_routines105 */
	T6 a433; /* yyvsc65 */
	T0* a434; /* yyspecial_routines65 */
	T6 a435; /* yyvsc33 */
	T0* a436; /* yyspecial_routines33 */
	T6 a437; /* yyvsc69 */
	T0* a438; /* yyspecial_routines69 */
	T6 a439; /* yyvsc64 */
	T0* a440; /* yyspecial_routines64 */
	T0* a441; /* yyvs32 */
	T6 a442; /* yyvsc32 */
	T0* a443; /* yyspecial_routines32 */
	T6 a444; /* yyvsc73 */
	T0* a445; /* yyspecial_routines73 */
	T0* a446; /* yyvs72 */
	T0* a447; /* yyvs71 */
	T6 a448; /* yyvsc71 */
	T0* a449; /* yyspecial_routines71 */
	T6 a450; /* yyvsc72 */
	T0* a451; /* yyspecial_routines72 */
	T6 a452; /* yyvsc91 */
	T0* a453; /* yyspecial_routines91 */
	T0* a454; /* yyvs90 */
	T0* a455; /* yyvs89 */
	T6 a456; /* yyvsc89 */
	T0* a457; /* yyspecial_routines89 */
	T6 a458; /* yyvsc90 */
	T0* a459; /* yyspecial_routines90 */
	T0* a460; /* yyvs62 */
	T6 a461; /* yyvsc104 */
	T0* a462; /* yyspecial_routines104 */
	T6 a463; /* yyvsc103 */
	T0* a464; /* yyspecial_routines103 */
	T6 a465; /* yyvsc86 */
	T0* a466; /* yyspecial_routines86 */
	T6 a467; /* yyvsc92 */
	T0* a468; /* yyvs92 */
	T0* a469; /* yyspecial_routines92 */
	T6 a470; /* yyvsc115 */
	T0* a471; /* yyvs115 */
	T0* a472; /* yyspecial_routines115 */
	T6 a473; /* yyvsc45 */
	T0* a474; /* yyspecial_routines45 */
	T6 a475; /* yyvsc112 */
	T0* a476; /* yyspecial_routines112 */
	T6 a477; /* yyvsc27 */
	T0* a478; /* yyspecial_routines27 */
	T0* a479; /* yyvs26 */
	T6 a480; /* yyvsc26 */
	T0* a481; /* yyspecial_routines26 */
	T6 a482; /* yyvsc88 */
	T0* a483; /* yyspecial_routines88 */
	T0* a484; /* yyvs106 */
	T6 a485; /* yyvsc106 */
	T0* a486; /* yyspecial_routines106 */
	T0* a487; /* yyvs85 */
	T0* a488; /* yyvs37 */
	T6 a489; /* yyvsc85 */
	T0* a490; /* yyspecial_routines85 */
	T0* a491; /* yyvs35 */
	T0* a492; /* yyvs118 */
	T0* a493; /* yyvs77 */
	T0* a494; /* yyvs84 */
	T0* a495; /* yyvs57 */
	T0* a496; /* yyvs25 */
	T6 a497; /* yyvsc54 */
	T0* a498; /* yyspecial_routines54 */
	T6 a499; /* yyvsc77 */
	T0* a500; /* yyspecial_routines77 */
	T0* a501; /* yyvs59 */
	T0* a502; /* yyvs58 */
	T6 a503; /* yyvsc59 */
	T0* a504; /* yyspecial_routines59 */
	T6 a505; /* yyvsc58 */
	T0* a506; /* yyspecial_routines58 */
	T0* a507; /* yyvs117 */
	T6 a508; /* yyvsc84 */
	T0* a509; /* yyspecial_routines84 */
	T6 a510; /* yyvsc117 */
	T0* a511; /* yyspecial_routines117 */
	T0* a512; /* yyvs116 */
	T0* a513; /* yyvs41 */
	T6 a514; /* yyvsc116 */
	T0* a515; /* yyspecial_routines116 */
	T6 a516; /* yyvsc41 */
	T0* a517; /* yyspecial_routines41 */
	T0* a518; /* yyvs38 */
	T0* a519; /* yyvs40 */
	T6 a520; /* yyvsc40 */
	T0* a521; /* yyspecial_routines40 */
	T0* a522; /* yyvs39 */
	T6 a523; /* yyvsc38 */
	T0* a524; /* yyspecial_routines38 */
	T6 a525; /* yyvsc39 */
	T0* a526; /* yyspecial_routines39 */
	T0* a527; /* yyvs110 */
	T0* a528; /* yyvs95 */
	T6 a529; /* yyvsc57 */
	T0* a530; /* yyspecial_routines57 */
	T6 a531; /* yyvsc95 */
	T0* a532; /* yyspecial_routines95 */
	T0* a533; /* yyvs94 */
	T6 a534; /* yyvsc94 */
	T0* a535; /* yyspecial_routines94 */
	T6 a536; /* yyvsc62 */
	T0* a537; /* yyspecial_routines62 */
	T6 a538; /* yyvsc37 */
	T0* a539; /* yyspecial_routines37 */
	T6 a540; /* yyvsc110 */
	T0* a541; /* yyspecial_routines110 */
	T0* a542; /* yyvs99 */
	T6 a543; /* yyvsc25 */
	T0* a544; /* yyspecial_routines25 */
	T0* a545; /* yyvs63 */
	T6 a546; /* yyvsc63 */
	T0* a547; /* yyspecial_routines63 */
	T6 a548; /* yyvsc118 */
	T0* a549; /* yyspecial_routines118 */
	T0* a550; /* yyvs36 */
	T0* a551; /* yyvs83 */
	T0* a552; /* yyvs93 */
	T0* a553; /* yyvs111 */
	T0* a554; /* yyvs34 */
	T6 a555; /* yyvsc35 */
	T0* a556; /* yyspecial_routines35 */
	T6 a557; /* yyvsc34 */
	T0* a558; /* yyspecial_routines34 */
	T6 a559; /* yyvsc99 */
	T0* a560; /* yyspecial_routines99 */
	T6 a561; /* yyvsc93 */
	T0* a562; /* yyspecial_routines93 */
	T6 a563; /* yyvsc96 */
	T0* a564; /* yyspecial_routines96 */
	T6 a565; /* yyvsc111 */
	T0* a566; /* yyspecial_routines111 */
	T6 a567; /* yyvsc46 */
	T0* a568; /* yyspecial_routines46 */
	T0* a569; /* yyvs30 */
	T6 a570; /* yyvsc36 */
	T0* a571; /* yyspecial_routines36 */
	T0* a572; /* yyvs31 */
	T0* a573; /* yyvs97 */
	T6 a574; /* yyvsc83 */
	T0* a575; /* yyspecial_routines83 */
	T6 a576; /* yyvsc97 */
	T0* a577; /* yyspecial_routines97 */
	T6 a578; /* yyvsc31 */
	T0* a579; /* yyspecial_routines31 */
	T6 a580; /* yyvsc30 */
	T0* a581; /* yyspecial_routines30 */
	T0* a582; /* yyvs28 */
	T0* a583; /* yyvs29 */
	T6 a584; /* yyvsc29 */
	T0* a585; /* yyspecial_routines29 */
	T6 a586; /* yyvsc28 */
	T0* a587; /* yyspecial_routines28 */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S275 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S276 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* current_class */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S277 {
	int id;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* anchored_type_checker */
	T0* a11; /* signature_checker */
	T0* a12; /* parent_checker */
	T0* a13; /* formal_parameter_checker */
	T0* a14; /* precursor_checker */
	T0* a15; /* precursors */
	T0* a16; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S278 {
	int id;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* current_class */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S279 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S280 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S281 {
	int id;
};

/* Struct for type ET_NONE_GROUP */
struct S283 {
	int id;
	T0* a1; /* name */
	T0* a2; /* universe */
};

/* Struct for type ET_TUPLE_TYPE */
struct S284 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* tuple_keyword */
	T0* a3; /* actual_parameters */
	T0* a4; /* base_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S286 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_CLASS_TYPE */
struct S287 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* base_class */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S288 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY] */
struct S290 {
	int id;
	T0* z1;
};

/* Struct for type TUPLE */
struct S291 {
	int id;
};

/* Struct for type PROCEDURE [ET_DOTNET_ASSEMBLIES, TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S292 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S293 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_DOTNET_ASSEMBLY, TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S296 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S298 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
struct S299 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type ET_CLIENT */
struct S301 {
	int id;
	T0* a1; /* name */
	T0* a2; /* base_class */
};

/* Struct for type ET_PARENT */
struct S302 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a8; /* end_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S304 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S305 {
	int id;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S306 {
	int id;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S307 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CLIENT_LIST */
struct S309 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S312 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* base_class */
	T0* a5; /* unresolved_type */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S313 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
struct S318 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S319 {
	int id;
	T0* z1;
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S322 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
struct S323 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_LACE_SYSTEM] */
struct S324 {
	int id;
	T0* z1;
};

/* Struct for type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S327 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_ADAPTED_DOTNET_ASSEMBLY, TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S328 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(T0*, T0*);
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S331 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S332 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S333 {
	int id;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S334 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S335 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S337 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S338 {
	int id;
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S339 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TUPLE [ET_LACE_CLUSTER] */
struct S341 {
	int id;
	T0* z1;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S342 {
	int id;
	T0* a1; /* current_system */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S344 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S345 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S346 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S347 {
	int id;
	T0* a1; /* type_checker */
	T0* a2; /* current_class */
	T0* a3; /* current_type */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* overloaded_procedures */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* overloaded_queries */
	T0* a11; /* unused_overloaded_queries_list */
	T0* a12; /* best_overloaded_features */
	T0* a13; /* unused_contexts */
	T0* a14; /* current_context */
	T0* a15; /* current_target_type */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S348 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T6 a12; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S349 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S350 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S351 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* supplier_classes */
	T0* a3; /* type_checker */
};

/* Struct for type KL_STDIN_FILE */
struct S352 {
	int id;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* character_buffer */
	T14 a4; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S354 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S355 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S356 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S357 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
struct S358 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S359 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S360 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S361 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S362 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S363 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S364 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S365 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S366 {
	int id;
	T0* a1; /* formal_parameter_sorter */
	T0* a2; /* direct_formal_parameter_sorter */
	T0* a3; /* current_class */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S367 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S368 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S369 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S371 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S372 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S374 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S375 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S376 {
	int id;
	T0* a1; /* rename_table */
	T0* a2; /* export_table */
	T0* a3; /* undefine_table */
	T0* a4; /* redefine_table */
	T0* a5; /* select_table */
	T0* a6; /* replicable_features */
	T0* a7; /* current_class */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S377 {
	int id;
	T0* a1; /* dotnet_features */
	T0* a2; /* other_dotnet_features */
	T0* a3; /* current_class */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S378 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S379 {
	int id;
	T0* a1; /* anchored_type_sorter */
	T0* a2; /* current_class */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S380 {
	int id;
	T0* a1; /* parent_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S381 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S382 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S383 {
	int id;
	T0* a1; /* current_feature */
	T0* a2; /* current_class */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S384 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S385 {
	int id;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* current_class */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S386 {
	int id;
	T0* a1; /* current_class_impl */
	T0* a2; /* current_class */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S387 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
struct S388 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* items */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* cycle */
};

/* Struct for type TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
struct S389 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_LIBRARY] */
struct S390 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S391 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S392 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S393 {
	int id;
	T0* z1;
};

/* Struct for type ET_SYMBOL */
struct S394 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S395 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S397 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S398 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S399 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S400 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_KEYWORD */
struct S401 {
	int id;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S403 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S404 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S405 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S406 {
	int id;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S408 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S409 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S410 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S411 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S412 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S413 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S414 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S415 {
	int id;
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S417 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_QUERY_LIST */
struct S418 {
	int id;
	T6 a1; /* declared_count */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CREATOR_LIST */
struct S419 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S420 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S421 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_INVARIANTS */
struct S423 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T1 a6; /* assertions_checked */
	T1 a7; /* implementation_checked */
	T1 a8; /* has_assertions_error */
	T1 a9; /* has_implementation_error */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S426 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S427 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S429 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S430 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S431 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S432 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_TYPE_CHECKER */
struct S433 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* current_class */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S436 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S437 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S438 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S439 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S440 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S442 {
	int id;
	T6 a1; /* hidden_count */
	T0* a2; /* object_tests */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S443 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S444 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S445 {
	int id;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S446 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S447 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S448 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S449 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S450 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S451 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S452 {
	int id;
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S453 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S454 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S455 {
	int id;
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S456 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S457 {
	int id;
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S458 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
struct S459 {
	int id;
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S460 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST_LIST] */
struct S461 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S462 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S464 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S465 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S466 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S467 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S468 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S470 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S471 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S472 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S473 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
struct S474 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
struct S476 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S478 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S479 {
	int id;
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S480 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S482 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S483 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S484 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S486 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S488 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S489 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S491 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S492 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S493 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S494 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S496 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S497 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S498 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S499 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S500 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S501 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S502 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S504 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S506 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S507 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S508 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S509 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S510 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* equality_tester */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S511 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S512 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S513 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S514 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* equality_tester */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S516 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S517 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S518 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FEATURE, INTEGER_32] */
struct S520 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S522 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S523 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S524 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S525 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S526 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S527 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
struct S528 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S530 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S531 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
struct S532 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S533 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S534 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S535 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S536 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S537 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S538 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S539 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S540 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S541 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENT_ITEM] */
struct S542 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S544 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S547 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S548 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a5; /* arguments */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T6 a9; /* first_seed */
	T0* a10; /* other_seeds */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* postconditions */
	T0* a14; /* is_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T6 a19; /* id */
	T6 a20; /* version */
	T0* a21; /* frozen_keyword */
	T0* a22; /* first_precursor */
	T0* a23; /* other_precursors */
	T1 a24; /* assertions_checked */
	T0* a25; /* synonym */
	T1 a26; /* has_assertions_error */
	T1 a27; /* has_implementation_error */
	T1 a28; /* implementation_checked */
};

/* Struct for type ET_PARENT_FEATURE */
struct S550 {
	int id;
	T0* a1; /* precursor_feature */
	T0* a2; /* parent */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S551 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S552 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S554 {
	int id;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S556 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S557 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S558 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S559 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S560 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S561 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S562 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S563 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S564 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S565 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S566 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S567 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S568 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S569 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S570 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S571 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S572 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S573 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S574 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBJECT_TEST_LIST] */
struct S575 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S576 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S577 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S578 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
struct S579 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S581 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S582 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
struct S583 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
struct S584 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S586 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S587 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S588 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S589 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S590 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S591 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S592 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S593 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S594 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S595 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENT_LIST] */
struct S596 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S597 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLIENT] */
struct S598 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S600 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S602 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S603 {
	int id;
};

/* Struct for type ET_RENAME */
struct S604 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S605 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S606 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S608 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S610 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S611 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S613 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S615 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S616 {
	int id;
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S618 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S619 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S620 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S622 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S624 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S626 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S627 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S629 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S630 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S631 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FEATURE, INTEGER_32] */
struct S633 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S634 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ADAPTED_LIBRARY] */
struct S635 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
struct S637 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
struct S639 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TO_SPECIAL [ET_LIBRARY] */
struct S640 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S641 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S642 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_CLUSTERS */
struct S644 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ST_SPLITTER */
struct S645 {
	int id;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S646 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S648 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_CLIENTS */
struct S650 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S651 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type ET_AGENT_KEYWORD */
struct S653 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S654 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S655 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S656 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S657 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S658 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S659 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S660 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S661 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S662 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S663 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S665 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S666 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S667 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S668 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S670 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S671 {
	int id;
};

/* Struct for type ET_CURRENT */
struct S672 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S673 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S674 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S675 {
	int id;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* free_operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S676 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S677 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S679 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S680 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S681 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S682 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S683 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S685 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S686 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S688 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S689 {
	int id;
};

/* Struct for type ET_RESULT */
struct S690 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S691 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S692 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S693 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S694 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S695 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S696 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S697 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S698 {
	int id;
};

/* Struct for type ET_VOID */
struct S699 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S700 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S701 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S702 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S703 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S704 {
	int id;
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S705 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S706 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S707 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S708 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S709 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S710 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a3; /* compressed_position */
	T0* a4; /* type */
	T0* a5; /* cast_type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S711 {
	int id;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T0* a3; /* type */
	T0* a4; /* cast_type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S712 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
	T0* a9; /* cast_type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S713 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a3; /* compressed_position */
	T0* a4; /* type */
	T0* a5; /* cast_type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S714 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T0* a5; /* sign */
	T0* a6; /* cast_type */
	T0* a7; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S715 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T0* a5; /* sign */
	T0* a6; /* cast_type */
	T0* a7; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S716 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T0* a5; /* sign */
	T0* a6; /* cast_type */
	T0* a7; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S717 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T0* a3; /* sign */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S718 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T0* a3; /* sign */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S720 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S721 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S722 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T0* a3; /* type */
	T0* a4; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S723 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T0* a3; /* type */
	T0* a4; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S724 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S725 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S726 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S727 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S728 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S729 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S730 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S731 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S733 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S735 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S737 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S741 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S742 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S744 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S745 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S746 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S747 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S748 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S749 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S750 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S751 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S752 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S753 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S754 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S756 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S757 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S758 {
	int id;
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S759 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T0* a5; /* name */
	T6 a6; /* index */
	T0* a7; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S760 {
	int id;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S761 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S762 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S764 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S765 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S766 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S767 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type UT_VERSION */
struct S768 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S770 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S771 {
	int id;
	T0* a1; /* constant */
	T6 a2; /* size */
	T0* a3; /* bit_keyword */
	T0* a4; /* base_class */
};

/* Struct for type ET_BIT_FEATURE */
struct S772 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a2; /* name */
	T6 a3; /* size */
	T0* a4; /* base_class */
	T0* a5; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S773 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S775 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S776 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S777 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S778 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S779 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S780 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S781 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S782 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S783 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S784 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S785 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S786 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S787 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S789 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S790 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S791 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S792 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S794 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S795 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S796 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S797 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S798 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S799 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S801 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S802 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S803 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S804 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S805 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S806 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S807 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S808 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S809 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S811 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S813 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S814 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S815 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S816 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S817 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S818 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S819 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S820 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S821 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S822 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S823 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S826 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ATTRIBUTE */
struct S827 {
	int id;
	T6 a1; /* hash_code */
	T6 a2; /* first_seed */
	T0* a3; /* declared_type */
	T0* a4; /* implementation_class */
	T0* a5; /* assigner */
	T0* a6; /* clients */
	T0* a7; /* semicolon */
	T0* a8; /* feature_clause */
	T0* a9; /* first_indexing */
	T0* a10; /* object_tests */
	T0* a11; /* extended_name */
	T0* a12; /* implementation_feature */
	T6 a13; /* id */
	T6 a14; /* version */
	T0* a15; /* frozen_keyword */
	T0* a16; /* other_seeds */
	T0* a17; /* first_precursor */
	T0* a18; /* other_precursors */
	T1 a19; /* assertions_checked */
	T0* a20; /* synonym */
	T1 a21; /* has_assertions_error */
	T1 a22; /* has_implementation_error */
	T1 a23; /* implementation_checked */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S829 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S830 {
	int id;
	T6 a1; /* hash_code */
	T6 a2; /* first_seed */
	T0* a3; /* declared_type */
	T0* a4; /* constant */
	T0* a5; /* implementation_class */
	T0* a6; /* assigner */
	T0* a7; /* clients */
	T0* a8; /* is_keyword */
	T0* a9; /* semicolon */
	T0* a10; /* feature_clause */
	T0* a11; /* first_indexing */
	T0* a12; /* object_tests */
	T0* a13; /* extended_name */
	T0* a14; /* implementation_feature */
	T6 a15; /* id */
	T6 a16; /* version */
	T0* a17; /* frozen_keyword */
	T0* a18; /* other_seeds */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* assertions_checked */
	T0* a22; /* synonym */
	T1 a23; /* has_assertions_error */
	T1 a24; /* has_implementation_error */
	T1 a25; /* implementation_checked */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S831 {
	int id;
	T6 a1; /* hash_code */
	T6 a2; /* first_seed */
	T0* a3; /* declared_type */
	T0* a4; /* implementation_class */
	T0* a5; /* assigner */
	T0* a6; /* clients */
	T0* a7; /* is_keyword */
	T0* a8; /* unique_keyword */
	T0* a9; /* semicolon */
	T0* a10; /* feature_clause */
	T0* a11; /* first_indexing */
	T0* a12; /* object_tests */
	T0* a13; /* extended_name */
	T0* a14; /* implementation_feature */
	T6 a15; /* id */
	T6 a16; /* version */
	T0* a17; /* frozen_keyword */
	T0* a18; /* other_seeds */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* assertions_checked */
	T0* a22; /* synonym */
	T1 a23; /* has_assertions_error */
	T1 a24; /* has_implementation_error */
	T1 a25; /* implementation_checked */
};

/* Struct for type ET_PRECONDITIONS */
struct S832 {
	int id;
	T0* a1; /* require_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S833 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S834 {
	int id;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S835 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S836 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S837 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S838 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* declared_type */
	T0* a5; /* extended_name */
	T0* a6; /* implementation_class */
	T0* a7; /* assigner */
	T0* a8; /* obsolete_message */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* implementation_feature */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* frozen_keyword */
	T0* a25; /* other_seeds */
	T0* a26; /* first_precursor */
	T0* a27; /* other_precursors */
	T1 a28; /* implementation_checked */
	T1 a29; /* assertions_checked */
	T0* a30; /* synonym */
	T1 a31; /* has_assertions_error */
	T1 a32; /* has_implementation_error */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S839 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* declared_type */
	T0* a5; /* extended_name */
	T0* a6; /* implementation_class */
	T0* a7; /* assigner */
	T0* a8; /* obsolete_message */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* implementation_feature */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* frozen_keyword */
	T0* a25; /* other_seeds */
	T0* a26; /* first_precursor */
	T0* a27; /* other_precursors */
	T1 a28; /* implementation_checked */
	T1 a29; /* assertions_checked */
	T0* a30; /* synonym */
	T1 a31; /* has_assertions_error */
	T1 a32; /* has_implementation_error */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S840 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* declared_type */
	T0* a5; /* extended_name */
	T0* a6; /* implementation_class */
	T0* a7; /* assigner */
	T0* a8; /* obsolete_message */
	T0* a9; /* preconditions */
	T0* a10; /* postconditions */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* deferred_keyword */
	T0* a14; /* end_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T0* a19; /* implementation_feature */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* first_precursor */
	T0* a25; /* other_precursors */
	T1 a26; /* assertions_checked */
	T0* a27; /* synonym */
	T1 a28; /* has_assertions_error */
	T1 a29; /* has_implementation_error */
	T1 a30; /* implementation_checked */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S843 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S844 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* language */
	T0* a5; /* implementation_class */
	T0* a6; /* declared_type */
	T0* a7; /* assigner */
	T0* a8; /* obsolete_message */
	T0* a9; /* preconditions */
	T0* a10; /* postconditions */
	T0* a11; /* alias_clause */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* end_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T0* a19; /* extended_name */
	T6 a20; /* builtin_code */
	T0* a21; /* implementation_feature */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* frozen_keyword */
	T0* a25; /* other_seeds */
	T0* a26; /* first_precursor */
	T0* a27; /* other_precursors */
	T1 a28; /* assertions_checked */
	T0* a29; /* synonym */
	T1 a30; /* has_assertions_error */
	T1 a31; /* has_implementation_error */
	T1 a32; /* implementation_checked */
};

/* Struct for type ET_DO_PROCEDURE */
struct S845 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* extended_name */
	T0* a5; /* implementation_class */
	T0* a6; /* obsolete_message */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* end_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T0* a19; /* implementation_feature */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* first_precursor */
	T0* a25; /* other_precursors */
	T1 a26; /* implementation_checked */
	T1 a27; /* assertions_checked */
	T0* a28; /* synonym */
	T1 a29; /* has_assertions_error */
	T1 a30; /* has_implementation_error */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S846 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* extended_name */
	T0* a5; /* implementation_class */
	T0* a6; /* obsolete_message */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* end_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T0* a19; /* implementation_feature */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* first_precursor */
	T0* a25; /* other_precursors */
	T1 a26; /* implementation_checked */
	T1 a27; /* assertions_checked */
	T0* a28; /* synonym */
	T1 a29; /* has_assertions_error */
	T1 a30; /* has_implementation_error */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S847 {
	int id;
	T0* a1; /* arguments */
	T6 a2; /* hash_code */
	T6 a3; /* first_seed */
	T0* a4; /* language */
	T0* a5; /* implementation_class */
	T0* a6; /* extended_name */
	T0* a7; /* obsolete_message */
	T0* a8; /* preconditions */
	T0* a9; /* postconditions */
	T0* a10; /* alias_clause */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* end_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T6 a18; /* builtin_code */
	T0* a19; /* implementation_feature */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* first_precursor */
	T0* a25; /* other_precursors */
	T1 a26; /* assertions_checked */
	T0* a27; /* synonym */
	T1 a28; /* has_assertions_error */
	T1 a29; /* has_implementation_error */
	T1 a30; /* implementation_checked */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S848 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S849 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S850 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S851 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S852 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S853 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S854 {
	int id;
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S855 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S856 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S858 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S859 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S861 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S862 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S864 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S865 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S866 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S868 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S869 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S871 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S872 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S873 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S874 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S875 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S876 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S877 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S878 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S879 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S880 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S881 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S882 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S883 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S885 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* name */
	T1 a4; /* is_procedure */
	T6 a5; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S886 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S887 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S889 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S892 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* braced_type */
	T0* a3; /* qualified_name */
	T0* a4; /* like_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S893 {
	int id;
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S894 {
	int id;
	T0* a1; /* target_type */
	T0* a2; /* qualified_name */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S896 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S897 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S898 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S899 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S900 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S901 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S902 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S904 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S905 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S906 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S907 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S908 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S909 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S910 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S912 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S913 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S914 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S915 {
	int id;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S917 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S918 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S919 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S920 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S921 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S922 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S923 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S924 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S925 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S926 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S927 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S928 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S929 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S930 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S931 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S932 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S933 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S934 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S935 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S936 {
	int id;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S937 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S938 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S939 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S941 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S943 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S944 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S946 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S947 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S948 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S949 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S950 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S951 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S952 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S953 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S954 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S955 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S957 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S958 {
	int id;
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S959 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S960 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S962 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S963 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S964 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S965 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S966 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S967 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* expression */
	T0* a3; /* right_parenthesis */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S968 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S969 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S971 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S972 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S973 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S974 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S975 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S976 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* expression */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S977 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S978 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S979 {
	int id;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S980 {
	int id;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S981 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S982 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S983 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T1 a3; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S984 {
	int id;
	T0* a1; /* old_keyword */
	T0* a2; /* expression */
};

/* Struct for type ET_OBJECT_TEST */
struct S985 {
	int id;
	T0* a1; /* name */
	T0* a2; /* left_brace */
	T0* a3; /* colon */
	T0* a4; /* type */
	T0* a5; /* right_brace */
	T0* a6; /* expression */
};

/* Struct for type ET_CALL_AGENT */
struct S986 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* target */
	T0* a5; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S987 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S988 {
	int id;
	T0* a1; /* once_keyword */
	T0* a2; /* manifest_string */
	T6 a3; /* id */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S989 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S990 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S991 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a2; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S992 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S993 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S994 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S995 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S996 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S997 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S998 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S999 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S1000 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S1001 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S1002 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S1003 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1004 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S1005 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S1007 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1008 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a4; /* implicit_result */
	T0* a5; /* object_tests */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1009 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a4; /* implicit_result */
	T0* a5; /* object_tests */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1010 {
	int id;
	T0* a1; /* language */
	T0* a2; /* object_tests */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* alias_clause */
	T0* a6; /* postconditions */
	T0* a7; /* formal_arguments */
	T0* a8; /* declared_type */
	T0* a9; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1011 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a3; /* object_tests */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1012 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a3; /* object_tests */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1013 {
	int id;
	T0* a1; /* language */
	T0* a2; /* object_tests */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* alias_clause */
	T0* a6; /* postconditions */
	T0* a7; /* formal_arguments */
	T0* a8; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S1014 {
	int id;
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1015 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1016 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1018 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1020 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1021 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S1022 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1023 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1025 {
	int id;
	T0* a1; /* expression */
	T0* a2; /* tag */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1027 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1028 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1029 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1030 {
	int id;
	T0* a1; /* area */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S1031 {
	int id;
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S1032 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S1033 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
struct S1034 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1035 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1037 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1039 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1041 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1045 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1047 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1049 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1052 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1053 {
	int id;
	T0* a1; /* area */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1054 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1055 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1056 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_FEATURE] */
struct S1058 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1060 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
struct S1062 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S1063 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1066 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S1067 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1068 {
	int id;
	T6 a1; /* index */
	T0* a2; /* type_mark */
	T0* a3; /* name */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S1078 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S1079 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* internal_cursor */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1080 {
	int id;
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1081 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1082 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1098 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1100 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1104 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1113 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1119 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1122 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1123 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1129 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1130 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1131 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1132 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1133 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1134 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1135 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1137 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1139 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1140 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1141 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1142 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1143 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1144 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1145 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1146 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1147 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1148 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1149 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1150 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1151 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1152 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1153 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1154 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1155 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1156 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1157 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1158 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1159 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1160 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1161 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1162 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1163 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1164 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1165 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1166 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1167 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1168 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1169 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1170 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1171 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1172 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1173 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1174 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1175 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1176 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1177 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1178 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1180 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1181 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1182 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBJECT_TEST] */
struct S1183 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1185 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_LIKE_FEATURE] */
struct S1190 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1191 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1193 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1194 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1195 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
struct S1197 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1198 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* name_item */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1199 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* name_item */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1200 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1201 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1220 {
	int id;
	T0* a1; /* agent_expression */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
struct S1223 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S1225 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S1227 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TO_SPECIAL [ET_CLUSTER] */
struct S1228 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1237 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
struct S1238 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
struct S1239 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
struct S1240 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1241 {
	int id;
	T6 a1; /* compressed_position */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1242 {
	int id;
	T0* a1; /* area */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
	void (*dispose) (EIF_REFERENCE);
} EIF_TYPE;


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T17 GE_default17;
extern T21 GE_default21;
extern T22 GE_default22;
extern T23 GE_default23;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T33 GE_default33;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T48 GE_default48;
extern T49 GE_default49;
extern T50 GE_default50;
extern T51 GE_default51;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T57 GE_default57;
extern T58 GE_default58;
extern T59 GE_default59;
extern T60 GE_default60;
extern T62 GE_default62;
extern T63 GE_default63;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T73 GE_default73;
extern T74 GE_default74;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T85 GE_default85;
extern T86 GE_default86;
extern T88 GE_default88;
extern T89 GE_default89;
extern T90 GE_default90;
extern T91 GE_default91;
extern T92 GE_default92;
extern T93 GE_default93;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T101 GE_default101;
extern T102 GE_default102;
extern T103 GE_default103;
extern T104 GE_default104;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T114 GE_default114;
extern T115 GE_default115;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T160 GE_default160;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T167 GE_default167;
extern T168 GE_default168;
extern T169 GE_default169;
extern T170 GE_default170;
extern T173 GE_default173;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T180 GE_default180;
extern T181 GE_default181;
extern T182 GE_default182;
extern T183 GE_default183;
extern T184 GE_default184;
extern T186 GE_default186;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T199 GE_default199;
extern T200 GE_default200;
extern T201 GE_default201;
extern T202 GE_default202;
extern T204 GE_default204;
extern T206 GE_default206;
extern T208 GE_default208;
extern T209 GE_default209;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T219 GE_default219;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T228 GE_default228;
extern T229 GE_default229;
extern T232 GE_default232;
extern T236 GE_default236;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T243 GE_default243;
extern T245 GE_default245;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T250 GE_default250;
extern T252 GE_default252;
extern T253 GE_default253;
extern T256 GE_default256;
extern T258 GE_default258;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T283 GE_default283;
extern T284 GE_default284;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T296 GE_default296;
extern T298 GE_default298;
extern T299 GE_default299;
extern T301 GE_default301;
extern T302 GE_default302;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T309 GE_default309;
extern T312 GE_default312;
extern T313 GE_default313;
extern T318 GE_default318;
extern T319 GE_default319;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T327 GE_default327;
extern T328 GE_default328;
extern T331 GE_default331;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T335 GE_default335;
extern T337 GE_default337;
extern T338 GE_default338;
extern T339 GE_default339;
extern T341 GE_default341;
extern T342 GE_default342;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T352 GE_default352;
extern T354 GE_default354;
extern T355 GE_default355;
extern T356 GE_default356;
extern T357 GE_default357;
extern T358 GE_default358;
extern T359 GE_default359;
extern T360 GE_default360;
extern T361 GE_default361;
extern T362 GE_default362;
extern T363 GE_default363;
extern T364 GE_default364;
extern T365 GE_default365;
extern T366 GE_default366;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T371 GE_default371;
extern T372 GE_default372;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T395 GE_default395;
extern T397 GE_default397;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T408 GE_default408;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T420 GE_default420;
extern T421 GE_default421;
extern T423 GE_default423;
extern T426 GE_default426;
extern T427 GE_default427;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T432 GE_default432;
extern T433 GE_default433;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T464 GE_default464;
extern T465 GE_default465;
extern T466 GE_default466;
extern T467 GE_default467;
extern T468 GE_default468;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T473 GE_default473;
extern T474 GE_default474;
extern T476 GE_default476;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T486 GE_default486;
extern T488 GE_default488;
extern T489 GE_default489;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T504 GE_default504;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T520 GE_default520;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T528 GE_default528;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T536 GE_default536;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T544 GE_default544;
extern T547 GE_default547;
extern T548 GE_default548;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T554 GE_default554;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T562 GE_default562;
extern T563 GE_default563;
extern T564 GE_default564;
extern T565 GE_default565;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T600 GE_default600;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T608 GE_default608;
extern T610 GE_default610;
extern T611 GE_default611;
extern T613 GE_default613;
extern T615 GE_default615;
extern T616 GE_default616;
extern T618 GE_default618;
extern T619 GE_default619;
extern T620 GE_default620;
extern T622 GE_default622;
extern T624 GE_default624;
extern T626 GE_default626;
extern T627 GE_default627;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T633 GE_default633;
extern T634 GE_default634;
extern T635 GE_default635;
extern T637 GE_default637;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T644 GE_default644;
extern T645 GE_default645;
extern T646 GE_default646;
extern T648 GE_default648;
extern T650 GE_default650;
extern T651 GE_default651;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T665 GE_default665;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T685 GE_default685;
extern T686 GE_default686;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T720 GE_default720;
extern T721 GE_default721;
extern T722 GE_default722;
extern T723 GE_default723;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T733 GE_default733;
extern T735 GE_default735;
extern T737 GE_default737;
extern T741 GE_default741;
extern T742 GE_default742;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T811 GE_default811;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T826 GE_default826;
extern T827 GE_default827;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T835 GE_default835;
extern T836 GE_default836;
extern T837 GE_default837;
extern T838 GE_default838;
extern T839 GE_default839;
extern T840 GE_default840;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T848 GE_default848;
extern T849 GE_default849;
extern T850 GE_default850;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T858 GE_default858;
extern T859 GE_default859;
extern T861 GE_default861;
extern T862 GE_default862;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T868 GE_default868;
extern T869 GE_default869;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T889 GE_default889;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T941 GE_default941;
extern T943 GE_default943;
extern T944 GE_default944;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1018 GE_default1018;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1025 GE_default1025;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1037 GE_default1037;
extern T1039 GE_default1039;
extern T1041 GE_default1041;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1058 GE_default1058;
extern T1060 GE_default1060;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1185 GE_default1185;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1220 GE_default1220;
extern T1223 GE_default1223;
extern T1225 GE_default1225;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;

extern T0* GE_ms8(char* s, T6 c);
extern T0* GE_ms32(char* s, T6 c);
/* Call to ANY.is_equal */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to ANY.same_type */
extern T1 T19x27T0(T0* C, T0* a1);
/* Call to UT_ERROR.default_message */
extern T0* T34x3213(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T64x4789(T0* C);
/* Call to ET_POSITION.column */
extern T6 T64x4788(T0* C);
/* Call to ET_POSITION.line */
extern T6 T64x4787(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T64x4793(T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T191x8542(T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T191x8545T6(T0* C, T6 a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].cloned_object */
extern T0* T191x5007(T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T254x9293T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T254x9298(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T254x9280T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T254x9212(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T254x9295(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T254x22(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T254x9297(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T255x4657(T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T255x4658(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T255x4698(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T255x22(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T255x4654T0(T0* C, T0* a1);
/* Call to ET_TYPE_MARK.text */
extern T0* T285x6929(T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T285x4698(T0* C);
/* Call to ET_TYPE_MARK.is_separate */
extern T1 T285x6925(T0* C);
/* Call to ET_TYPE_MARK.is_expanded */
extern T1 T285x6923(T0* C);
/* Call to ET_TYPE_MARK.is_bang */
extern T1 T285x6927(T0* C);
/* Call to ET_TYPE_MARK.is_question_mark */
extern T1 T285x6926(T0* C);
/* Call to ET_TYPE_MARK.is_keyword */
extern T1 T285x6928(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T287x6736(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T287x6744(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T287x6714(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T287x6747(T0* C);
/* Call to ET_CLASS_TYPE.base_class */
extern T0* T287x6882(T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T303x6743(T0* C);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T303x6882(T0* C);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T303x6736(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T311x6862(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T311x6863(T0* C);
/* Call to ET_TYPE.named_type */
extern T0* T314x6802T0(T0* C, T0* a1);
/* Call to ET_TYPE.base_class */
extern T0* T314x6796T0(T0* C, T0* a1);
/* Call to ET_TYPE.base_type_actual */
extern T0* T314x6799T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T314x6807T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T314x6822T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.to_text */
extern T0* T314x6849(T0* C);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T314x6830T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.position */
extern T0* T314x4698(T0* C);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T314x6829T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T314x6825T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T314x6827T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T314x6826T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T314x6831T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T314x6828T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_GROUP.full_lower_name */
extern T0* T330x8694T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T330x8695(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T330x8683(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T330x8679(T0* C);
/* Call to ET_GROUP.universe */
extern T0* T330x8687(T0* C);
/* Call to ET_GROUP.current_system */
extern T0* T330x8688(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T330x8681(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T330x8680(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T330x8697(T0* C);
/* Call to ET_QUERY.type */
extern T0* T428x9296(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T428x9293T6(T0* C, T6 a1);
/* Call to ET_QUERY.first_seed */
extern T6 T428x9298(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T428x9212(T0* C);
/* Call to ET_QUERY.name */
extern T0* T428x9295(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T428x22(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T428x9280T0(T0* C, T0* a1);
/* Call to ET_QUERY.arguments */
extern T0* T428x9297(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T435x9297(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T435x9293T6(T0* C, T6 a1);
/* Call to ET_FEATURE.lower_name */
extern T0* T435x9211(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T435x9295(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T435x9308(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T463x4739(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T469x6874T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T498x4693T0(T0* C, T0* a1);
/* Call to ET_TYPE_ITEM.type */
extern T0* T543x6854(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T549x4711(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T549x4712(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T678x21245(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T678x21254(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T678x4698(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T678x21246(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T678x21256(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T678x21247(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T684x4698(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T684x21291(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T763x4711(T0* C);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T769x20737(T0* C);
/* Call to ET_LIKE_TYPE.type_mark */
extern T0* T769x20736(T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T769x4698(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T774x6872T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T774x6870(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T774x6871(T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T824x6876(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T841x21303(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T890x6878(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T890x4698(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T891x4714(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T911x4735(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T942x4766(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T970x4734(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T1019x4753(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T1024x4683(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T1024x4682(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T1024x4681(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T1024x4680(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T1024x4679(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T1024x4678(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T1024x4677(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T1024x4676(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T1024x4675(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T1024x4674(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T1024x4673(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T1024x4672(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T1024x4671(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T1024x4669(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T1024x4668(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T1024x4667(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T1024x4666(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T1024x4689(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T1024x4687(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T1024x4686(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1068x20256(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1071x6858T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T1071x6863(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T1226x6799T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T1226x6796T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T1226x6830T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T1226x6829T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T1226x6825T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T1226x6831T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T1226x6826T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T1226x6828T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T1226x6827T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T1226x6822T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to LX_TRANSITION [LX_NFA_STATE].record */
extern void T191x8546T0(T0* C, T0* a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].set_target */
extern void T191x8543T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T254x9328T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T254x9274T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T254x9208(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T254x9207(T0* C);
/* Call to ET_FEATURE_NAME.reset */
extern void T255x4655(T0* C);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T271x10678T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T271x10677T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T271x10644T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T271x10536T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T271x10537T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T271x10562T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T271x10611T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T271x10616T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T271x10555T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T271x10699T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T271x10614T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T271x10643T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T271x10554T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.reset */
extern void T303x6794(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T314x6850T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T314x4707T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T314x6794(T0* C);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T314x6795(T0* C);
/* Call to ET_QUERY.set_object_tests */
extern void T428x9328T0(T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T428x9274T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T428x9208(T0* C);
/* Call to ET_QUERY.reset */
extern void T428x9207(T0* C);
/* Call to ET_FEATURE.set_id */
extern void T435x9264T6(T0* C, T6 a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T549x4710(T0* C);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T678x21260(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T678x21257T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T678x21258T0(T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T769x6850T0(T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T769x6795(T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T769x6794(T0* C);
/* Call to ET_ASSIGNER.reset */
extern void T825x4715(T0* C);
/* Call to ET_EXPRESSION.reset */
extern void T870x4736(T0* C);
/* Call to ET_INSTRUCTION.reset */
extern void T895x4807(T0* C);
/* Call to ET_CHOICE.reset */
extern void T940x4761(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T945x4761(T0* C);
/* Call to ET_AGENT_TARGET.reset */
extern void T1006x4748(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T1017x4748(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T1073x4655(T0* C);
/* Call to ET_ASSERTION.reset */
extern void T1074x4736(T0* C);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type GETEST */
extern T0* GE_new21(T1 initialize);
/* New instance of type TS_CONFIG */
extern T0* GE_new22(T1 initialize);
/* New instance of type TS_CONFIG_PARSER */
extern T0* GE_new23(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new24(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new25(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new26(T1 initialize);
/* New instance of type TS_VARIABLES */
extern T0* GE_new27(T1 initialize);
/* New instance of type TS_ERROR_HANDLER */
extern T0* GE_new28(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new29(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new30(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new33(T1 initialize);
/* New instance of type LX_DFA_REGULAR_EXPRESSION */
extern T0* GE_new35(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new36(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new37(T1 initialize);
/* New instance of type UT_USAGE_MESSAGE */
extern T0* GE_new38(T1 initialize);
/* New instance of type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
extern T0* GE_new39(T1 initialize);
/* New instance of type TS_TESTCASES */
extern T0* GE_new40(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new41(T1 initialize);
/* New instance of type DP_SHELL_COMMAND */
extern T0* GE_new42(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new43(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new44(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new45(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new46(T1 initialize);
/* New instance of type SPECIAL [ANY] */
extern T0* GE_new48(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ANY] */
extern T0* GE_new49(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new50(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new51(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new52(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [TS_CLUSTER] */
extern T0* GE_new53(T1 initialize);
/* New instance of type TS_CLUSTER */
extern T0* GE_new54(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
extern T0* GE_new55(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]] */
extern T0* GE_new57(T1 initialize);
/* New instance of type SPECIAL [TS_CLUSTER] */
extern T0* GE_new58(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TS_CLUSTER] */
extern T0* GE_new59(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new60(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new62(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new63(T1 initialize);
/* New instance of type UNIX_FILE_INFO */
extern T0* GE_new66(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new67(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new70(T6 a1, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new71(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new72(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new73(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new74(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new76(T1 initialize);
/* New instance of type TS_OPTION_REGEXP_SYNTAX_ERROR */
extern T0* GE_new77(T1 initialize);
/* New instance of type TS_EIFFEL_COMPILATION_ERROR */
extern T0* GE_new78(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new79(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new80(T1 initialize);
/* New instance of type LX_REGEXP_PARSER */
extern T0* GE_new81(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new82(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new83(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new85(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
extern T0* GE_new86(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
extern T0* GE_new88(T1 initialize);
/* New instance of type DS_PAIR [DS_LIST [STRING_8], STRING_8] */
extern T0* GE_new89(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new90(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new91(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new92(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new93(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new96(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new97(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new98(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new99(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new101(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new102(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new103(T1 initialize);
/* New instance of type TS_REGEXP_SYNTAX_ERROR */
extern T0* GE_new104(T1 initialize);
/* New instance of type TO_SPECIAL [INTEGER_32] */
extern T0* GE_new106(T1 initialize);
/* New instance of type TO_SPECIAL [ANY] */
extern T0* GE_new107(T1 initialize);
/* New instance of type TO_SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new108(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [TS_CLUSTER] */
extern T0* GE_new109(T1 initialize);
/* New instance of type TO_SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]] */
extern T0* GE_new110(T1 initialize);
/* New instance of type TO_SPECIAL [TS_CLUSTER] */
extern T0* GE_new111(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new114(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
extern T0* GE_new115(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new117(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new118(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new119(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new120(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new121(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new122(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new123(T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new125(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new126(T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new127(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new128(T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new129(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new130(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new131(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new132(T1 initialize);
/* New instance of type LX_TRAILING_CONTEXT_USED_TWICE_ERROR */
extern T0* GE_new133(T1 initialize);
/* New instance of type LX_INTEGER_TOO_LARGE_ERROR */
extern T0* GE_new134(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_IN_BRACKETS_ERROR */
extern T0* GE_new135(T1 initialize);
/* New instance of type LX_MISSING_BRACKET_ERROR */
extern T0* GE_new136(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new137(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new138(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new139(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new140(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new141(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new142(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new143(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new144(T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new145(T6 a1, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new146(T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new147(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new148(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new149(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new150(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new151(T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new152(T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new153(T6 a1, T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new154(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new155(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new156(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new157(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [ET_CLASS] */
extern T0* GE_new158(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
extern T0* GE_new160(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
extern T0* GE_new162(T1 initialize);
/* New instance of type SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
extern T0* GE_new163(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new164(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new165(T6 a1, T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new167(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new168(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new169(T6 a1, T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new170(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new173(T1 initialize);
/* New instance of type LX_BAD_ITERATION_VALUES_ERROR */
extern T0* GE_new175(T1 initialize);
/* New instance of type LX_ITERATION_NOT_POSITIVE_ERROR */
extern T0* GE_new176(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new177(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new178(T1 initialize);
/* New instance of type TO_SPECIAL [STRING_8] */
extern T0* GE_new179(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new180(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new181(T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new182(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new183(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new184(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new186(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new188(T1 initialize);
/* New instance of type TO_SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new189(T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new190(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new193(T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new194(T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new195(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new196(T6 a1, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new197(T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new199(T1 initialize);
/* New instance of type TO_SPECIAL [LX_NFA] */
extern T0* GE_new200(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new201(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new202(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new204(T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new206(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new208(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new209(T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new211(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new212(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new213(T1 initialize);
/* New instance of type ARRAY [LX_DFA_STATE] */
extern T0* GE_new214(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new215(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new216(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new217(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [LX_NFA, INTEGER_32] */
extern T0* GE_new219(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new221(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS] */
extern T0* GE_new222(T1 initialize);
/* New instance of type TO_SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]] */
extern T0* GE_new223(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLASS] */
extern T0* GE_new224(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new225(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new228(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new229(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new232(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new236(T1 initialize);
/* New instance of type TO_SPECIAL [LX_RULE] */
extern T0* GE_new238(T1 initialize);
/* New instance of type TO_SPECIAL [LX_START_CONDITION] */
extern T0* GE_new239(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new240(T1 initialize);
/* New instance of type TO_SPECIAL [LX_NFA_STATE] */
extern T0* GE_new241(T1 initialize);
/* New instance of type TO_SPECIAL [LX_DFA_STATE] */
extern T0* GE_new242(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new243(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new245(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new246(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new247(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new248(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new250(T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new252(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new253(T1 initialize);
/* New instance of type DS_SHELL_SORTER [INTEGER_32] */
extern T0* GE_new256(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new258(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new261(T1 initialize);
/* New instance of type PLATFORM */
extern T0* GE_new262(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new263(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new266(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new268(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new269(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new270(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new272(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new273(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new274(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new275(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new276(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new277(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new278(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new279(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new280(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new281(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new283(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new288(T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new290(T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new291(T1 initialize);
/* New instance of type PROCEDURE [ET_DOTNET_ASSEMBLIES, TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new292(T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new293(T1 initialize);
/* New instance of type PROCEDURE [ET_DOTNET_ASSEMBLY, TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new296(T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new298(T1 initialize);
/* New instance of type PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
extern T0* GE_new299(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new301(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new302(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new304(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new305(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new306(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new307(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new309(T1 initialize);
/* New instance of type ET_GENERIC_CLASS_TYPE */
extern T0* GE_new312(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new313(T1 initialize);
/* New instance of type PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
extern T0* GE_new318(T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new319(T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new322(T1 initialize);
/* New instance of type PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new323(T1 initialize);
/* New instance of type TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new324(T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new327(T1 initialize);
/* New instance of type PROCEDURE [ET_ADAPTED_DOTNET_ASSEMBLY, TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new328(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new331(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new333(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new334(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new335(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new337(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new338(T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new339(T1 initialize);
/* New instance of type TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new341(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new342(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new344(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new345(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new346(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new347(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new348(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new349(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new350(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new351(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new352(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new354(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new355(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_KEYWORD] */
extern T0* GE_new356(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_SYMBOL] */
extern T0* GE_new357(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
extern T0* GE_new358(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new359(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new360(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new361(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
extern T0* GE_new362(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new363(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new364(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new365(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new366(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new367(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new368(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new369(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new371(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new372(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new374(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new375(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new376(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new377(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new378(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new379(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new380(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new381(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new382(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new383(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new385(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new386(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new387(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
extern T0* GE_new388(T1 initialize);
/* New instance of type TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
extern T0* GE_new389(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIBRARY] */
extern T0* GE_new390(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new391(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new392(T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new393(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new394(T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new395(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new397(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new398(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new399(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new400(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new401(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new403(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new404(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new405(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new406(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new408(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new409(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new410(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new411(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new412(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new413(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new414(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new415(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new417(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new418(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new419(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new420(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new421(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new423(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new426(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new429(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new430(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new431(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new432(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new433(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new436(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new437(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new438(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new439(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new440(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new442(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new443(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new444(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new445(T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new446(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new447(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new448(T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new449(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new450(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new451(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new452(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new453(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new454(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
extern T0* GE_new455(T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD] */
extern T0* GE_new456(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
extern T0* GE_new457(T1 initialize);
/* New instance of type SPECIAL [ET_SYMBOL] */
extern T0* GE_new458(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
extern T0* GE_new459(T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new460(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new461(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new462(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new464(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new465(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new466(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new467(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
extern T0* GE_new468(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_TYPE] */
extern T0* GE_new470(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
extern T0* GE_new471(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new472(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new473(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new474(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new476(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new478(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new479(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new480(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new482(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new483(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new484(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new486(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new488(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new489(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new491(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new492(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new493(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new494(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new496(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new497(T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new498(T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new499(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new500(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new501(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new502(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new504(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new506(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new507(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new508(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new509(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new510(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new511(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new512(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new513(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new514(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new516(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new517(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new518(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_FEATURE, INTEGER_32] */
extern T0* GE_new520(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new522(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new523(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new524(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new525(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new526(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new527(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new528(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new530(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new531(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
extern T0* GE_new532(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new533(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new534(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new535(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new536(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new537(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new538(T6 a1, T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new539(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new540(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new541(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new542(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new544(T6 a1, T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new547(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new548(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new550(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new551(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new552(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new554(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new556(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new557(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new558(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new559(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new560(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new561(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new562(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new563(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new564(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new565(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new566(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new567(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new568(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PROCEDURE] */
extern T0* GE_new569(T1 initialize);
/* New instance of type TO_SPECIAL [ET_QUERY] */
extern T0* GE_new570(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new571(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new572(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD] */
extern T0* GE_new573(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SYMBOL] */
extern T0* GE_new574(T1 initialize);
/* New instance of type TO_SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new575(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new576(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
extern T0* GE_new577(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new578(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
extern T0* GE_new579(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new581(T1 initialize);
/* New instance of type SPECIAL [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new582(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new583(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new584(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new586(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new587(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new588(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new589(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE] */
extern T0* GE_new590(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new591(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new592(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new593(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new594(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new595(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new596(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new597(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT] */
extern T0* GE_new598(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new600(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new602(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new603(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new604(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new605(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new606(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new608(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new610(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new611(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new613(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new615(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new616(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new618(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new619(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new620(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new622(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new624(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new626(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new627(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new629(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new630(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new631(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new633(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE] */
extern T0* GE_new634(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new635(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new637(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new639(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIBRARY] */
extern T0* GE_new640(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new641(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new642(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new644(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new645(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new646(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new648(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new650(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new651(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new653(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_KEYWORD] */
extern T0* GE_new654(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
extern T0* GE_new655(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new656(T1 initialize);
/* New instance of type SPECIAL [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new657(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new658(T1 initialize);
/* New instance of type SPECIAL [ET_POSITION] */
extern T0* GE_new659(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_POSITION] */
extern T0* GE_new660(T1 initialize);
/* New instance of type ET_BIT_CONSTANT */
extern T0* GE_new661(T1 initialize);
/* New instance of type SPECIAL [ET_BIT_CONSTANT] */
extern T0* GE_new662(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
extern T0* GE_new663(T1 initialize);
/* New instance of type SPECIAL [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new665(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new666(T1 initialize);
/* New instance of type SPECIAL [ET_BREAK] */
extern T0* GE_new667(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BREAK] */
extern T0* GE_new668(T1 initialize);
/* New instance of type SPECIAL [ET_CHARACTER_CONSTANT] */
extern T0* GE_new670(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
extern T0* GE_new671(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new672(T1 initialize);
/* New instance of type SPECIAL [ET_CURRENT] */
extern T0* GE_new673(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CURRENT] */
extern T0* GE_new674(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new675(T1 initialize);
/* New instance of type SPECIAL [ET_FREE_OPERATOR] */
extern T0* GE_new676(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
extern T0* GE_new677(T1 initialize);
/* New instance of type SPECIAL [ET_INTEGER_CONSTANT] */
extern T0* GE_new679(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
extern T0* GE_new680(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new681(T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD_OPERATOR] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
extern T0* GE_new683(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING] */
extern T0* GE_new685(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
extern T0* GE_new686(T1 initialize);
/* New instance of type SPECIAL [ET_REAL_CONSTANT] */
extern T0* GE_new688(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
extern T0* GE_new689(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new690(T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new691(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new692(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new693(T1 initialize);
/* New instance of type SPECIAL [ET_RETRY_INSTRUCTION] */
extern T0* GE_new694(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
extern T0* GE_new695(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new696(T1 initialize);
/* New instance of type SPECIAL [ET_SYMBOL_OPERATOR] */
extern T0* GE_new697(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
extern T0* GE_new698(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new699(T1 initialize);
/* New instance of type SPECIAL [ET_VOID] */
extern T0* GE_new700(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_VOID] */
extern T0* GE_new701(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new702(T1 initialize);
/* New instance of type SPECIAL [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new703(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new704(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_SYMBOL] */
extern T0* GE_new705(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
extern T0* GE_new706(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new707(T1 initialize);
/* New instance of type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new708(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new709(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new710(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new711(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new712(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new713(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new714(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new715(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new716(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new717(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new718(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new720(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new721(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new722(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new723(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_LIST] */
extern T0* GE_new724(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_OBSOLETE] */
extern T0* GE_new725(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new726(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR_LIST] */
extern T0* GE_new727(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new728(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new729(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_INVARIANTS] */
extern T0* GE_new730(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
extern T0* GE_new731(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_ITEM] */
extern T0* GE_new733(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM_LIST] */
extern T0* GE_new735(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
extern T0* GE_new737(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM] */
extern T0* GE_new741(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
extern T0* GE_new742(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new744(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
extern T0* GE_new745(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new746(T1 initialize);
/* New instance of type SPECIAL [ET_CREATE_EXPRESSION] */
extern T0* GE_new747(T6 a1, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new748(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new749(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_TUPLE] */
extern T0* GE_new750(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new751(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new752(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new753(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new756(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new757(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
extern T0* GE_new758(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new759(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new760(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new761(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new762(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new764(T6 a1, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new765(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new766(T6 a1, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new767(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new768(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_TYPE] */
extern T0* GE_new770(T6 a1, T1 initialize);
/* New instance of type ET_BIT_N */
extern T0* GE_new771(T1 initialize);
/* New instance of type ET_BIT_FEATURE */
extern T0* GE_new772(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new773(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new775(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new776(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new777(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new778(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
extern T0* GE_new779(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new780(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new781(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT] */
extern T0* GE_new782(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT] */
extern T0* GE_new783(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_LIST] */
extern T0* GE_new784(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT_LIST] */
extern T0* GE_new785(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new786(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
extern T0* GE_new787(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new789(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new790(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new791(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
extern T0* GE_new792(T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new794(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENTS] */
extern T0* GE_new795(T6 a1, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new796(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new797(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new798(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_EXPORT] */
extern T0* GE_new799(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
extern T0* GE_new801(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
extern T0* GE_new802(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new803(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new804(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
extern T0* GE_new805(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new806(T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new807(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new808(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new809(T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE] */
extern T0* GE_new811(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new813(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new814(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_LIST] */
extern T0* GE_new815(T6 a1, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new816(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
extern T0* GE_new817(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new818(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
extern T0* GE_new819(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new820(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new821(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new822(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new823(T1 initialize);
/* New instance of type SPECIAL [ET_ASSIGNER] */
extern T0* GE_new826(T6 a1, T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new827(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new829(T6 a1, T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new830(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new831(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new832(T1 initialize);
/* New instance of type SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new833(T6 a1, T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new834(T1 initialize);
/* New instance of type SPECIAL [ET_COMPOUND] */
extern T0* GE_new835(T6 a1, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new836(T1 initialize);
/* New instance of type SPECIAL [ET_POSTCONDITIONS] */
extern T0* GE_new837(T6 a1, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new838(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new839(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new840(T1 initialize);
/* New instance of type SPECIAL [ET_EXTERNAL_ALIAS] */
extern T0* GE_new843(T6 a1, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new844(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new845(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new846(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new847(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
extern T0* GE_new848(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
extern T0* GE_new849(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new850(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new851(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new852(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new853(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new854(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new855(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new856(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new858(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT] */
extern T0* GE_new859(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
extern T0* GE_new861(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new862(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new864(T6 a1, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new865(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE] */
extern T0* GE_new866(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
extern T0* GE_new868(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new869(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new871(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
extern T0* GE_new872(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
extern T0* GE_new873(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
extern T0* GE_new874(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new875(T1 initialize);
/* New instance of type SPECIAL [ET_LOOP_INVARIANTS] */
extern T0* GE_new876(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
extern T0* GE_new877(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new878(T1 initialize);
/* New instance of type SPECIAL [ET_VARIANT] */
extern T0* GE_new879(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_VARIANT] */
extern T0* GE_new880(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
extern T0* GE_new881(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new882(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new883(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new885(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
extern T0* GE_new886(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new887(T1 initialize);
/* New instance of type SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new889(T6 a1, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new892(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new893(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new894(T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new896(T6 a1, T1 initialize);
/* New instance of type ET_CALL_EXPRESSION */
extern T0* GE_new897(T1 initialize);
/* New instance of type SPECIAL [ET_CALL_EXPRESSION] */
extern T0* GE_new898(T6 a1, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new899(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new900(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new901(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_EXPRESSION] */
extern T0* GE_new902(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_WRITABLE] */
extern T0* GE_new904(T6 a1, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new905(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new906(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new907(T1 initialize);
/* New instance of type SPECIAL [ET_IF_INSTRUCTION] */
extern T0* GE_new908(T6 a1, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new909(T1 initialize);
/* New instance of type SPECIAL [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new910(T6 a1, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new912(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new913(T1 initialize);
/* New instance of type SPECIAL [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new914(T6 a1, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new915(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new917(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new918(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new919(T6 a1, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new920(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new921(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
extern T0* GE_new922(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
extern T0* GE_new923(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new924(T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART_LIST] */
extern T0* GE_new925(T6 a1, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new926(T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new927(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
extern T0* GE_new928(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new929(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new930(T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART_LIST] */
extern T0* GE_new931(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new932(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
extern T0* GE_new933(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new934(T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new935(T6 a1, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new936(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_LIST] */
extern T0* GE_new937(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new938(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
extern T0* GE_new939(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new943(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new944(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_CONSTANT] */
extern T0* GE_new946(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE] */
extern T0* GE_new947(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new948(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
extern T0* GE_new949(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new950(T1 initialize);
/* New instance of type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new951(T6 a1, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new952(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new953(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new954(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new955(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new957(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new958(T1 initialize);
/* New instance of type ET_CALL_INSTRUCTION */
extern T0* GE_new959(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new960(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new962(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new963(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
extern T0* GE_new964(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new965(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new966(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new967(T1 initialize);
/* New instance of type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new968(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new969(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new971(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new972(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new973(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new974(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new975(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new976(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
extern T0* GE_new977(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new978(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new979(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new980(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new981(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new982(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new983(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new984(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new985(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new986(T1 initialize);
/* New instance of type SPECIAL [ET_CALL_AGENT] */
extern T0* GE_new987(T6 a1, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new988(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new989(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_ARRAY] */
extern T0* GE_new990(T6 a1, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new991(T1 initialize);
/* New instance of type SPECIAL [ET_STRIP_EXPRESSION] */
extern T0* GE_new992(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_ARGUMENT_LIST */
extern T0* GE_new993(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new994(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
extern T0* GE_new995(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new996(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new997(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new998(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
extern T0* GE_new999(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
extern T0* GE_new1000(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
extern T0* GE_new1001(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new1002(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new1003(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1004(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
extern T0* GE_new1005(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_TARGET] */
extern T0* GE_new1007(T6 a1, T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1008(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1009(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1010(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1011(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1012(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1013(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1015(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1016(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1018(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1020(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1021(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1022(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1023(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1025(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new1027(T1 initialize);
/* New instance of type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1028(T1 initialize);
/* New instance of type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1029(T1 initialize);
/* New instance of type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1030(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new1031(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new1032(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new1033(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1034(T1 initialize);
/* New instance of type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1035(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1037(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1039(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1041(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1045(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME] */
extern T0* GE_new1046(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1047(T1 initialize);
/* New instance of type TO_SPECIAL [BOOLEAN] */
extern T0* GE_new1048(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1049(T1 initialize);
/* New instance of type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1050(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1051(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1052(T1 initialize);
/* New instance of type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1053(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1054(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1055(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1056(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1060(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new1062(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new1063(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1066(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new1067(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1068(T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new1078(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new1079(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1080(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1081(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1082(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_KEYWORD] */
extern T0* GE_new1083(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1084(T1 initialize);
/* New instance of type TO_SPECIAL [ET_POSITION] */
extern T0* GE_new1085(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BIT_CONSTANT] */
extern T0* GE_new1086(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1087(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BREAK] */
extern T0* GE_new1088(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CURRENT] */
extern T0* GE_new1090(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FREE_OPERATOR] */
extern T0* GE_new1091(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INTEGER_CONSTANT] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING] */
extern T0* GE_new1094(T1 initialize);
/* New instance of type TO_SPECIAL [ET_REAL_CONSTANT] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RESULT] */
extern T0* GE_new1096(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
extern T0* GE_new1097(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
extern T0* GE_new1098(T1 initialize);
/* New instance of type TO_SPECIAL [ET_VOID] */
extern T0* GE_new1099(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1100(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_SYMBOL] */
extern T0* GE_new1101(T1 initialize);
/* New instance of type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1102(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_LIST] */
extern T0* GE_new1103(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_ITEM] */
extern T0* GE_new1104(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
extern T0* GE_new1105(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM] */
extern T0* GE_new1106(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1107(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1109(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER] */
extern T0* GE_new1110(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1111(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1112(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1113(T1 initialize);
/* New instance of type TO_SPECIAL [ET_OBSOLETE] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT] */
extern T0* GE_new1116(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME_LIST] */
extern T0* GE_new1117(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1118(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPORT_LIST] */
extern T0* GE_new1119(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPORT] */
extern T0* GE_new1120(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_EXPORT] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENTS] */
extern T0* GE_new1122(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1123(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATOR_LIST] */
extern T0* GE_new1125(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATOR] */
extern T0* GE_new1126(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1127(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1128(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE_LIST] */
extern T0* GE_new1130(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1131(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1133(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
extern T0* GE_new1134(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ASSIGNER] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1136(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
extern T0* GE_new1137(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE] */
extern T0* GE_new1139(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1140(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new1141(T1 initialize);
/* New instance of type TO_SPECIAL [ET_POSTCONDITIONS] */
extern T0* GE_new1142(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INVARIANTS] */
extern T0* GE_new1143(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOOP_INVARIANTS] */
extern T0* GE_new1144(T1 initialize);
/* New instance of type TO_SPECIAL [ET_VARIANT] */
extern T0* GE_new1145(T1 initialize);
/* New instance of type TO_SPECIAL [ET_COMPOUND] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1147(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIKE_TYPE] */
extern T0* GE_new1148(T1 initialize);
/* New instance of type TO_SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new1150(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATE_EXPRESSION] */
extern T0* GE_new1151(T1 initialize);
/* New instance of type TO_SPECIAL [ET_IF_INSTRUCTION] */
extern T0* GE_new1152(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
extern T0* GE_new1153(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1155(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WHEN_PART_LIST] */
extern T0* GE_new1156(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1157(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_LIST] */
extern T0* GE_new1158(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1159(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_CONSTANT] */
extern T0* GE_new1161(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1162(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1163(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1164(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPRESSION] */
extern T0* GE_new1165(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CALL_EXPRESSION] */
extern T0* GE_new1166(T1 initialize);
/* New instance of type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1167(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1168(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new1169(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WRITABLE] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
extern T0* GE_new1171(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new1172(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1173(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_ARRAY] */
extern T0* GE_new1174(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_TUPLE] */
extern T0* GE_new1175(T1 initialize);
/* New instance of type TO_SPECIAL [ET_STRIP_EXPRESSION] */
extern T0* GE_new1176(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTANT] */
extern T0* GE_new1177(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CALL_AGENT] */
extern T0* GE_new1178(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_TARGET] */
extern T0* GE_new1179(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1180(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1181(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1182(T1 initialize);
/* New instance of type TO_SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new1183(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1185(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1190(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1191(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1193(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1194(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1195(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1197(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1198(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1199(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1200(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1201(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1220(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
extern T0* GE_new1223(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1225(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new1227(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLUSTER] */
extern T0* GE_new1228(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1237(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1238(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1239(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1240(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new1241(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1242(T1 initialize);
/* GETEST.execute */
extern T0* T21c26(void);
/* TS_ERROR_HANDLER.report_error */
extern void T28f25(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_error */
extern void T28f25p1(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_error_message */
extern void T28f30(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_error_message */
extern void T28f30p1(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T60f13(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T60f17(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T60f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T60f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T60f20(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T67f1(T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f18(T0* C);
/* STRING_8.make_from_string */
extern T0* T17c45(T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f3(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T114f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge955os2484;
extern T0* ge955ov2484;
extern T0* T67f5(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T114c3(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge946os1964;
extern T0* ge946ov1964;
extern T0* T60f5(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T67c14(void);
/* TS_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T25c7(T0* a1);
/* ARRAY [STRING_8].put */
extern void T71f12(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make */
extern T0* T71c11(T6 a1, T6 a2);
/* ARRAY [STRING_8].make_area */
extern void T71f13(T0* C, T6 a1);
/* SPECIAL [STRING_8].make */
extern T0* T70c4(T6 a1);
/* INTEGER_32.infix "<=" */
extern T1 T6f4(T6* C, T6 a1);
/* KL_EXCEPTIONS.die */
extern void T33f2(T0* C, T6 a1);
/* GETEST.exceptions */
extern unsigned char ge1033os1788;
extern T0* ge1033ov1788;
extern T0* T21f16(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T33c1(void);
/* GETEST.process */
extern void T21f28(T0* C, T0* a1);
/* GETEST.run_test */
extern void T21f36(T0* C, T0* a1, T1 a2);
/* DP_SHELL_COMMAND.execute */
extern void T42f13(T0* C);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge1027os3775;
extern T1 ge1027ov3775;
extern T1 T98f1(T0* C);
/* STRING_8.item */
extern T2 T17f7(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f2(T6* C, T6 a1);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T98f4(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T85f3(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge1027os3780;
extern T0* ge1027ov3780;
extern T0* T98f5(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T85c4(void);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T98f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T85f1(T0* C, T0* a1);
/* STRING_8.make_from_c_pointer */
extern T0* T17c43(T14 a1);
/* C_STRING.read_substring_into_character_8_area */
extern void T99f10(T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T168f6(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T226f2(T226* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T226f3(T226* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c11(T6 a1);
/* C_STRING.set_shared_from_pointer */
extern void T99f9(T0* C, T14 a1);
/* C_STRING.set_shared_from_pointer_and_count */
extern void T99f11(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T168f12(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T168c11(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T99f4(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge1329os1266;
extern T0* ge1329ov1266;
extern T0* T17f25(T0* C);
/* C_STRING.make_empty */
extern void T99f6(T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T99c6(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T168c7(T6 a1);
/* EXCEPTIONS.raise */
extern void T225f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T225f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T225c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T168f4(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f1(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f4(T14* C, T6 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f13(T6* C, T6 a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T85f2(T0* C, T14 a1);
/* STRING_8.to_c */
extern T0* T17f13(T0* C);
/* DP_SHELL_COMMAND.operating_system */
extern unsigned char ge1014os2249;
extern T0* ge1014ov2249;
extern T0* T42f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T98c7(void);
/* DP_SHELL_COMMAND.system */
extern void T42f14(T0* C, T0* a1);
/* DP_SHELL_COMMAND.system_call */
extern T6 T42f9(T0* C, T14 a1);
/* C_STRING.item */
extern T14 T99f3(T0* C);
/* C_STRING.make */
extern T0* T99c5(T0* a1);
/* C_STRING.set_string */
extern void T99f7(T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T99f8(T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T168f10(T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f10(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f14(T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f1(T10* C);
/* STRING_8.code */
extern T10 T17f21(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f15(T6* C);
/* MANAGED_POINTER.resize */
extern void T168f9(T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f9(T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f13(T14* C, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f2(T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f6(T14* C, T14 a1, T6 a2);
/* DP_SHELL_COMMAND.default_shell */
extern unsigned char ge1495os4364;
extern T0* ge1495ov4364;
extern T0* T42f8(T0* C);
/* DP_SHELL_COMMAND.get */
extern T0* T42f10(T0* C, T0* a1);
/* DP_SHELL_COMMAND.eif_getenv */
extern T14 T42f11(T0* C, T14 a1);
/* STRING_8.is_empty */
extern T1 T17f17(T0* C);
/* DP_SHELL_COMMAND.make */
extern T0* T42c12(T0* a1);
/* DP_SHELL_COMMAND.string_ */
extern T0* T42f7(T0* C);
/* KL_STDOUT_FILE.flush */
extern void T30f16(T0* C);
/* KL_STDOUT_FILE.old_flush */
extern void T30f20(T0* C);
/* KL_STDOUT_FILE.file_flush */
extern void T30f25(T0* C, T14 a1);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* GETEST.compile_test */
extern void T21f35(T0* C, T0* a1, T1 a2);
/* GETEST.report_eiffel_compilation_error */
extern void T21f37(T0* C);
/* TS_ERROR_HANDLER.report_eiffel_compilation_error */
extern void T28f28(T0* C);
/* TS_EIFFEL_COMPILATION_ERROR.make */
extern T0* T78c7(void);
/* GETEST.generate_test */
extern void T21f34(T0* C, T0* a1, T1 a2);
/* KL_STDOUT_FILE.put_character */
extern void T30f15(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T30f19(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T30f24(T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.put_integer */
extern void T30f14(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_string */
extern void T30f13(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T30f18(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T30f23(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T30f5(T0* C);
/* TS_TESTCASES.count */
extern T6 T40f7(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].forth */
extern void T86f9(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_forth */
extern void T88f49(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].add_traversing_cursor */
extern void T88f51(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].set_next_cursor */
extern void T86f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].remove_traversing_cursor */
extern void T88f50(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].set_position */
extern void T86f10(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].clashes_item */
extern T6 T88f30(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].item */
extern T0* T86f5(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_item */
extern T0* T88f22(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].item_storage_item */
extern T0* T88f26(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].after */
extern T1 T86f4(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_after */
extern T1 T88f21(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].start */
extern void T86f8(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_start */
extern void T88f48(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_off */
extern T1 T88f29(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].is_empty */
extern T1 T88f28(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].new_cursor */
extern T0* T88f32(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make */
extern T0* T86c7(T0* a1);
/* TS_TESTCASES.generate_root_class */
extern void T40f17(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T91c7(T0* a1);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T92f28(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T92f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T92f34(T0* C, T14 a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T261f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T252f13(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T252f14(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T261f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T252f15(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T261f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T261f6(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T261f8(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T252f12(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T252f9(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T252f7(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T261c7(T0* a1);
/* ET_CLASS.is_deferred */
extern T1 T90f54(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T90f50(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T401f5(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge366os4708;
extern T0* ge366ov4708;
extern T0* T401f4(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T267c892(void);
/* ET_CLASS.upper_name */
extern T0* T90f47(T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T50f13(T0* C);
/* CHARACTER_8.infix "<=" */
extern T1 T2f20(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f21(T2* C, T2 a1);
/* CHARACTER_8.infix ">=" */
extern T1 T2f19(T2* C, T2 a1);
/* DS_HASH_TABLE_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].key */
extern T0* T86f6(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].cursor_key */
extern T0* T88f23(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].key_storage_item */
extern T0* T88f27(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T92f27(T0* C, T6 a1);
/* DS_LINKED_LIST [STRING_8].is_empty */
extern T1 T252f8(T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T92f26(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T92f33(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T92f36(T0* C, T14 a1, T2 a2);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T92f25(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T92f32(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T92f35(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T92f9(T0* C);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T92f24(T0* C);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T92f23(T0* C, T0* a1);
/* STRING_8.as_upper */
extern T0* T17f28(T0* C);
/* STRING_8.to_upper */
extern void T17f46(T0* C);
/* STRING_8.to_upper_area */
extern void T17f47(T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.upper */
extern T2 T2f16(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f17(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f2(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f1(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f6(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge8os92;
extern T0* ge8ov92;
extern T0* T2f8(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f3(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T169c2(T6 a1);
/* STRING_8.twin */
extern T0* T17f11(T0* C);
/* STRING_8.copy */
extern void T17f38(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f15(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f14(T0* C, T6 a1, T6 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T92f12(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T92f8(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T92f22(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T92f13(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T92f11(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T92f31(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T92f18(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T92f31p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T92f19(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T92c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T92f29(T0* C, T0* a1);
/* STRING_8.append_string */
extern void T17f34(T0* C, T0* a1);
/* STRING_8.append */
extern void T17f39(T0* C, T0* a1);
/* STRING_8.resize */
extern void T17f40(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f4(T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f15(T0* C);
/* STRING_8.capacity */
extern T6 T17f14(T0* C);
/* STRING_8.make */
extern T0* T17c32(T6 a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T103f3(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T67f4(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.concat */
extern T0* T67f8(T0* C, T0* a1, T0* a2);
/* STRING_8.append_character */
extern void T17f35(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T103f8(T0* C, T2 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T67f7(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T103f7(T0* C);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T96f3(T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T96f5(T0* C);
/* STRING_8.infix "+" */
extern T0* T17f12(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f10(T0* C, T6 a1);
/* STRING_8.as_lower */
extern T0* T17f8(T0* C);
/* STRING_8.to_lower */
extern void T17f37(T0* C);
/* STRING_8.to_lower_area */
extern void T17f41(T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.lower */
extern T2 T2f2(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f4(T2* C);
/* KL_DIRECTORY.recursive_create_directory */
extern void T93f30(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T67f9(T0* C, T0* a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f20(T0* C, T6 a1);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T67f10(T0* C, T0* a1, T0* a2);
/* STRING_8.same_string */
extern T1 T17f26(T0* C, T0* a1);
/* STRING_8.same_string_general */
extern T1 T17f30(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f5(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_DIRECTORY.string_ */
extern T0* T93f18(T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T96f13(T0* C, T0* a1);
/* STRING_8.substring */
extern T0* T17f5(T0* C, T6 a1, T6 a2);
/* STRING_8.set_count */
extern void T17f36(T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge986os7474;
extern T0* ge986ov7474;
extern T0* T96f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T96f14(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T103f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge967os7474;
extern T0* ge967ov7474;
extern T0* T103f14(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T103f13(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T96f12(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T96f9(T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T167f8(T0* C, T6 a1);
/* ARRAY [STRING_8].item */
extern T0* T71f5(T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T167f7(T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T167f11(T0* C, T6 a1);
/* KL_PATHNAME.set_canonical */
extern void T167f18(T0* C);
/* KL_PATHNAME.append_current */
extern void T167f15(T0* C);
/* KL_PATHNAME.append_name */
extern void T167f17(T0* C, T0* a1);
/* ARRAY [STRING_8].force */
extern void T71f14(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].auto_resize */
extern void T71f15(T0* C, T6 a1, T6 a2);
/* SPECIAL [STRING_8].fill_with_default */
extern void T70f7(T0* C, T6 a1, T6 a2);
/* SPECIAL [STRING_8].put_default */
extern void T70f11(T0* C, T6 a1);
/* SPECIAL [STRING_8].move_data */
extern void T70f6(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T70f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T70f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].capacity */
extern T6 T71f9(T0* C);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T70f3(T0* C, T6 a1);
/* ARRAY [STRING_8].additional_space */
extern T6 T71f8(T0* C);
/* INTEGER_32.min */
extern T6 T6f18(T6* C, T6 a1);
/* ARRAY [STRING_8].empty_area */
extern T1 T71f7(T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T96f8(T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T167f16(T0* C);
/* KL_PATHNAME.set_relative */
extern void T167f14(T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T167c13(void);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T103f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T103f11(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T103f12(T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T167f21(T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T167f20(T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T167f19(T0* C, T0* a1);
/* KL_DIRECTORY.file_system */
extern unsigned char ge1003os2245;
extern T0* ge1003ov2245;
extern T0* T93f21(T0* C);
/* KL_DIRECTORY.unix_file_system */
extern unsigned char ge1003os2248;
extern T0* ge1003ov2248;
extern T0* T93f15(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T96c23(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge1027os3776;
extern T1 ge1027ov3776;
extern T1 T98f2(T0* C);
/* KL_DIRECTORY.windows_file_system */
extern unsigned char ge1003os2246;
extern T0* ge1003ov2246;
extern T0* T93f14(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T103c25(void);
/* KL_DIRECTORY.operating_system */
extern T0* T93f13(T0* C);
/* KL_DIRECTORY.create_directory */
extern void T93f33(T0* C);
/* KL_DIRECTORY.create_dir */
extern void T93f35(T0* C);
/* KL_DIRECTORY.file_mkdir */
extern void T93f36(T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T93f9(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T93f11(T0* C, T14 a1);
/* KL_DIRECTORY.exists */
extern T1 T93f17(T0* C);
/* KL_DIRECTORY.make */
extern void T93f28(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T93c28(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T93f31(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T36f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T36f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge1092os4358;
extern T0* ge1092ov4358;
extern T0* T36f2(T0* C);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T67f15(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T67f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T67f2(T0* C, T0* a1, T6 a2);
/* STRING_8.wipe_out */
extern void T17f33(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T36f3(T0* C);
/* TS_TESTCASES.execution_environment */
extern unsigned char ge1032os1792;
extern T0* ge1032ov1792;
extern T0* T40f11(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T36c5(void);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T103f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T103f10(T0* C);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T96f4(T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T96f7(T0* C);
/* TS_TESTCASES.unix_file_system */
extern T0* T40f10(T0* C);
/* TS_TESTCASES.file_system */
extern T0* T40f9(T0* C);
/* TS_TESTCASES.windows_file_system */
extern T0* T40f13(T0* C);
/* TS_TESTCASES.operating_system */
extern T0* T40f12(T0* C);
/* TS_TESTCASES.generate_test_classes */
extern void T40f16(T0* C);
/* TS_TESTCASES.generate_test_class */
extern void T40f18(T0* C, T0* a1, T0* a2, T0* a3);
/* TS_CONFIG.process */
extern void T22f11(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].forth */
extern void T109f9(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_forth */
extern void T53f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].set_position */
extern void T109f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].add_traversing_cursor */
extern void T53f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].set_next_cursor */
extern void T109f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].remove_traversing_cursor */
extern void T53f23(T0* C, T0* a1);
/* TS_CLUSTER.process */
extern void T54f11(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T248f9(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T250f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T250f72(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T248f11(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T250f71(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T248f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T250f25(T0* C, T6 a1);
/* TS_CLUSTER.process_class */
extern void T54f12(T0* C, T0* a1, T0* a2);
/* TS_TESTCASES.put */
extern void T40f19(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].force */
extern void T88f52(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].key_storage_put */
extern void T88f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].slots_put */
extern void T88f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].clashes_put */
extern void T88f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].slots_item */
extern T6 T88f37(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].hash_position */
extern T6 T88f34(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T90f52(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].resize */
extern void T88f55(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].clashes_resize */
extern void T88f62(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].resize */
extern T0* T46f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T45f3(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].special_integer_ */
extern unsigned char ge958os1968;
extern T0* ge958ov1968;
extern T0* T88f35(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T46c4(void);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].key_storage_resize */
extern void T88f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T164f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].aliased_resized_area */
extern T0* T165f3(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].item_storage_resize */
extern void T88f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]].resize */
extern T0* T162f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]].aliased_resized_area */
extern T0* T163f3(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].slots_resize */
extern void T88f59(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].new_modulus */
extern T6 T88f38(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].new_capacity */
extern T6 T88f33(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].item_storage_put */
extern void T88f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].search_position */
extern void T88f53(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_CLASS].test */
extern T1 T158f1(T0* C, T0* a1, T0* a2);
/* KL_ANY_ROUTINES.equal_objects */
extern T1 T114f2(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [ET_CLASS].any_ */
extern T0* T158f2(T0* C);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].unset_found_item */
extern void T88f47(T0* C);
/* DS_PAIR [DS_LIST [STRING_8], STRING_8].make */
extern T0* T89c3(T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T252f6(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T74f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [STRING_8].any_ */
extern T0* T74f2(T0* C);
/* DS_LINKED_LIST [STRING_8].put_last */
extern void T252f11(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T339f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T339c3(T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T253f4(T0* C, T6 a1);
/* DS_LINKED_LIST [STRING_8].make_equal */
extern T0* T252c10(void);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T74c3(void);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T248f6(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T250f34(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T250f38(T0* C, T6 a1);
/* LX_DFA_REGULAR_EXPRESSION.recognizes */
extern T1 T35f12(T0* C, T0* a1);
/* LX_DFA_REGULAR_EXPRESSION.longest_end_position */
extern T6 T35f13(T0* C, T0* a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T80f4(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].key */
extern T0* T248f5(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T250f33(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T250f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T248f4(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T250f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T248f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T250f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T250f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T250f39(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T250f29(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T248c7(T0* a1);
/* ET_LACE_SYSTEM.parse_all */
extern void T247f157(T0* C);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T247f163(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T247f163ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T247f163ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T247f163ac3(void);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T288f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T399f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T399f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].resize */
extern T0* T537f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T538f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T399f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T399f6(T0* C, T6 a1);
/* ET_LACE_SYSTEM.parse_all_local */
extern void T247f182(T0* C);
/* ET_LACE_SYSTEM.eiffel_class */
extern T0* T247f141(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last_new */
extern void T250f68(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T250f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T250f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T250f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T250f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T250f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T250f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T250f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T250f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T250f28(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T250f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T338f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T337f2(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T250f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T250f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T250f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T250f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T250f47(T0* C);
/* ET_LACE_SYSTEM.register_class */
extern void T247f164(T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T90f99(T0* C, T6 a1);
/* ET_CLASS.make */
extern T0* T90c98(T0* a1);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge376os9627;
extern T0* ge376ov9627;
extern T0* T267f131(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T401c24(void);
/* ET_KEYWORD.make_token */
extern void T401f27(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T401f28(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge376os9617;
extern T0* ge376ov9617;
extern T0* T267f136(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T401c26(void);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge376os10010;
extern T0* ge376ov10010;
extern T0* T267f135(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T253c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T445f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T569c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T446c4(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge265os6993;
extern T0* ge265ov6993;
extern T0* T253f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T445c3(void);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge376os10009;
extern T0* ge376ov10009;
extern T0* T267f134(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T418c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T448f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T570c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T449c4(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge292os6993;
extern T0* ge292ov6993;
extern T0* T418f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T448c3(void);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge376os10008;
extern T0* ge376ov10008;
extern T0* T267f133(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T417c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T479f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T587c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T480c1(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge433os16698;
extern T0* ge433ov16698;
extern T0* T417f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T479c2(void);
/* ET_CLASS.tokens */
extern T0* T90f56(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T250f32(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T250f31(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T250f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T250f52(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T281f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T50f11(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T67f11(T0* C, T0* a1, T0* a2);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T415f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge1062os19643;
extern T0* ge1062ov19643;
extern T0* T415f2(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge1062os19642;
extern T0* ge1062ov19642;
extern T0* T415f5(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge1062os19629;
extern T0* ge1062ov19629;
extern T0* T415f12(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T63f2(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern unsigned char ge945os1963;
extern T0* ge945ov1963;
extern T0* T415f23(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T63c3(void);
/* SPECIAL [ARRAY [INTEGER_32]].make */
extern T0* T551c2(T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge1062os19641;
extern T0* ge1062ov19641;
extern T0* T415f4(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge1062os19640;
extern T0* ge1062ov19640;
extern T0* T415f22(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge1062os19639;
extern T0* ge1062ov19639;
extern T0* T415f3(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge1062os19638;
extern T0* ge1062ov19638;
extern T0* T415f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern unsigned char ge1062os19637;
extern T0* ge1062ov19637;
extern T0* T415f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern unsigned char ge1062os19636;
extern T0* ge1062ov19636;
extern T0* T415f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge1062os19635;
extern T0* ge1062ov19635;
extern T0* T415f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge1062os19634;
extern T0* ge1062ov19634;
extern T0* T415f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge1062os19633;
extern T0* ge1062ov19633;
extern T0* T415f16(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge1062os19632;
extern T0* ge1062ov19632;
extern T0* T415f15(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge1062os19631;
extern T0* ge1062ov19631;
extern T0* T415f14(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge1062os19630;
extern T0* ge1062ov19630;
extern T0* T415f13(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge1062os19628;
extern T0* ge1062ov19628;
extern T0* T415f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge1062os19627;
extern T0* ge1062ov19627;
extern T0* T415f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge1062os19626;
extern T0* ge1062ov19626;
extern T0* T415f9(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge1062os19625;
extern T0* ge1062ov19625;
extern T0* T415f8(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge1062os19624;
extern T0* ge1062ov19624;
extern T0* T415f7(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge1062os19623;
extern T0* ge1062ov19623;
extern T0* T415f6(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make */
extern T0* T552c2(T6 a1);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge1057os5511;
extern T0* ge1057ov5511;
extern T0* T67f12(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T415c24(void);
/* ET_IDENTIFIER.string_ */
extern T0* T50f12(T0* C);
/* ET_LACE_SYSTEM.parse_all_local */
extern void T247f182p1(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T247f182p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T247f182p1ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T247f182p1ac3(T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T245f40(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_cluster */
extern void T274f950(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T274f951(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T274f955(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T266f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T266f17(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T266f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T346f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T266f15(T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T266f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T346f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T266f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T274f954(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T245f44(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T246f8(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T646c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T144c8(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T144f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T144c7(T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T144f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T201c3(T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T117f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING_8].make_area */
extern T0* T179c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T117c3(void);
/* ST_SPLITTER.split */
extern T0* T645f6(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T645f8(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T252f17(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T1079f24(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T1079f32(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T1079f22(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T1079f19(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f21(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f23(T6* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T1079f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T1079f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T1079f17(T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T1079f25(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T645f5(T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T252c16(void);
/* ST_SPLITTER.set_separators */
extern void T645f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T1079f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T1079f40(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T1079f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T1079f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T1079f37(T0* C);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T1079c30(T6 a1);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T1079f20(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T1227c3(T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T1079f36(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T46f1(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER_32].make_area */
extern T0* T106c2(T6 a1);
/* SPECIAL [INTEGER_32].make */
extern T0* T45c6(T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T1079f23(T0* C);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T1079f28(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T1079f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T1079f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T1079f33(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T645c9(void);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T24f52(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T24f31(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge971os2503;
extern T0* ge971ov2503;
extern T0* T24f35(T0* C);
/* KL_CHARACTER_BUFFER.make */
extern T0* T173c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge1027os3777;
extern T1 ge1027ov3777;
extern T1 T98f6(T0* C);
/* PLATFORM.default_create */
extern T0* T262c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T173f7(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T24f32(T0* C);
/* STRING_8.put */
extern void T17f48(T0* C, T2 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T24f34(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T24f36(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f6(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T24f28(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T24f30(T0* C, T14 a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T274f953(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T245f43(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T246f7(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T76f29(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T76f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern unsigned char ge990os1791;
extern T0* ge990ov1791;
extern T0* T76f16(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T29c4(void);
/* ET_ERROR_HANDLER.report_info */
extern void T76f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T76f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T76f22(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1193c17(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T76f21(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gcaaa_error */
extern void T28f36(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_cluster_error */
extern void T28f72(T0* C, T0* a1);
/* TS_ERROR_HANDLER.std */
extern T0* T28f23(T0* C);
/* TS_ERROR_HANDLER.report_info */
extern void T28f27(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_info_message */
extern void T28f31(T0* C, T0* a1);
/* TS_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f22(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T93f40(T0* C);
/* KL_DIRECTORY.old_close */
extern void T93f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T93f12(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T93f34(T0* C, T14 a1);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T245f42(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T245f45(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T245f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T246f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T266f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T266f18(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T345f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T344f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T266f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T266f8(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T245f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T246f10(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T246c4(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T266c11(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T266f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T346c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T345f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T432c2(T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T344c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T345c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T245f27(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T245f52(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T245f51(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T245f50(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T245f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T245f48(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T50f60(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.make */
extern T0* T50c59(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T50f61(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T50c61(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T50f62(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T50f6(T0* C, T0* a1);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T245f17(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T245f21(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T96f20(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge1010os7433;
extern T0* ge1010ov7433;
extern T0* T96f22(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T103f22(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T103f24(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T245f28(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T245f19(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T245f28p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T76f28(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1193c16(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T76f18(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gcaab_error */
extern void T28f35(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T274f865(T0* C);
/* ET_EIFFEL_PARSER.parse_file */
extern void T274f952(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T274f956(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T274f966(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T274f965(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T49f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].aliased_resized_area */
extern T0* T48f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T49f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T107c2(T6 a1);
/* SPECIAL [ANY].make */
extern T0* T48c3(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T49c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T274f964(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T274f987(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T274f1782(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T274f1792(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T121f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T121f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T121f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T121f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T274f1781(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T274f1780(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T274f1779(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T274f1778(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T718f17(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T717f17(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T268f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T274f662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T274f1777(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T718f16(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T717f16(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T274f1776(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T274f1775(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T274f1774(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T274f1773(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T274f1772(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T274f1771(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T274f1770(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T274f1769(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T274f1768(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T274f1767(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T274f1766(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T274f1765(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T274f1764(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T274f1763(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T274f1762(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T671f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T670f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T671f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1089c2(T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T670c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T671c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T274f1761(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T274f1760(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T686f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T685f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T686f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1094c2(T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T685c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T686c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T274f1759(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T274f1758(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T274f1757(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T274f1756(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T274f1755(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T274f1754(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T274f1753(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T274f1752(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T274f1751(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T274f1750(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T274f1749(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T274f1748(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T274f1747(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T274f1746(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T274f1745(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T274f1744(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T274f1743(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T274f1742(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T274f1741(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T274f1740(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T274f1739(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T274f1738(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T274f1737(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T1022f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T1018f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1022f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1182c2(T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1018c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T1022c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T268f309(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1023c7(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge376os9600;
extern T0* ge376ov9600;
extern T0* T267f868(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T707c58(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T707f60(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T707f7(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge376os9602;
extern T0* ge376ov9602;
extern T0* T267f140(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T394c60(void);
/* ET_SYMBOL.make_leaf */
extern void T394f58(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T394f3(T0* C);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge376os9597;
extern T0* ge376ov9597;
extern T0* T267f139(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T394c59(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1023f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T274f1736(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T274f1735(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T274f1734(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T1021f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T1020f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1021f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1181c2(T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1020c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1021c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T274f1793(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T121f13(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T121f5(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T268f308(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T274f1733(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T1003f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T274f1732(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T1016f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T1004f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T1016f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1180c2(T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T1004c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T1016c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T268f307(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T1003c7(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T1003f7p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge103os6993;
extern T0* ge103ov6993;
extern T0* T1003f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge376os9604;
extern T0* ge376ov9604;
extern T0* T267f710(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T394c73(void);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge376os9599;
extern T0* ge376ov9599;
extern T0* T267f709(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T394c72(void);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T1003f5(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T274f869(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T274f593(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T357f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T274f1731(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T274f1730(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T274f1796(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T357f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T357f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T457f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].aliased_resized_area */
extern T0* T458f2(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T357f6(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T357f5(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T274f1729(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T274f1790(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T121f9(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T274f1795(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T357f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T274f1728(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T274f1727(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T274f1726(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T1014f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].aliased_resized_area */
extern T0* T1007f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T1014f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1179c2(T6 a1);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T1007c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T1014c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T268f306(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1015c5(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1015f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T274f1725(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T274f1724(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T274f1723(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T274f1722(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T274f873(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T50f65(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T453f5(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T50f27(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1199f6(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T50f31(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T865f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1199f4(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T865f6(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T50f64(T0* C, T1 a1);
/* ET_IDENTIFIER.set_seed */
extern void T50f63(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T429f8(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1198f6(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T430f5(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1198f4(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T430f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T274f1721(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].resize */
extern T0* T459f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T461f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].make */
extern T0* T459f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBJECT_TEST_LIST].make_area */
extern T0* T575c2(T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].make */
extern T0* T461c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].default_create */
extern T0* T459c3(void);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T274f1808(T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].remove */
extern void T358f13(T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].item */
extern T0* T358f7(T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].is_empty */
extern T1 T358f6(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T355f12(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T355f5(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T355f6(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T354f12(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T354f5(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T354f6(T0* C);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T460f3(T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T460f10(T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T460c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T1031f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBJECT_TEST].make_area */
extern T0* T1183c2(T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make */
extern T0* T1032c4(T6 a1);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern unsigned char ge308os16698;
extern T0* ge308ov16698;
extern T0* T460f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T1031c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T274f1720(T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T274f1804(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].force */
extern void T358f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].resize */
extern void T358f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T358f9(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].extendible */
extern T1 T358f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T355f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T355f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T452f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T454f3(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T355f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T355f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T354f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T354f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T450f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T451f3(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T354f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T354f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T274f1719(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T274f1718(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T554f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T556f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T554f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1027c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T556c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T554c3(void);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1013f17(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T268f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1013f21(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1013f20(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1013f19(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1013f18(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1013c16(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1013f22(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1013f11(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1013f23(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1220c2(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge376os9608;
extern T0* ge376ov9608;
extern T0* T267f865(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T653c9(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T653f11(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T653f12(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T653f7(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T268f166(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T274f1717(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T274f1716(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1012f18(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T268f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1012f24(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1012f23(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1012f22(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1012f21(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1012f20(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1012f19(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1012c17(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1012f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1012f25(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T274f1715(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T274f1714(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1011f18(T0* C, T0* a1);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T268f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1011f24(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1011f23(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1011f22(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1011f21(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1011f20(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1011f19(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1011c17(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1011f12(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1011f25(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T274f1713(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T274f1712(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1010f19(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T268f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1010f23(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1010f22(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1010f21(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1010f20(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1010c18(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1010f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.make */
extern T0* T690c12(void);
/* ET_RESULT.make_token */
extern void T690f14(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T690f15(T0* C);
/* ET_RESULT.tokens */
extern T0* T690f7(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1010f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1010f25(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T268f159(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T274f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T274f1710(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1009f20(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T268f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1009f26(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1009f25(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1009f24(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1009f23(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1009f22(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1009f21(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1009c19(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1009f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1009f27(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T274f1709(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T274f1708(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1008f20(T0* C, T0* a1);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T268f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1008f26(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1008f25(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1008f24(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1008f23(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1008f22(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1008f21(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1008c19(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1008f14(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1008f27(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T274f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T274f1706(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T1005f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].aliased_resized_area */
extern T0* T987f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T1005f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1178c2(T6 a1);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T987c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T1005c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T268f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T986f13(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T986c12(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T986f9(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T986c11(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T268f234(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T274f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T274f1704(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T1002f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T829f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T1002f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1177c2(T6 a1);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T829c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T1002c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T274f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T274f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T274f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T274f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T274f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T274f1698(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T991f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T274f1697(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T1001f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T992f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T1001f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1176c2(T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T992c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T1001c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T268f298(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T991f13(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T991c11(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T991f11p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T804f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1124c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T764c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge397os6993;
extern T0* ge397ov6993;
extern T0* T991f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T804c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge376os9659;
extern T0* ge376ov9659;
extern T0* T267f867(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T401c35(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T991f6(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T274f868(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T356f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T274f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T274f1695(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T274f1791(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T356f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T356f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T455f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].aliased_resized_area */
extern T0* T456f2(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T356f6(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T356f5(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T274f1694(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T274f1789(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T356f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T274f1693(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T274f1692(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T749f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T274f1691(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T1000f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T750f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T1000f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1175c2(T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T750c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T1000c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T268f297(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T749f12(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T749c10(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T749f10p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T972f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1169c2(T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T971c4(T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge221os6993;
extern T0* ge221ov6993;
extern T0* T749f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T972c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge376os9603;
extern T0* ge376ov9603;
extern T0* T267f130(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T394c57(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge376os9598;
extern T0* ge376ov9598;
extern T0* T267f129(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T395c58(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T395f59(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T395f56(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T749f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T274f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T274f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T274f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T274f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T274f1686(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T989f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T274f1685(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T999f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T990f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T999f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1174c2(T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T990c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T999c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T268f296(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T989f12(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T989c10(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T989f10p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T989f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge376os9601;
extern T0* ge376ov9601;
extern T0* T267f711(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T394c74(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge376os9596;
extern T0* ge376ov9596;
extern T0* T267f866(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T394c68(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T989f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T274f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T274f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T274f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T274f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T274f1680(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T963f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T871f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T963f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1165c2(T6 a1);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T871c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T963c3(void);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T268f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T998c8(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T998f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T274f1679(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T997f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T968f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T997f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1173c2(T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T968c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T997c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T268f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T967f9(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T967c8(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T967f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T274f1678(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T993f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T274f1677(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T996f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].aliased_resized_area */
extern T0* T994f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T996f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1172c2(T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T994c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T996c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T268f293(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T993c7(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T993f5(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T993f7p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T993f7p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T993f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T274f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T274f1675(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T995f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T902f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T995f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1171c2(T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T902c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T995c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T274f1674(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T268f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T901c7(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T274f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T274f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T274f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T274f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T274f1669(T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T274f846(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.register_inline_constant */
extern void T269f176(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T988f9(T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T247f194(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T268f336(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T988f10(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T988c8(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge376os9647;
extern T0* ge376ov9647;
extern T0* T267f751(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T401c30(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T988f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T274f1668(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T274f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T274f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T274f1665(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T274f1664(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T274f1663(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T274f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T274f1661(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T274f1660(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T274f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T274f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T274f1657(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T274f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T274f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T274f1654(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T274f1653(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T274f1652(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T274f1651(T0* C);
/* ET_EIFFEL_PARSER.new_object_test */
extern T0* T274f843(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_IDENTIFIER.set_object_test_local */
extern void T50f66(T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T460f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].resize */
extern T0* T1031f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1032f3(T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T460f6(T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T274f891(T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T268f335(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OBJECT_TEST.set_left_brace */
extern void T985f12(T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T985c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge376os9591;
extern T0* ge376ov9591;
extern T0* T267f708(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T394c71(void);
/* ET_OBJECT_TEST.tokens */
extern T0* T985f7(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T274f1785(T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern unsigned char ge908os9048;
extern T0* ge908ov9048;
extern T0* T274f609(T0* C);
/* UT_VERSION.make */
extern T0* T768c5(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_SYSTEM.is_ise */
extern T1 T269f140(T0* C);
/* ET_LACE_SYSTEM.is_ise */
extern T1 T247f149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T274f1650(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T268f291(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T984f8(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T984c7(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge376os9646;
extern T0* ge376ov9646;
extern T0* T267f864(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T401c33(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T984f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T274f1649(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T268f289(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T983c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T268f290(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T675f17(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T675f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T274f1648(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T274f1647(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T274f842(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T268f334(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T696f32(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T696f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T274f1646(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T274f841(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T268f333(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T696f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T274f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T274f1644(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T274f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T274f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T274f1641(T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T268f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T982c7(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T274f1640(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T274f1639(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T268f287(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T981c7(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T274f1638(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T274f1637(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T268f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T978c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T274f1636(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T268f286(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T980f6(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T681f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T681f11(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T681f9(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T980c5(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge376os9625;
extern T0* ge376ov9625;
extern T0* T267f720(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T401c47(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge376os9648;
extern T0* ge376ov9648;
extern T0* T267f863(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T681c13(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T681f19(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T681f20(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T681f7(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T980f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T274f1635(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T268f285(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T979f6(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T979c5(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge376os9660;
extern T0* ge376ov9660;
extern T0* T267f723(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T401c50(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge376os9609;
extern T0* ge376ov9609;
extern T0* T267f862(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T681c15(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T979f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T274f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T274f1633(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T274f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T274f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T274f1630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T274f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T274f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T274f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T274f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T274f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T274f1624(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T274f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T274f1622(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T268f284(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T696f30(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T274f1621(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T268f283(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T696f29(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T274f1620(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T268f281(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T675f16(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T274f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T274f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T274f1617(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T977f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].aliased_resized_area */
extern T0* T904f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T977f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1170c2(T6 a1);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T904c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T977c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T274f1616(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T274f838(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1199f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T865f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T453f6(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T453f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T274f1615(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T268f280(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T976f8(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T976c7(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge376os9593;
extern T0* ge376ov9593;
extern T0* T267f860(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T394c64(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T976f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T274f1614(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T268f279(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T975f8(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T975c7(void);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge376os9656;
extern T0* ge376ov9656;
extern T0* T267f861(T0* C);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T975f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T274f1613(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T268f278(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T974f8(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T974c7(void);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge376os9621;
extern T0* ge376ov9621;
extern T0* T267f857(T0* C);
/* ET_CURRENT.make */
extern T0* T672c18(void);
/* ET_CURRENT.make_token */
extern void T672f20(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T672f21(T0* C);
/* ET_CURRENT.tokens */
extern T0* T672f7(T0* C);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T974f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T274f1612(T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T274f837(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T268f332(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T973f8(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T973c7(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T973f3(T0* C);
/* ET_OBJECT_TEST_LIST.index_of */
extern T6 T460f4(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1198f9(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T430f8(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T429f7(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T429f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T274f1611(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T972f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T971f3(T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T268f277(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T274f1610(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T918f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T274f1609(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T969f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T919f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T969f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1168c2(T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T919c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T969c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T268f276(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T918c7(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T918f7p1(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T918f6(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T918f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T274f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T274f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T274f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T274f1605(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T274f1604(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T274f986(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T274f1603(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T268f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make */
extern T0* T897c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T897f9(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T274f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T274f1601(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge908os9040;
extern T0* ge908ov9040;
extern T0* T274f694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T274f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T274f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T274f1598(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T274f1597(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T274f1596(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T274f824(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T274f1595(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T268f275(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T966f11(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T966f10(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T966c9(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge376os9649;
extern T0* ge376ov9649;
extern T0* T267f859(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T656c9(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T656f11(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T656f12(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T656f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T966f5(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T268f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T274f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T274f1593(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T965f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T951f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T965f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1167c2(T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T951c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T965c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T268f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T950f12(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T950c11(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T950f13(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T274f1592(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T274f1591(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T964f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].aliased_resized_area */
extern T0* T898f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T964f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1166c2(T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T898c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T964c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T274f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T274f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T274f1588(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T900f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].aliased_resized_area */
extern T0* T896f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T900f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1150c2(T6 a1);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T896c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T900c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T268f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T962f8(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T962c7(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T962f9(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T274f1587(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T274f1586(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T268f270(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T960f8(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T960f7(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T960c6(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T960f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T274f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T274f1584(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T268f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make */
extern T0* T959c5(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T959f6(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T274f1583(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T274f823(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T50f67(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T274f1582(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T958f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T957f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T958f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1164c2(T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T957c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T958c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T268f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T274f1581(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T952f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T274f1580(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T955f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T953f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T955f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1163c2(T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T953c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T955c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T268f267(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T952c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T952f5(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T952f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge199os6993;
extern T0* ge199ov6993;
extern T0* T952f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T274f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T274f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T274f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T274f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T274f1575(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T954f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T914f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T954f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1162c2(T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T914c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T954c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T268f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T913c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T913f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T268f265(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge376os9622;
extern T0* ge376ov9622;
extern T0* T267f727(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T401c54(void);
/* ET_AST_FACTORY.tokens */
extern T0* T268f337(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T834f8(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T834c9(void);
/* ET_COMPOUND.make */
extern void T834f9p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge376os9624;
extern T0* ge376ov9624;
extern T0* T267f717(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T401c44(void);
/* ET_COMPOUND.tokens */
extern T0* T834f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T274f1574(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T268f237(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T834c6(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T834f6p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge360os6993;
extern T0* ge360ov6993;
extern T0* T834f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T274f1573(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T949f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T946f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T949f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1161c2(T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T946c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T949c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T274f1572(T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T274f813(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T274f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T274f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T274f1569(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T947f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].aliased_resized_area */
extern T0* T941f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T947f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1160c2(T6 a1);
/* SPECIAL [ET_CHOICE].make */
extern T0* T941c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T947c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T268f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T948c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge376os9595;
extern T0* ge376ov9595;
extern T0* T267f713(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T394c76(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T948f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T274f1568(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T274f1567(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T944f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T943f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T944f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1159c2(T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T943c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T944c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T268f263(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T274f1566(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T936f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T274f1565(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T939f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].aliased_resized_area */
extern T0* T937f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T939f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1158c2(T6 a1);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T937c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T939c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T268f262(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T936f8(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T936c6(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T936f6p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge363os6993;
extern T0* ge363ov6993;
extern T0* T936f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge376os9668;
extern T0* ge376ov9668;
extern T0* T267f724(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T401c51(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T936f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T274f1564(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T274f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T274f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T274f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T274f1560(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T938f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].aliased_resized_area */
extern T0* T935f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T938f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1157c2(T6 a1);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T935c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T938c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T268f261(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T934c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T274f1559(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T930f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T274f1558(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T933f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T931f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T933f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1156c2(T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T931c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T933c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T268f260(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T930c4(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge346os6993;
extern T0* ge346ov6993;
extern T0* T930f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T274f1557(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T274f1556(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T274f1555(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T932f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T910f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T932f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1155c2(T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T910c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T932c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T268f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T909f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T909c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T909f5(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T268f248(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1201c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T401f9(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T401f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T274f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T274f1553(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T929f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].aliased_resized_area */
extern T0* T927f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T929f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1154c2(T6 a1);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T927c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T929c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T268f258(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T926c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T274f1552(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T924f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T274f1551(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T928f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T925f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T928f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1153c2(T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T925c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T928c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T268f257(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T924c4(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge361os6993;
extern T0* ge361ov6993;
extern T0* T924f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T274f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T274f1549(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T923f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T908f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T923f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1152c2(T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T908c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T923c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T268f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T907f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T907f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T907c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T907f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T274f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T274f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T274f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T274f1545(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T922f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T747f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T922f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1151c2(T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T747c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T922c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T268f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T746f10(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T746c9(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge376os9619;
extern T0* ge376ov9619;
extern T0* T267f732(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T401c59(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T746f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T268f253(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T920c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T274f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T274f1543(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T268f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T921f8(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T921c7(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T921f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T274f1542(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T274f1541(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T274f1540(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T274f1539(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T268f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T917f8(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T917c7(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge376os9590;
extern T0* ge376ov9590;
extern T0* T267f858(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T394c63(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T917f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T274f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T274f1537(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T274f1536(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T274f1535(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T268f251(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T274f1534(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T274f1533(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T274f781(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T359f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T359f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T359f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T465f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T465f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T915f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T359f12(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T268f331(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T915f9(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T915c7(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T915f7p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T462f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T576c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T464c4(T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge114os6993;
extern T0* ge114ov6993;
extern T0* T915f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T462c3(void);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge376os9616;
extern T0* ge376ov9616;
extern T0* T267f726(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T401c53(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T915f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T274f1532(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T274f1531(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T274f1530(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T268f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T912f13(T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T912f12(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T912f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T912c10(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T912f8(T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern unsigned char ge908os9054;
extern T0* ge908ov9054;
extern T0* T274f779(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T274f1529(T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T268f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T274f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T274f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T274f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T274f1525(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T268f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T906c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge376os9589;
extern T0* ge376ov9589;
extern T0* T267f715(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T394c78(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T906f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T274f1524(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T268f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T905c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge376os9588;
extern T0* ge376ov9588;
extern T0* T267f714(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T394c77(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T905f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T274f1523(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T268f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T899c7(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge359os22452;
extern T0* ge359ov22452;
extern T0* T899f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T899f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T274f1522(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T274f1521(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T274f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T274f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T274f1518(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T881f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].aliased_resized_area */
extern T0* T835f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T881f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1146c2(T6 a1);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T835c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T881c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T274f1517(T0* C);
/* ET_COMPOUND.put_first */
extern void T834f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T274f1516(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T274f1515(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T268f244(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge376os9644;
extern T0* ge376ov9644;
extern T0* T267f722(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T401c49(void);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T274f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T274f1513(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T268f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge376os9633;
extern T0* ge376ov9633;
extern T0* T267f721(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T401c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T274f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T274f1511(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T268f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge376os9655;
extern T0* ge376ov9655;
extern T0* T267f737(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T401c64(void);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T274f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T274f1509(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T268f241(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T274f1508(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T274f1507(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T268f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T274f1506(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T274f1505(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T268f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T274f1504(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T274f1503(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T268f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T274f1502(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T274f1501(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER].resize */
extern T0* T893f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T889f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T893f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER].make_area */
extern T0* T1149c2(T6 a1);
/* SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T889c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T893c3(void);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T268f236(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T894c27(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T274f1500(T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T268f235(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T892f30(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T892c29(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge376os9642;
extern T0* ge376ov9642;
extern T0* T267f856(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T401c34(void);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T892f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T274f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T274f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T274f1497(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T886f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].aliased_resized_area */
extern T0* T770f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T886f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1148c2(T6 a1);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T770c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T886c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T274f1496(T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T268f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T887f26(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T887c25(T0* a1);
/* ET_LIKE_CURRENT.tokens */
extern T0* T887f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T274f1495(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T274f1494(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T274f1493(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T268f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T885f30(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T885c29(T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T885f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T274f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T274f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T274f1490(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T398f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T397f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T398f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T539c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T397c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T398c3(void);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T268f230(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T268f227(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T883c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T274f1489(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T274f1488(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T274f1807(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T286f15(T0* C, T0* a1);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T268f229(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1200c6(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T286f9(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T268f228(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T286f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T274f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T274f1486(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T274f1485(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T274f1484(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T274f1483(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T882f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T781f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T882f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1147c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T781c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T882c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T268f225(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T286f16(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T286c14(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T286f14p1(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge463os6993;
extern T0* ge463ov6993;
extern T0* T286f6(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T286f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T274f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T274f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T274f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T274f1479(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T274f1478(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T274f1477(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T268f226(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T274f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T274f1475(T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T274f760(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T268f330(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T284f28(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T284c27(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge376os9662;
extern T0* ge376ov9662;
extern T0* T267f128(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T284f5(T0* C);
/* ET_CLASS.set_in_system */
extern void T90f113(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T348f63(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T348f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T348f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T348f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T348f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T348f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T348f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T348f24(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T348f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T348f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T348f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T348f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T348f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T348f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T348f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T348f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T348f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T348f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T348f31(T0* C);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T348f42(T0* C);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T274f884(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T274f1474(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T274f757(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T268f317(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T287c27(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T268f316(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T312c28(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_SYSTEM.eiffel_class */
extern T0* T269f137(T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T269f151(T0* C, T0* a1);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T268f329(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1068c23(T0* a1, T0* a2, T6 a3);
/* ET_CLASS.formal_parameter */
extern T0* T90f66(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T400f5(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T759f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T427f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T274f1473(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T274f1472(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T274f1471(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T274f1470(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T274f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T274f1468(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T274f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T274f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T274f1465(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T484f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T483f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T484f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T590c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T483c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T484c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T274f1464(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T274f1463(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T274f1462(T0* C);
/* ET_EIFFEL_PARSER.new_bit_feature */
extern T0* T274f612(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T268f315(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T772f34(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T772c33(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge376os9615;
extern T0* ge376ov9615;
extern T0* T267f851(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T772f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T274f1461(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T274f611(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T76f62(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T76f67(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1195f69(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1195f67(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T1195c68(T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1195f72(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f12(T6* C);
/* STRING_8.append_integer */
extern void T17f44(T0* C, T6 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1195f20(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T90f51(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1195f19(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge572os23093;
extern T0* ge572ov23093;
extern T0* T1195f12(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1241c4(void);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1195f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T76f17(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f69(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_validity_error */
extern void T28f73(T0* C, T0* a1);
/* TS_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f18(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T76f46(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1194c17(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1194f18(T0* C, T1 a1);
/* TS_ERROR_HANDLER.report_syntax_error */
extern void T28f53(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T76f61(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T1195c66(T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f68(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T274f1784(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T90f138(T0* C);
/* ET_CLASS.set_parsed */
extern void T90f137(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T771f10(T0* C);
/* ET_BIT_N.compute_size */
extern void T771f33(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T268f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.set_bit_keyword */
extern void T771f34(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T771c32(T0* a1, T0* a2);
/* ET_BIT_N.tokens */
extern T0* T771f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T274f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T274f1459(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T274f1458(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T274f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T274f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T274f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T274f1454(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T274f1453(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T274f1452(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T274f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T274f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T274f1449(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T274f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T274f1447(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T274f1446(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T274f1445(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T274f1444(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T274f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T274f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T274f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T274f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T274f1439(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T274f1438(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T274f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T274f1436(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T274f1435(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T274f1434(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T274f1433(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T274f1432(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T274f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T274f1430(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T274f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T274f1428(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T274f1427(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T274f1426(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T274f1425(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T274f1424(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T880f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].aliased_resized_area */
extern T0* T879f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T880f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1145c2(T6 a1);
/* SPECIAL [ET_VARIANT].make */
extern T0* T879c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T880c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T268f224(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T878f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T878c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge376os9666;
extern T0* ge376ov9666;
extern T0* T267f742(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T401c69(void);
/* ET_VARIANT.tokens */
extern T0* T878f4(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T268f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T274f1423(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T274f1422(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T274f1421(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T877f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T876f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T877f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1144c2(T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T876c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T877c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T274f751(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T875f7(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T268f328(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T875f8(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T875c6(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T875f6p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T875f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge376os9640;
extern T0* ge376ov9640;
extern T0* T267f750(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T401c77(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T875f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T274f1420(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T274f1419(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T274f1418(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T274f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T274f1416(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T874f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].aliased_resized_area */
extern T0* T730f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T874f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1143c2(T6 a1);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T730c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T874c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T274f747(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T274f970(T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].wipe_out */
extern void T358f12(T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].clear_items */
extern void T358f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].i_th */
extern T0* T358f5(T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T460f8(T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T274f969(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T355f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T355f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T274f968(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T354f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T354f13(T0* C, T6 a1, T6 a2);
/* ET_INVARIANTS.set_object_tests */
extern void T423f14(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T423f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T268f327(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T423f15(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T423c12(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T423f16(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T423f11(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T423f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T274f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T274f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T274f1413(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T274f1412(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T873f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T837f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T873f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1142c2(T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T837c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T873c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T274f744(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T836f8(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T268f326(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T836f10(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T836f9(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T836c7(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T836f7p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T836f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge376os9628;
extern T0* ge376ov9628;
extern T0* T267f855(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T401c36(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T836f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T274f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T274f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T274f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T274f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T274f1407(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T872f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T833f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T872f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1141c2(T6 a1);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T833c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T872c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T274f741(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T832f8(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T268f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T832f10(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T832f9(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T832c7(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T832f7p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T832f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge376os9654;
extern T0* ge376ov9654;
extern T0* T267f854(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T401c39(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T832f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T274f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T274f1405(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T274f1404(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T274f985(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T274f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T274f1402(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T274f1806(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T359f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T359f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T462f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T464f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T359f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T359f9(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T268f310(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T268f311(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1025c4(T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T274f989(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T274f993(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T274f650(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T101c12(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T101f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T101f14(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T101f9(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T101f3(T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T101f8(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T359f7(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T359f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T274f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T274f1400(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T274f1805(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T359f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T359f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T359f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1025f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T274f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T274f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T274f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T274f1396(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T274f1395(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T274f1394(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T869f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T864f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T869f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1140c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T864c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T869c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T268f223(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T268f222(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T865c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T274f1393(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T274f1392(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T868f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T866f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T868f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1139c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T866c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T868c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T268f221(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1199c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge583os13242;
extern T0* ge583ov13242;
extern T0* T274f724(T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern unsigned char ge376os10012;
extern T0* ge376ov10012;
extern T0* T267f127(T0* C);
/* ET_CLASS.set_group */
extern void T90f115(T0* C, T0* a1);
/* ET_UNKNOWN_GROUP.make */
extern T0* T547c14(void);
/* ET_CLASS.make_unknown */
extern T0* T90c126(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge376os9415;
extern T0* ge376ov9415;
extern T0* T267f137(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T274f867(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T274f1391(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T268f220(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T274f1390(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T453f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T274f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T274f1388(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1199f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1199f5(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T865f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T453f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T453f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T274f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T274f1386(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T452f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T572c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T454c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T452c3(void);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T274f731(T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T268f324(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T453f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T453c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T453f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge242os6993;
extern T0* ge242ov6993;
extern T0* T453f10(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge376os9643;
extern T0* ge376ov9643;
extern T0* T267f729(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T401c56(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T453f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T274f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T274f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T274f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T274f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T274f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T274f1380(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T862f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T858f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T862f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1138c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T858c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T862c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T268f219(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T268f218(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T430c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T274f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T274f1378(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T861f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T859f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T861f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1137c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T859c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T861c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T268f217(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1198c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T274f1377(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T268f216(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T274f1376(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T429f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T274f1375(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T274f1374(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1198f8(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1198f5(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T430f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T429f5(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T429f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T274f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T274f1372(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T450f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T571c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T451c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T450c3(void);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T274f719(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T268f323(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T429c12(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T429f12p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge279os6993;
extern T0* ge279ov6993;
extern T0* T429f11(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T429f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T274f1371(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T274f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T274f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T274f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T274f1367(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T274f1366(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T497f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T499f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T497f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T595c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T499c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T497c3(void);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T274f718(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T274f890(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T268f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T856f13(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T856c12(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T67f13(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T856f8(T0* C);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T856f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T856f11(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge414os16766;
extern T0* ge414ov16766;
extern T0* T856f6(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge376os9610;
extern T0* ge376ov9610;
extern T0* T267f725(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T401c52(void);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T274f1365(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T268f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T498f31(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T498c50(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T498f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T498f29(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T274f1364(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T274f1363(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T268f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T498c49(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T274f1362(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T268f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T498c48(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T274f1361(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T268f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T498c47(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T274f1360(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T268f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T498c46(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T274f1359(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T268f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T498c45(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T274f1358(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T268f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T498c44(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T274f1357(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T268f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T498c43(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T274f1356(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T268f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T498c42(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T274f1355(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T268f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T498c41(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T274f1354(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T268f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T498c40(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T274f1353(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T268f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T498c39(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T274f1352(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T268f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T498c38(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T274f1351(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T268f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T498c37(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T274f1350(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T268f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T498c36(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T274f1349(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T268f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T498c35(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T274f1348(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T268f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T498c34(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T274f1347(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T268f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T498c33(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T274f1346(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T268f196(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T498c32(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T274f1345(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T268f195(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T498c30(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T274f1344(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T854f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T790f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T854f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1136c2(T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T790c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T854c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T268f194(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T855c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T274f1343(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T274f1342(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T492f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T493f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T492f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T593c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T493c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T492c3(void);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T274f712(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T274f889(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T268f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T853f22(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T853c21(T0* a1);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T853f8(T0* C);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T853f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T853f16(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge418os16766;
extern T0* ge418ov16766;
extern T0* T853f6(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge376os9637;
extern T0* ge376ov9637;
extern T0* T267f728(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T401c55(void);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T274f1341(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T274f1340(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T274f711(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T274f888(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T268f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T851f22(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T851c21(T0* a1);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T851f8(T0* C);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T851f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T851f16(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge415os16766;
extern T0* ge415ov16766;
extern T0* T851f6(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge376os9650;
extern T0* ge376ov9650;
extern T0* T267f735(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T401c62(void);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T274f1339(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T274f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T274f1337(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T274f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T274f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T274f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T274f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T274f1332(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T274f1331(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T274f1330(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T274f1329(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T274f1328(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T274f1327(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T274f1326(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T274f1325(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T274f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T274f1323(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T268f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T852f68(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T852c59(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T852f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T852f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T274f1322(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T268f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T852c58(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T274f1321(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T268f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T852c57(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T274f1320(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T268f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T852c56(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T274f1319(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T268f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T852c55(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T274f1318(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T268f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T852c54(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T274f1317(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T268f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T852c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T274f1316(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T268f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T852c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T274f1315(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T268f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T852c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T274f1314(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T268f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T852c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T274f1313(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T268f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T852c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T274f1312(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T268f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T852c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T274f1311(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T268f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T852c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T274f1310(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T268f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T852c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T274f1309(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T268f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T852c62(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T274f1308(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T268f177(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T852c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T274f1307(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T268f176(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T852c60(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T274f1306(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T274f1305(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T268f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T850f43(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T850c41(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T850f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T850f19(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T274f1304(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T268f173(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T850c42(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T274f1303(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T268f172(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T850c40(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T274f1302(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T274f1301(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T849f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].aliased_resized_area */
extern T0* T826f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T849f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1135c2(T6 a1);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T826c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T849c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T268f171(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T274f1300(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T274f1299(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T848f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T843f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T848f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1134c2(T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T843c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T848c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T268f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T274f1298(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T274f1297(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T274f1296(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T704f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T703f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T704f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1100c2(T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T703c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T704c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T274f1295(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T274f1294(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T455f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T573c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T456c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T455c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T274f1293(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T445f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T446f3(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T274f704(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T274f1813(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T76f63(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1195c70(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T76f19(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f70(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_builtin_reported */
extern T1 T274f899(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T847f45(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T274f1851(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge376os9529;
extern T0* ge376ov9529;
extern T0* T267f485(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge376os9478;
extern T0* ge376ov9478;
extern T0* T267f684(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge376os9477;
extern T0* ge376ov9477;
extern T0* T267f682(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge376os9459;
extern T0* ge376ov9459;
extern T0* T267f680(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge376os9458;
extern T0* ge376ov9458;
extern T0* T267f678(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge376os9566;
extern T0* ge376ov9566;
extern T0* T267f629(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge376os9574;
extern T0* ge376ov9574;
extern T0* T267f675(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge376os9573;
extern T0* ge376ov9573;
extern T0* T267f673(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge376os9572;
extern T0* ge376ov9572;
extern T0* T267f671(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge376os9493;
extern T0* ge376ov9493;
extern T0* T267f619(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T711c17(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T711f19(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge376os9534;
extern T0* ge376ov9534;
extern T0* T267f659(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge376os9532;
extern T0* ge376ov9532;
extern T0* T267f617(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge376os9499;
extern T0* ge376ov9499;
extern T0* T267f615(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge376os9488;
extern T0* ge376ov9488;
extern T0* T267f609(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge376os9500;
extern T0* ge376ov9500;
extern T0* T267f607(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge376os9494;
extern T0* ge376ov9494;
extern T0* T267f605(T0* C);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T76f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1195c71(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T1078f4(T0* C, T6 a1);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T76f20(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* TS_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge376os9580;
extern T0* ge376ov9580;
extern T0* T267f401(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T267f450(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge376os9498;
extern T0* ge376ov9498;
extern T0* T267f481(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T274f1850(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge376os9517;
extern T0* ge376ov9517;
extern T0* T267f145(T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge376os9556;
extern T0* ge376ov9556;
extern T0* T267f451(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T274f1849(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge376os9450;
extern T0* ge376ov9450;
extern T0* T267f657(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge376os9454;
extern T0* ge376ov9454;
extern T0* T267f655(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge376os9453;
extern T0* ge376ov9453;
extern T0* T267f653(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge376os9452;
extern T0* ge376ov9452;
extern T0* T267f651(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge376os9449;
extern T0* ge376ov9449;
extern T0* T267f649(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge376os9451;
extern T0* ge376ov9451;
extern T0* T267f647(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge376os9447;
extern T0* ge376ov9447;
extern T0* T267f645(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge376os9446;
extern T0* ge376ov9446;
extern T0* T267f643(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge376os9445;
extern T0* ge376ov9445;
extern T0* T267f641(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge376os9444;
extern T0* ge376ov9444;
extern T0* T267f639(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge376os9443;
extern T0* ge376ov9443;
extern T0* T267f637(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge376os9442;
extern T0* ge376ov9442;
extern T0* T267f635(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge376os9441;
extern T0* ge376ov9441;
extern T0* T267f633(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge376os9440;
extern T0* ge376ov9440;
extern T0* T267f631(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge376os9571;
extern T0* ge376ov9571;
extern T0* T267f627(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge376os9570;
extern T0* ge376ov9570;
extern T0* T267f625(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge376os9568;
extern T0* ge376ov9568;
extern T0* T267f623(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge376os9565;
extern T0* ge376ov9565;
extern T0* T267f459(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge376os9564;
extern T0* ge376ov9564;
extern T0* T267f457(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge376os9495;
extern T0* ge376ov9495;
extern T0* T267f613(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge376os9487;
extern T0* ge376ov9487;
extern T0* T267f611(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T274f1848(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_procedure */
extern void T274f1847(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge376os9554;
extern T0* ge376ov9554;
extern T0* T267f568(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge376os9552;
extern T0* ge376ov9552;
extern T0* T267f566(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge376os9551;
extern T0* ge376ov9551;
extern T0* T267f564(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge376os9531;
extern T0* ge376ov9531;
extern T0* T267f562(T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge376os9528;
extern T0* ge376ov9528;
extern T0* T267f560(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge376os9527;
extern T0* ge376ov9527;
extern T0* T267f558(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge376os9526;
extern T0* ge376ov9526;
extern T0* T267f556(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge376os9524;
extern T0* ge376ov9524;
extern T0* T267f554(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge376os9523;
extern T0* ge376ov9523;
extern T0* T267f552(T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge376os9518;
extern T0* ge376ov9518;
extern T0* T267f550(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge376os9505;
extern T0* ge376ov9505;
extern T0* T267f548(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge376os9504;
extern T0* ge376ov9504;
extern T0* T267f546(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge376os9503;
extern T0* ge376ov9503;
extern T0* T267f544(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge376os9502;
extern T0* ge376ov9502;
extern T0* T267f542(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge376os9467;
extern T0* ge376ov9467;
extern T0* T267f437(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge376os9461;
extern T0* ge376ov9461;
extern T0* T267f539(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge376os9460;
extern T0* ge376ov9460;
extern T0* T267f537(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge376os9456;
extern T0* ge376ov9456;
extern T0* T267f534(T0* C);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge376os9557;
extern T0* ge376ov9557;
extern T0* T267f600(T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge376os9550;
extern T0* ge376ov9550;
extern T0* T267f598(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge376os9549;
extern T0* ge376ov9549;
extern T0* T267f596(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge376os9548;
extern T0* ge376ov9548;
extern T0* T267f594(T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge376os9547;
extern T0* ge376ov9547;
extern T0* T267f592(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge376os9546;
extern T0* ge376ov9546;
extern T0* T267f590(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge376os9545;
extern T0* ge376ov9545;
extern T0* T267f588(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge376os9544;
extern T0* ge376ov9544;
extern T0* T267f586(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge376os9543;
extern T0* ge376ov9543;
extern T0* T267f584(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge376os9542;
extern T0* ge376ov9542;
extern T0* T267f582(T0* C);
/* ET_EIFFEL_PARSER.ise_6_2_7_2906 */
extern unsigned char ge908os9051;
extern T0* ge908ov9051;
extern T0* T274f900(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge376os9541;
extern T0* ge376ov9541;
extern T0* T267f580(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge376os9540;
extern T0* ge376ov9540;
extern T0* T267f578(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge376os9539;
extern T0* ge376ov9539;
extern T0* T267f576(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge376os9538;
extern T0* ge376ov9538;
extern T0* T267f574(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge376os9537;
extern T0* ge376ov9537;
extern T0* T267f572(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_tuple_feature */
extern T6 T267f536(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge376os9536;
extern T0* ge376ov9536;
extern T0* T267f570(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T274f1846(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T267f531(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T274f1845(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge376os9583;
extern T0* ge376ov9583;
extern T0* T267f532(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter */
extern T0* T267f693(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1197f11(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1197f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1197f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1197f9(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].resize */
extern T0* T1238f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1237f3(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.formal_parameters */
extern unsigned char ge376os9585;
extern T0* ge376ov9585;
extern T0* T267f704(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1197c8(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1197f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1239c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1238f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE].make_area */
extern T0* T1242c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1237c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1238c3(void);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T267f529(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge376os9457;
extern T0* ge376ov9457;
extern T0* T267f144(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T274f1844(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge376os9579;
extern T0* ge376ov9579;
extern T0* T267f526(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge376os9513;
extern T0* ge376ov9513;
extern T0* T267f524(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge376os9553;
extern T0* ge376ov9553;
extern T0* T267f522(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge376os9530;
extern T0* ge376ov9530;
extern T0* T267f520(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge376os9506;
extern T0* ge376ov9506;
extern T0* T267f518(T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern unsigned char ge376os9471;
extern T0* ge376ov9471;
extern T0* T267f516(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge376os9462;
extern T0* ge376ov9462;
extern T0* T267f514(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge376os9455;
extern T0* ge376ov9455;
extern T0* T267f512(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge376os9516;
extern T0* ge376ov9516;
extern T0* T267f510(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge376os9515;
extern T0* ge376ov9515;
extern T0* T267f508(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge376os9514;
extern T0* ge376ov9514;
extern T0* T267f506(T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern unsigned char ge376os9511;
extern T0* ge376ov9511;
extern T0* T267f504(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T267f503(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge376os9509;
extern T0* ge376ov9509;
extern T0* T267f501(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_procedure */
extern void T274f1843(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge376os9473;
extern T0* ge376ov9473;
extern T0* T267f497(T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge376os9472;
extern T0* ge376ov9472;
extern T0* T267f494(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_identified_feature */
extern T6 T267f496(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge376os9474;
extern T0* ge376ov9474;
extern T0* T267f499(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T274f1842(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge376os9439;
extern T0* ge376ov9439;
extern T0* T267f492(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T267f491(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge376os9438;
extern T0* ge376ov9438;
extern T0* T267f489(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T274f1841(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge376os9483;
extern T0* ge376ov9483;
extern T0* T267f487(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge376os9567;
extern T0* ge376ov9567;
extern T0* T267f483(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T267f479(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T274f1840(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T274f1839(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge376os9501;
extern T0* ge376ov9501;
extern T0* T267f476(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge376os9533;
extern T0* ge376ov9533;
extern T0* T267f472(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge376os9491;
extern T0* ge376ov9491;
extern T0* T267f474(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge376os9497;
extern T0* ge376ov9497;
extern T0* T267f470(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge376os9496;
extern T0* ge376ov9496;
extern T0* T267f468(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge376os9485;
extern T0* ge376ov9485;
extern T0* T267f466(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T267f462(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge376os9484;
extern T0* ge376ov9484;
extern T0* T267f464(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T274f1838(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T274f1837(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge376os9525;
extern T0* ge376ov9525;
extern T0* T267f455(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge376os9464;
extern T0* ge376ov9464;
extern T0* T267f453(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T274f1836(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T274f1835(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern unsigned char ge376os9448;
extern T0* ge376ov9448;
extern T0* T267f443(T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge376os9436;
extern T0* ge376ov9436;
extern T0* T267f441(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge376os9475;
extern T0* ge376ov9475;
extern T0* T267f439(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge376os9582;
extern T0* ge376ov9582;
extern T0* T267f436(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge376os9535;
extern T0* ge376ov9535;
extern T0* T267f447(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T267f435(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge376os9521;
extern T0* ge376ov9521;
extern T0* T267f445(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T274f1834(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge376os9576;
extern T0* ge376ov9576;
extern T0* T267f432(T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge376os9522;
extern T0* ge376ov9522;
extern T0* T267f430(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge376os9482;
extern T0* ge376ov9482;
extern T0* T267f428(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_feature_name */
extern unsigned char ge376os9481;
extern T0* ge376ov9481;
extern T0* T267f426(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge376os9412;
extern T0* ge376ov9412;
extern T0* T267f50(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T267f425(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge376os9479;
extern T0* ge376ov9479;
extern T0* T267f410(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T274f1833(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge376os9468;
extern T0* ge376ov9468;
extern T0* T267f419(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge376os9508;
extern T0* ge376ov9508;
extern T0* T267f417(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge376os9561;
extern T0* ge376ov9561;
extern T0* T267f415(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge376os9562;
extern T0* ge376ov9562;
extern T0* T267f413(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge376os9480;
extern T0* ge376ov9480;
extern T0* T267f408(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge376os9465;
extern T0* ge376ov9465;
extern T0* T267f406(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge376os9555;
extern T0* ge376ov9555;
extern T0* T267f404(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge376os9560;
extern T0* ge376ov9560;
extern T0* T267f402(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge376os9575;
extern T0* ge376ov9575;
extern T0* T267f398(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge376os9466;
extern T0* ge376ov9466;
extern T0* T267f142(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T267f400(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge376os9559;
extern T0* ge376ov9559;
extern T0* T267f421(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T268f322(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T847f52(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T847f51(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T847f50(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T847f49(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T847f48(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T847f47(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T847f46(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge376os9641;
extern T0* ge376ov9641;
extern T0* T267f719(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T401c46(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T847c39(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern unsigned char ge376os10011;
extern T0* ge376ov10011;
extern T0* T267f688(T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T309c6(void);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T847f33(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T274f1292(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T274f1291(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T268f169(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T548f47(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T548f46(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T548f45(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T548f44(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T548f43(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T548f42(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T548c36(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge376os9623;
extern T0* ge376ov9623;
extern T0* T267f687(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T401c29(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T548f32(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T548f36p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T274f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T274f1289(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T268f168(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T846f52(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T846f51(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T846f50(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T846f49(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T846f48(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T846f47(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T846f46(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T846f45(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T846f44(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T846c38(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T846f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T274f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T274f1287(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T268f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T845f52(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T845f51(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T845f50(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T845f49(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T845f48(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T845f47(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T845f46(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T845f45(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T845f44(T0* C, T0* a1);
/* ET_DO_PROCEDURE.make */
extern T0* T845c38(T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.tokens */
extern T0* T845f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T274f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T274f1285(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T448f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T449f3(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T274f701(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T274f1812(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T844f47(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T274f1832(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T274f1831(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T274f1830(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T274f1829(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_function */
extern void T274f1828(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T274f1827(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge376os9584;
extern T0* ge376ov9584;
extern T0* T267f533(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T274f1826(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T274f1825(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_function */
extern void T274f1824(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T274f1823(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T274f1822(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T274f1821(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T274f1820(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.ise_6_1_latest */
extern unsigned char ge908os9049;
extern T0* ge908ov9049;
extern T0* T274f901(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T768c6(T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T274f1819(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T274f1818(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T274f1817(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T274f1816(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T274f1815(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T274f1814(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T268f321(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T844f55(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T844f54(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T844f53(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T844f52(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T844f51(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T844f50(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T844f49(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T844f48(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T844c41(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T844f36(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T274f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T274f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T274f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T274f1281(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T268f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T840f50(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T840f49(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T840f48(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T840f47(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T840f46(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T840f45(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T840f44(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T840c38(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T840f33(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T840f38p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T274f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T274f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T274f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T274f1277(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T268f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T839f55(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T839f54(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T839f53(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T839f52(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T839f51(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T839f50(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T839f49(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T839f48(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T839f47(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T839f46(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T839c40(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T839f35(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T274f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T274f1275(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T274f1274(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T274f1273(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T268f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T838f55(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T838f54(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T838f53(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T838f52(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T838f51(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T838f50(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T838f49(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T838f48(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T838f47(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T838f46(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T838c40(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T838f35(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T274f1272(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T274f1271(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T274f1270(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T274f1269(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T268f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T831f43(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T831f42(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T831c36(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge376os9664;
extern T0* ge376ov9664;
extern T0* T267f853(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T401c38(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T831f33(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T274f1268(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T274f1267(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T268f161(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T830f43(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T830f42(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T830c36(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T830f33(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T274f1266(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T274f1265(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T268f160(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_clients */
extern void T827f41(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_assigner */
extern void T827f40(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T827c34(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T827f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T274f1264(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T274f1263(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T274f1803(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T361f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T361f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T361f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T467f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T361f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T467f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T361f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T361f28(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T361f32(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T361f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T361f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T361f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T467f5(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T361f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T361f25(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T361f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T361f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T361f20(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T361f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T361f8(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T361f9(T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T269f175(T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T247f193(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T274f689(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T847f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T274f1262(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T268f158(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T274f1261(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T274f1260(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T274f1259(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T274f1802(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T361f19(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T361f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T467f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T361f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T361f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T361f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T274f1258(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T274f1257(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T274f1801(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T360f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T360f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T360f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T466f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T360f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T466f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T360f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T360f28(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T360f32(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T360f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T360f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T360f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T466f5(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T360f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T360f25(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T360f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T360f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T360f20(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T360f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T360f8(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T360f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T274f687(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T844f33(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T274f1256(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T274f1255(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T274f1254(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T274f1253(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T274f1800(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T360f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T360f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T466f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T360f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T360f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T360f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T274f1252(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T274f1251(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T274f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T274f1249(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T274f1248(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T274f1247(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T823f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T822f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T823f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1133c2(T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T822c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T823c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T268f157(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T651c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge376os9632;
extern T0* ge376ov9632;
extern T0* T267f740(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T401c67(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T651f3(T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T274f665(T0* C, T0* a1);
/* ET_CLIENT_LIST.put_first */
extern void T309f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T274f652(T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T268f319(T0* C, T0* a1, T0* a2);
/* ET_CLIENT.make */
extern T0* T301c3(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge376os9372;
extern T0* ge376ov9372;
extern T0* T267f4(T0* C);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T309c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T406f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT_ITEM].make_area */
extern T0* T542c2(T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make */
extern T0* T405c4(T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern unsigned char ge134os6993;
extern T0* ge134ov6993;
extern T0* T309f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T406c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T274f1246(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T274f1245(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T274f1244(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T274f1243(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T421f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T274f1242(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T821f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T729f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T821f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1132c2(T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T729c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T821c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T268f156(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T421c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge159os6993;
extern T0* ge159ov6993;
extern T0* T421f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T274f1241(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T274f1799(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T361f17(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T361f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T361f23(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T360f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T360f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T360f23(T0* C);
/* ET_CLASS.set_procedures */
extern void T90f145(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T253f12(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T253f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T361f7(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T90f144(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T418f12(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T418f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T360f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T274f1240(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T274f1239(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T274f1238(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T820f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].aliased_resized_area */
extern T0* T544f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T820f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1131c2(T6 a1);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T544c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T820c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T268f155(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T274f1237(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T408f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T274f1236(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T819f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].aliased_resized_area */
extern T0* T815f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T819f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1130c2(T6 a1);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T815c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T819c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T268f154(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T408f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T408c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T408f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge455os6993;
extern T0* ge455ov6993;
extern T0* T408f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T408f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T274f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T274f1234(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T274f1233(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T274f1232(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T817f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T811f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T817f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1129c2(T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T811c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T817c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T268f153(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T818c7(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T818f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T274f1231(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T268f152(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T816c6(T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T816f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T274f1230(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T814f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T813f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T814f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1128c2(T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T813c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T814c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T268f151(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T274f1229(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T420f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T274f1228(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T809f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T728f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T809f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1127c2(T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T728c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T809c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T268f150(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T420c6(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T420f6p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge164os6993;
extern T0* ge164ov6993;
extern T0* T420f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge376os9618;
extern T0* ge376ov9618;
extern T0* T267f739(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T401c66(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T420f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T274f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T274f1226(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T274f1225(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T274f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T274f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T274f1222(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T804f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T764f3(T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T268f147(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T274f1221(T0* C);
/* ET_CREATOR.put_first */
extern void T806f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T274f1220(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T808f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].aliased_resized_area */
extern T0* T807f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T808f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1126c2(T6 a1);
/* SPECIAL [ET_CREATOR].make */
extern T0* T807c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T808c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T268f149(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T806c7(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T806f9(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T806f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge376os9620;
extern T0* ge376ov9620;
extern T0* T267f743(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T401c70(void);
/* ET_CREATOR.tokens */
extern T0* T806f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T274f1219(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T274f1218(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T274f1217(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T274f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T274f1215(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T274f1214(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T274f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T274f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T274f1211(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T274f1210(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T274f1209(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T274f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T274f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T274f1206(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T805f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].aliased_resized_area */
extern T0* T727f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T805f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1125c2(T6 a1);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T727c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T805c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T274f1205(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T419f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T274f1204(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T268f148(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T419c4(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge121os6993;
extern T0* ge121ov6993;
extern T0* T419f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T274f984(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T274f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T274f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T274f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T274f1200(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T274f1199(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T306f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T274f1198(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T803f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T786f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T803f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1123c2(T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T786c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T803c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T268f146(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T306c6(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T306f6p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T306f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge376os9651;
extern T0* ge376ov9651;
extern T0* T267f747(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T401c74(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T306f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T274f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T274f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T274f1195(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T274f1194(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T274f1193(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T274f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T274f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T274f1190(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T274f1189(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T274f1188(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T274f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T274f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T274f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T274f1184(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T274f1183(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T274f1182(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T274f1181(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].resize */
extern T0* T406f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T405f3(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T274f655(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T268f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T274f1180(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T274f1179(T0* C);
/* ET_CLIENTS.put_first */
extern void T650f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T274f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T274f1177(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T802f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].aliased_resized_area */
extern T0* T795f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T802f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1122c2(T6 a1);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T795c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T802c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T268f145(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T650f8(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T650c9(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T650f9p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T650f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T650f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T274f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T274f1175(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T268f144(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T650c7(void);
/* ET_CLIENTS.make */
extern void T650f7p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T274f1174(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T274f1173(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T274f1172(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T798f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T274f1171(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T801f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T799f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T801f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1121c2(T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T799c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T801c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T268f142(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T798c5(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T798f7(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T798f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T274f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T274f1169(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T797f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].aliased_resized_area */
extern T0* T794f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T797f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1120c2(T6 a1);
/* SPECIAL [ET_EXPORT].make */
extern T0* T794c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T797c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T268f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T274f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T274f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T274f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T274f1165(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T268f141(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T796c4(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge376os9611;
extern T0* ge376ov9611;
extern T0* T267f852(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T401c32(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T796f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T274f1164(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T792f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].aliased_resized_area */
extern T0* T785f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T792f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1119c2(T6 a1);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T785c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T792c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T274f1163(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T305f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T274f1162(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T268f140(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T305c6(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T305f6p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge160os6993;
extern T0* ge160ov6993;
extern T0* T305f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge376os9630;
extern T0* ge376ov9630;
extern T0* T267f734(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T401c61(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T305f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T274f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T274f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T274f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T274f1158(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T274f1157(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T274f1156(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T791f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].aliased_resized_area */
extern T0* T789f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T791f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1118c2(T6 a1);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T789c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T791c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T268f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T604c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge376os9612;
extern T0* ge376ov9612;
extern T0* T267f716(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T401c43(void);
/* ET_RENAME.tokens */
extern T0* T604f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T274f1155(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T268f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T274f1154(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T304f7(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T274f1153(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T787f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].aliased_resized_area */
extern T0* T784f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T787f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1117c2(T6 a1);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T784c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T787c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T268f137(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T304c6(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T304f6p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge151os6993;
extern T0* ge151ov6993;
extern T0* T304f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge376os9653;
extern T0* ge376ov9653;
extern T0* T267f736(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T401c63(void);
/* ET_RENAME_LIST.tokens */
extern T0* T304f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T274f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T274f1151(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T274f1150(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T274f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T274f1148(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T404f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].aliased_resized_area */
extern T0* T403f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T404f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T541c2(T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T403c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T404c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T268f136(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T274f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T274f1146(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T307f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T274f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T274f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T274f1143(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T780f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].aliased_resized_area */
extern T0* T726f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T780f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1115c2(T6 a1);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T726c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T780c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T268f135(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T307c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T307f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge165os6993;
extern T0* ge165ov6993;
extern T0* T307f5(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge376os9638;
extern T0* ge376ov9638;
extern T0* T267f132(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T401c25(void);
/* ET_PARENT_LIST.tokens */
extern T0* T307f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T274f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T274f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T274f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T274f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T274f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T274f1137(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T783f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].aliased_resized_area */
extern T0* T782f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T783f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1116c2(T6 a1);
/* SPECIAL [ET_PARENT].make */
extern T0* T782c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T783c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T274f623(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T268f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T302c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T302f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T302f9(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T286f7(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T400f8(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T90f65(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T400f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T274f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T274f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T274f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T274f1133(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T274f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T274f1131(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T274f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T274f1129(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T274f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T274f1127(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T274f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T274f1125(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T779f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].aliased_resized_area */
extern T0* T725f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T779f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1114c2(T6 a1);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T725c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T779c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T268f134(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T274f1124(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T274f1123(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T776f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T775f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T776f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1113c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T775c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T776c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T268f133(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T268f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T777c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T274f1122(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T274f1121(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T274f1798(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T765f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T268f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T778c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T765f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T765f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T274f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T274f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T274f1118(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T274f1117(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T274f1116(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T773f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T766f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T773f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1112c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T766c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T773c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T268f129(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T765f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T765c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T765f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge466os6993;
extern T0* ge466ov6993;
extern T0* T765f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T765f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T274f1115(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T274f1114(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T274f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T274f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T274f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T274f1110(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T268f130(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T274f1109(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T274f606(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T268f313(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T767c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T268f312(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1066c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T274f1108(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T274f1107(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T274f1106(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T274f1105(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T274f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T274f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T274f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T274f1101(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T468f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T470f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T468f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T577c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T470c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T468c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T274f1100(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T274f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T274f1098(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T274f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T274f1096(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T274f1095(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T274f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T274f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T274f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T274f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T274f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T274f1089(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T274f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T274f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T274f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T274f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T274f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T274f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T274f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T274f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T274f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T274f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T274f1078(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T274f1077(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T760f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T274f1076(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T762f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T761f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T762f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1111c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T761c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T762c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T268f128(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T760c7(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T760f7p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T760f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T760f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T274f1075(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T274f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T274f1073(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T274f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T274f1071(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T758f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T754f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T758f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1110c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T754c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T758c3(void);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T274f1797(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T362f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T362f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T362f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T362f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T268f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T759f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T759c25(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T759f27(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge376os9587;
extern T0* ge376ov9587;
extern T0* T267f712(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T394c75(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T759f20(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T274f600(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T274f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T274f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T274f1068(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T274f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T274f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T274f1065(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T268f126(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T427f24(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T427c23(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T274f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T274f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T274f1062(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T757f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T756f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T757f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1109c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T756c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T757c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T268f125(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T274f1061(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T400f20(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T759f28(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T427f25(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T400f12(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T400f20p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T274f1060(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T753f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T752f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T753f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1108c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T752c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T753c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T268f124(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T400f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T400c17(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T400f17p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge142os6993;
extern T0* ge142ov6993;
extern T0* T400f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T400f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T274f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T274f1058(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T274f1794(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T362f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T362f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T362f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T471f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T471f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T400f18(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T759f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T362f6(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T400f7(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T400f6(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T90f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T274f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T274f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T274f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T274f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T274f1053(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T274f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T274f1051(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T164f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T224c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T165c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T164c3(void);
/* ET_CLASS.set_external_keyword */
extern void T90f141(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T90f140(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T90f146(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T90f139(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T274f588(T0* C, T0* a1);
/* ET_SYSTEM.set_classes_added */
extern void T269f178(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_classes_added */
extern void T247f195(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T76f60(T0* C, T0* a1, T0* a2);
/* ET_CLASS.current_system */
extern T0* T90f60(T0* C);
/* TS_ERROR_HANDLER.report_compilation_status */
extern void T28f67(T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overridden_class */
extern void T90f150(T0* C, T0* a1);
/* ET_CLASS.is_in_override_cluster */
extern T1 T90f64(T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T90f104(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T420f8(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T818f8(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T408f11(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T816f7(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T818f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T816f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T419f6(T0* C);
/* ET_CREATOR.reset */
extern void T806f10(T0* C);
/* ET_INVARIANTS.reset */
extern void T423f17(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T423f19(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T423f18(T0* C);
/* ET_INVARIANTS.reset */
extern void T423f17p1(T0* C);
/* ET_PARENT_LIST.reset */
extern void T307f12(T0* C);
/* ET_PARENT.reset */
extern void T302f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T306f8(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T305f8(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T798f8(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T796f5(T0* C);
/* ET_RENAME_LIST.reset */
extern void T304f8(T0* C);
/* ET_RENAME.reset */
extern void T604f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T604f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T286f17(T0* C);
/* ET_PARENT.parent */
extern T0* T302f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T400f19(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T253f9(T0* C);
/* ET_QUERY_LIST.reset */
extern void T418f9(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T90f120(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T90f119(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T90f118(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T90f117(T0* C);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T76f59(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T1195c65(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T76f15(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_vscn0j_error */
extern void T28f66(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T76f58(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T1195c64(T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_vscn0c_error */
extern void T28f65(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T76f57(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T1195c63(T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_vscn0b_error */
extern void T28f64(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T90f46(T0* C);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T76f56(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T1195c62(T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_vscn0a_error */
extern void T28f63(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_time_stamp */
extern void T90f149(T0* C, T6 a1);
/* ET_SYSTEM.set_classes_modified */
extern void T269f177(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_classes_modified */
extern void T247f186(T0* C, T1 a1);
/* ET_CLASS.is_preparsed */
extern T1 T90f48(T0* C);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T76f55(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T1195c61(T0* a1);
/* TS_ERROR_HANDLER.report_vscn0f_error */
extern void T28f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T76f54(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T1195c60(T0* a1);
/* TS_ERROR_HANDLER.report_vscn0h_error */
extern void T28f61(T0* C, T0* a1);
/* ET_CLASS.set_overridden_class */
extern void T90f100(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T90f151(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T90f57(T0* C);
/* ET_CLASS.set_name */
extern void T90f148(T0* C, T0* a1);
/* ET_CLASS.set_filename */
extern void T90f147(T0* C, T0* a1);
/* ET_CLASS.cloned_class */
extern T0* T90f63(T0* C);
/* ET_CLASS.copy */
extern void T90f101(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T96f21(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T103f23(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T76f53(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1195c59(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T76f14(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvscn1a_error */
extern void T28f60(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T90f58(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T274f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T274f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T274f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T274f1047(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T751f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T744f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T751f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1107c2(T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T744c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T751c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T268f123(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T274f1046(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T745f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].aliased_resized_area */
extern T0* T741f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T745f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1106c2(T6 a1);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T741c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T745c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T268f122(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T748c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T748f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T274f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T274f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T274f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T274f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T274f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T274f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T274f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T274f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T274f1037(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T274f1036(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T735f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1105c2(T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T735c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T742c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T268f121(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T274f1035(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T268f120(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T274f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T274f1033(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T737f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T733f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T737f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1104c2(T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T733c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T737c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T268f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T274f1032(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T268f117(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T274f1031(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T274f1030(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].aliased_resized_area */
extern T0* T724f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1103c2(T6 a1);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T724c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T731c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T274f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T274f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T274f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T274f1026(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T268f116(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T274f1025(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T274f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T274f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T274f1022(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T274f1021(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T274f1020(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T274f1019(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T274f1788(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T348f43(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T348f51(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T348f50(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T348f49(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T348f48(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T348f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T431f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T431f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T348f46(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T348f58(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T348f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T348f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T348f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T348f55(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T348f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T348f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T348f19(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T348f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T348f18(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T348f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T348f44(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T348f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T348f27(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T348f26(T0* C);
/* ET_CLASS.set_providers */
extern void T90f142(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T348c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T348f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T431c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T348f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T348f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T348f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T348f38(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T274f1018(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T274f1787(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T274f1786(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_SYSTEM.set_dispose_seed */
extern void T269f174(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T247f192(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern unsigned char ge376os9470;
extern T0* ge376ov9470;
extern T0* T267f146(T0* C);
/* ET_SYSTEM.set_function_item_seed */
extern void T269f173(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T247f191(T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T269f172(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T247f190(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T76f52(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1195c58(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T76f13(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f59(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T269f171(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T247f189(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge376os9510;
extern T0* ge376ov9510;
extern T0* T267f143(T0* C);
/* ET_SYSTEM.set_copy_seed */
extern void T269f170(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T247f188(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T76f51(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1195c57(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T76f12(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f58(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f13(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T76f50(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1195c56(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T76f11(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f57(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f12(T0* C, T0* a1);
/* ET_CLASS.named_query */
extern T0* T90f62(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T418f6(T0* C, T0* a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T269f169(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T247f187(T0* C, T6 a1);
/* ET_CLASS.named_procedure */
extern T0* T90f61(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T253f6(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge376os9469;
extern T0* ge376ov9469;
extern T0* T267f141(T0* C);
/* ET_CLASS.set_end_keyword */
extern void T90f136(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T90f135(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T90f134(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T90f133(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T90f132(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T90f131(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T90f130(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T90f129(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T302f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T307f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T307f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T274f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T274f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T274f1015(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T90f128(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T274f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T274f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T274f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T274f1011(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T274f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T274f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T274f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T274f1007(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T274f1006(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T274f1005(T0* C);
/* ET_CLASS.set_leading_break */
extern void T90f127(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T274f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T274f963(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T709f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T708f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T709f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1102c2(T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T708c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T709c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T706f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T705f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T706f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1101c2(T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T705c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T706c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T701f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].aliased_resized_area */
extern T0* T700f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T701f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1099c2(T6 a1);
/* SPECIAL [ET_VOID].make */
extern T0* T700c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T701c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T698f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T697f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T698f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1098c2(T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T697c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T698c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T695f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T694f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T695f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1097c2(T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T694c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T695c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T692f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].aliased_resized_area */
extern T0* T691f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T692f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1096c2(T6 a1);
/* SPECIAL [ET_RESULT].make */
extern T0* T691c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T692c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T689f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T688f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T689f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1095c2(T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T688c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T689c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T683f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T682f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T683f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1093c2(T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T682c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T683c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T680f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T679f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T680f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1092c2(T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T679c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T680c3(void);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T52f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T51f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T52f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T108c2(T6 a1);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T51c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T52c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T677f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T676f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T677f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1091c2(T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T676c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T677c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].aliased_resized_area */
extern T0* T673f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1090c2(T6 a1);
/* SPECIAL [ET_CURRENT].make */
extern T0* T673c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T674c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T668f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].aliased_resized_area */
extern T0* T667f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T668f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1088c2(T6 a1);
/* SPECIAL [ET_BREAK].make */
extern T0* T667c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T668c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T666f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T665f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T666f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T665c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T666c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T663f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].aliased_resized_area */
extern T0* T662f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T663f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1086c2(T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T662c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T663c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T660f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].aliased_resized_area */
extern T0* T659f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T660f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1085c2(T6 a1);
/* SPECIAL [ET_POSITION].make */
extern T0* T659c3(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T660c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T457f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T574c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T458c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T457c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T658f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T657f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T658f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1084c2(T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T657c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T658c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T655f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T654f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T655f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1083c2(T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T654c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T655c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T274f962(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T274f960(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T274f983(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T274f982(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T274f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T274f981(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T274f980(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T274f979(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T274f978(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T274f977(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T274f976(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T274f975(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T274f959(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T274f974(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T274f1002(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T274f991(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T268f15(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T268f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T268f13(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T718f14(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T718c13(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T718f15(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T274f902(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T268f12(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T717f14(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T717c13(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T717f15(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T268f11(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T716f24(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T716c23(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T716f25(T0* C);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T76f45(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_silu_error */
extern void T28f52(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T76f44(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sifu_error */
extern void T28f51(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T268f10(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T715f25(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T715c24(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T715f26(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T268f9(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T714f25(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T714c24(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T714f26(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T268f8(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T661f11(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T661c10(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T661f12(T0* C);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T76f31(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssnp_error */
extern void T28f38(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T76f43(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssel_error */
extern void T28f50(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T76f42(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssnl_error */
extern void T28f49(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T76f41(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sssc_error */
extern void T28f48(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T76f40(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sscu_error */
extern void T28f47(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T76f39(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssac_error */
extern void T28f46(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T76f38(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssas_error */
extern void T28f45(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T76f37(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_ssao_error */
extern void T28f44(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T268f7(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T713f19(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T274f905(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T713c18(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T713f20(T0* C);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T63f1(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T274f908(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T268f6(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T712f23(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T274f904(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T712c22(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T712f24(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T274f679(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T274f677(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T1067f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T1067f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T1067f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T1067f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T1067f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T1067f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T1067f33(T0* C, T0* a1);
/* STRING_8.hash_code */
extern T6 T17f27(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T1067f30(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T1067f45(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T1067f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T1067f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T1067f53(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].resize */
extern T0* T117f1(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T1067f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T1067f23(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T1067f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T1067f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T1067f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T1067f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T1067f28(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T1067f21(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T1067f38(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T1067f43(T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T73f1(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.strings */
extern unsigned char ge585os11358;
extern T0* ge585ov11358;
extern T0* T274f887(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T1067f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].internal_set_equality_tester */
extern void T1223f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern unsigned char ge954os3247;
extern T0* ge954ov3247;
extern T0* T274f898(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T73c2(void);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T1067c37(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T1067f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].make */
extern T0* T1223c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].new_cursor */
extern T0* T1223f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1240c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T1067f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1225c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T1067f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T1067f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T1067f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T1067f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T1067f55(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T274f1811(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T173f15(T0* C, T6 a1, T6 a2, T0* a3);
/* STRING_8.subcopy */
extern void T17f49(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T173f8(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T67f16(T0* C, T0* a1);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern unsigned char ge585os11359;
extern T0* ge585ov11359;
extern T0* T274f886(T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T274f675(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T274f1810(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T274f1001(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T268f5(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T711f18(T0* C, T6 a1, T6 a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T76f36(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sceq_error */
extern void T28f43(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T76f35(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_scqq_error */
extern void T28f42(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T76f34(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_scac_error */
extern void T28f41(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T76f33(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_scas_error */
extern void T28f40(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T76f32(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_scao_error */
extern void T28f39(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T268f4(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T710f15(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T274f903(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T710c14(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T710f16(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T274f1000(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T268f115(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T723f14(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T723c13(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T723f15(T0* C);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T76f49(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_scsc_error */
extern void T28f56(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T76f48(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sccu_error */
extern void T28f55(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T274f999(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T268f114(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T722f14(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T722c13(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T722f15(T0* C);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T76f47(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sctq_error */
extern void T28f54(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T268f3(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T675f13(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T675c12(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T675f10(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T675f14(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T675f15(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T274f992(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T274f998(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T274f997(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T268f113(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T401f31(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T401c42(void);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T274f826(T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T268f112(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T656f10(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T268f111(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T268f110(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge376os9614;
extern T0* ge376ov9614;
extern T0* T267f749(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T401c76(void);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T274f820(T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T268f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge376os9663;
extern T0* ge376ov9663;
extern T0* T267f748(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T401c75(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T268f108(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T401c41(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T268f107(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T268f106(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge376os9645;
extern T0* ge376ov9645;
extern T0* T267f746(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T401c73(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T268f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge376os9636;
extern T0* ge376ov9636;
extern T0* T267f745(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T401c72(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T268f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge376os9631;
extern T0* ge376ov9631;
extern T0* T267f744(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T401c71(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T268f103(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T401c40(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T268f102(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T268f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T268f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T268f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T268f98(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge376os9639;
extern T0* ge376ov9639;
extern T0* T267f741(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T401c68(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T268f97(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T268f96(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T681f14(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T681c18(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T268f95(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T268f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T268f93(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T672f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T268f92(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T268f91(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge376os9658;
extern T0* ge376ov9658;
extern T0* T267f738(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T401c65(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T268f90(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T690f13(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T268f89(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T268f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T268f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T268f86(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T401c37(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T268f85(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T268f84(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T268f83(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge376os9626;
extern T0* ge376ov9626;
extern T0* T267f733(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T401c60(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T268f82(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T268f81(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge376os9613;
extern T0* ge376ov9613;
extern T0* T267f731(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T401c58(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T268f80(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge376os9665;
extern T0* ge376ov9665;
extern T0* T267f730(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T401c57(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T268f79(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T268f78(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T693f10(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T693c9(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T693f11(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T693f12(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T693f7(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T268f77(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T268f76(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T268f75(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T721f13(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T721c12(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T721f14(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T721f15(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T721f7(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T268f74(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T268f73(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T268f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T268f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T268f70(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T653f10(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T268f69(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T268f68(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T699f13(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T699c12(void);
/* ET_VOID.make_token */
extern void T699f14(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T699f15(T0* C);
/* ET_VOID.tokens */
extern T0* T699f7(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T268f67(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T720f13(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T720c12(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T720f14(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T720f15(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T720f7(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T268f66(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T268f65(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T268f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T268f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T268f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T268f61(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T681c17(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T268f60(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T268f59(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T681c16(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T268f58(T0* C, T0* a1);
/* ET_AST_FACTORY.new_identifier */
extern T0* T268f57(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T274f906(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T1067f41(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T1067f35(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T1067f25(T0* C, T6 a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T268f56(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T268f55(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T268f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T268f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T268f52(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge376os9635;
extern T0* ge376ov9635;
extern T0* T267f718(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T401c45(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T268f51(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T268f50(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T268f2(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T274f996(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T268f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T268f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T268f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T268f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T268f45(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T394f62(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T268f44(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T696f17(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T696c27(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T696f28(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T268f43(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T268f42(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T696c26(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T268f41(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T696c25(void);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T268f40(T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T394c67(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T268f39(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T394c66(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T268f38(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T696c24(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T274f660(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T274f995(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T274f994(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T268f37(T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T394c65(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T268f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T268f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T268f34(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T395f60(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T268f33(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T268f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T268f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T268f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T268f29(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T707f59(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T268f28(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T268f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T268f26(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge376os9592;
extern T0* ge376ov9592;
extern T0* T267f707(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T394c70(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T268f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T267f706(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T702c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T702f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T702f3(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T268f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge376os9594;
extern T0* ge376ov9594;
extern T0* T267f705(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T394c69(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T268f23(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T696c23(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T268f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T696c22(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T268f21(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T394c61(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T268f20(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T696c21(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T268f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T696c20(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T268f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T696c19(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T268f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T696c18(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T268f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T696c16(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T274f659(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T274f973(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T76f30(T0* C, T0* a1, T0* a2);
/* TS_ERROR_HANDLER.report_sseq_error */
extern void T28f37(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T274f990(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T274f632(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T274f972(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T274f923(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T173f4(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T43f19(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T173f5(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T352f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T352f8(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T352f11(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T352f15(T0* C);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T352f14(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T352f10(T0* C, T14 a1);
/* KL_CHARACTER_BUFFER.put */
extern void T173f11(T0* C, T2 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T24f26(T0* C);
/* KL_STDIN_FILE.read_character */
extern void T352f20(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T352f22(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T352f13(T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T24f49(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T24f50(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T24f29(T0* C, T14 a1);
/* YY_FILE_BUFFER.compact_left */
extern void T43f21(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T173f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T43f23(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T173f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge797os4578;
extern T6 ge797ov4578;
extern T6 T43f13(T0* C);
/* YY_BUFFER.fill */
extern void T44f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T43f17(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T44f13(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T274f631(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T274f630(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T274f971(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T173f3(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T274f591(T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T274f958(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T274f967(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T274f988(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T274f1783(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T274f1809(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T904f6(T0* C);
/* SPECIAL [ET_WRITABLE].put_default */
extern void T904f7(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T931f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].put_default */
extern void T931f7(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T935f6(T0* C);
/* SPECIAL [ET_WHEN_PART].put_default */
extern void T935f7(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T879f6(T0* C);
/* SPECIAL [ET_VARIANT].put_default */
extern void T879f7(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T815f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].put_default */
extern void T815f7(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T544f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].put_default */
extern void T544f7(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].clear_all */
extern void T483f6(T0* C);
/* SPECIAL [ET_TYPE].put_default */
extern void T483f7(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T992f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].put_default */
extern void T992f7(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T951f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].put_default */
extern void T951f7(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T784f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].put_default */
extern void T784f7(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T789f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].put_default */
extern void T789f7(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].clear_all */
extern void T449f6(T0* C);
/* SPECIAL [ET_QUERY].put_default */
extern void T449f7(T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER].clear_all */
extern void T889f6(T0* C);
/* SPECIAL [ET_QUALIFIED_LIKE_IDENTIFIER].put_default */
extern void T889f7(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T446f6(T0* C);
/* SPECIAL [ET_PROCEDURE].put_default */
extern void T446f7(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T833f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].put_default */
extern void T833f7(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T837f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].put_default */
extern void T837f7(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T726f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].put_default */
extern void T726f7(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T403f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].put_default */
extern void T403f7(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].clear_all */
extern void T782f6(T0* C);
/* SPECIAL [ET_PARENT].put_default */
extern void T782f7(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T968f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].put_default */
extern void T968f7(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T725f6(T0* C);
/* SPECIAL [ET_OBSOLETE].put_default */
extern void T725f7(T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].clear_all */
extern void T461f6(T0* C);
/* SPECIAL [ET_OBJECT_TEST_LIST].put_default */
extern void T461f7(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T750f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].put_default */
extern void T750f7(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T953f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].put_default */
extern void T953f7(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T957f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].put_default */
extern void T957f7(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T990f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].put_default */
extern void T990f7(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T876f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].put_default */
extern void T876f7(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T454f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].put_default */
extern void T454f7(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T864f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].put_default */
extern void T864f7(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T866f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].put_default */
extern void T866f7(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T770f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].put_default */
extern void T770f7(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T786f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].put_default */
extern void T786f7(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T730f6(T0* C);
/* SPECIAL [ET_INVARIANTS].put_default */
extern void T730f7(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T896f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].put_default */
extern void T896f7(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T910f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].put_default */
extern void T910f7(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T556f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].put_default */
extern void T556f7(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T735f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].put_default */
extern void T735f7(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T744f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].put_default */
extern void T744f7(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T741f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].put_default */
extern void T741f7(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T733f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].put_default */
extern void T733f7(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T724f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].put_default */
extern void T724f7(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T908f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].put_default */
extern void T908f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T752f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].put_default */
extern void T752f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T756f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].put_default */
extern void T756f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T754f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].put_default */
extern void T754f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T451f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].put_default */
extern void T451f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T858f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].put_default */
extern void T858f7(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T859f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].put_default */
extern void T859f7(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T764f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].put_default */
extern void T764f7(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T493f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].put_default */
extern void T493f7(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T799f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].put_default */
extern void T799f7(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T729f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].put_default */
extern void T729f7(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T822f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].put_default */
extern void T822f7(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T843f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].put_default */
extern void T843f7(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T790f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].put_default */
extern void T790f7(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T971f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].put_default */
extern void T971f7(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T871f6(T0* C);
/* SPECIAL [ET_EXPRESSION].put_default */
extern void T871f7(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T785f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].put_default */
extern void T785f7(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T794f6(T0* C);
/* SPECIAL [ET_EXPORT].put_default */
extern void T794f7(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T925f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].put_default */
extern void T925f7(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T927f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].put_default */
extern void T927f7(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T914f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].put_default */
extern void T914f7(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T727f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].put_default */
extern void T727f7(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T807f6(T0* C);
/* SPECIAL [ET_CREATOR].put_default */
extern void T807f7(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T747f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].put_default */
extern void T747f7(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T728f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].put_default */
extern void T728f7(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T813f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].put_default */
extern void T813f7(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T811f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].put_default */
extern void T811f7(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T470f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].put_default */
extern void T470f7(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T761f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].put_default */
extern void T761f7(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T766f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].put_default */
extern void T766f7(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T775f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].put_default */
extern void T775f7(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T829f6(T0* C);
/* SPECIAL [ET_CONSTANT].put_default */
extern void T829f7(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T835f6(T0* C);
/* SPECIAL [ET_COMPOUND].put_default */
extern void T835f7(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T795f6(T0* C);
/* SPECIAL [ET_CLIENTS].put_default */
extern void T795f7(T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].clear_all */
extern void T405f6(T0* C);
/* SPECIAL [ET_CLIENT_ITEM].put_default */
extern void T405f7(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].clear_all */
extern void T165f6(T0* C);
/* SPECIAL [ET_CLASS].put_default */
extern void T165f7(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T937f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].put_default */
extern void T937f7(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T943f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].put_default */
extern void T943f7(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T946f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].put_default */
extern void T946f7(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T941f6(T0* C);
/* SPECIAL [ET_CHOICE].put_default */
extern void T941f7(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T898f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].put_default */
extern void T898f7(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T987f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].put_default */
extern void T987f7(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T902f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].put_default */
extern void T902f7(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T994f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].put_default */
extern void T994f7(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T826f6(T0* C);
/* SPECIAL [ET_ASSIGNER].put_default */
extern void T826f7(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T499f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].put_default */
extern void T499f7(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T1007f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].put_default */
extern void T1007f7(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T1004f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].put_default */
extern void T1004f7(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T1020f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].put_default */
extern void T1020f7(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T1018f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].put_default */
extern void T1018f7(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T781f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].put_default */
extern void T781f7(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T397f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].put_default */
extern void T397f7(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T919f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].put_default */
extern void T919f7(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T708f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].put_default */
extern void T708f7(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T705f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].put_default */
extern void T705f7(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T703f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].put_default */
extern void T703f7(T0* C, T6 a1);
/* SPECIAL [ET_VOID].clear_all */
extern void T700f6(T0* C);
/* SPECIAL [ET_VOID].put_default */
extern void T700f7(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T697f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].put_default */
extern void T697f7(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T694f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].put_default */
extern void T694f7(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].clear_all */
extern void T691f6(T0* C);
/* SPECIAL [ET_RESULT].put_default */
extern void T691f7(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T688f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].put_default */
extern void T688f7(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T685f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].put_default */
extern void T685f7(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T682f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].put_default */
extern void T682f7(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T679f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].put_default */
extern void T679f7(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T51f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].put_default */
extern void T51f7(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T676f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].put_default */
extern void T676f7(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T673f6(T0* C);
/* SPECIAL [ET_CURRENT].put_default */
extern void T673f7(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T670f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].put_default */
extern void T670f7(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].clear_all */
extern void T667f6(T0* C);
/* SPECIAL [ET_BREAK].put_default */
extern void T667f7(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T665f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].put_default */
extern void T665f7(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T662f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].put_default */
extern void T662f7(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].clear_all */
extern void T659f5(T0* C);
/* SPECIAL [ET_POSITION].put_default */
extern void T659f6(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T458f6(T0* C);
/* SPECIAL [ET_SYMBOL].put_default */
extern void T458f7(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T657f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].put_default */
extern void T657f7(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T654f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].put_default */
extern void T654f7(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T456f6(T0* C);
/* SPECIAL [ET_KEYWORD].put_default */
extern void T456f7(T0* C, T6 a1);
/* SPECIAL [ANY].clear_all */
extern void T48f5(T0* C);
/* SPECIAL [ANY].put_default */
extern void T48f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T274f961(T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T274f921(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T43f22(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T43f24(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T274f957(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T357f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T357f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T356f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T356f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T121f12(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].clear_items */
extern void T121f14(T0* C, T6 a1, T6 a2);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T43f25(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T274f957p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T274f957p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T24f37(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T24f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T66f8(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T66f4(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge1357os2733;
extern T0* ge1357ov2733;
extern T0* T24f10(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T66c9(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T66f11(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T66f6(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T24f44(T0* C);
/* UNIX_FILE_INFO.update */
extern void T66f10(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T66f12(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T24f22(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T24f39(T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.reset */
extern void T24f51(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T274f864(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T24f20(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T24f16(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern unsigned char ge585os11389;
extern T0* ge585ov11389;
extern T0* T274f897(T0* C);
/* ET_CLASS.reset */
extern void T90f102(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T90f121(T0* C);
/* ET_CLASS.reset_parsed */
extern void T90f103(T0* C);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T274f863(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T472f7(T0* C, T6 a1);
/* ET_SYSTEM.classes_in_group */
extern T0* T269f136(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T472f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T472f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T472f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T472f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T472c10(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T472f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T578c3(T0* a1);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern unsigned char ge311os9033;
extern T6 ge311ov9033;
extern T6 T269f139(T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T247f140(T0* C, T0* a1);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T247f142(T0* C);
/* ET_EIFFEL_PARSER.universe */
extern T0* T274f862(T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T245f29(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T245f29p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T245f24(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T93f39(T0* C);
/* KL_DIRECTORY.readentry */
extern void T93f42(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T93f26(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T93f23(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T93f16(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T93f19(T0* C);
/* KL_DIRECTORY.open_read */
extern void T93f38(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T93f41(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T93f24(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T93f20(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T93f27(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T93f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T274f861(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge583os13244;
extern T0* ge583ov13244;
extern T0* T274f895(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T274f860(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T274f894(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T274f893(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T274f892(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T274f859(T0* C);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T274f858(T0* C);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T245f41(T0* C, T1 a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T270f2(T0* C, T0* a1);
/* ET_LACE_SYSTEM.reset_classes_incremental */
extern void T247f185(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T334c5(void);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T334f2(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T333c7(void);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T412c2(void);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T411c4(void);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T411f3(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T333f7p1(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T333f4(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T332c6(void);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T410c2(void);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T332f6p1(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T332f3(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T331c6(void);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T409c2(void);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T331f6p1(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T331f3(T0* C);
/* ET_CLASS.set_implementation_error */
extern void T90f111(T0* C);
/* ET_CLASS.set_interface_error */
extern void T90f110(T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T90f109(T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T253f10(T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T418f10(T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T90f108(T0* C);
/* ET_CLASS.set_flattening_error */
extern void T90f107(T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T90f106(T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T90f105(T0* C);
/* ET_LACE_SYSTEM.reset_modified_classes */
extern void T247f184(T0* C);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T96f17(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T24f17(T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T24f23(T0* C);
/* UNIX_FILE_INFO.is_plain */
extern T1 T66f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern unsigned char ge1010os7432;
extern T0* ge1010ov7432;
extern T0* T96f18(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T103f19(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T103f20(T0* C);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T96f16(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T103f18(T0* C, T0* a1);
/* ET_LACE_SYSTEM.file_system */
extern T0* T247f143(T0* C);
/* ET_LACE_SYSTEM.unix_file_system */
extern T0* T247f147(T0* C);
/* ET_LACE_SYSTEM.windows_file_system */
extern T0* T247f146(T0* C);
/* ET_LACE_SYSTEM.operating_system */
extern T0* T247f145(T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T279f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T387f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T387f6(T0* C, T6 a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T246f5(T0* C, T0* a1);
/* ET_LACE_SYSTEM.import_classes */
extern void T247f183(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T247f183ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T247f183ac2(T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T280f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T391f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T391f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T250f44(T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.is_empty */
extern T1 T279f3(T0* C);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T279f2(T0* C);
/* ET_ADAPTED_LIBRARIES.do_ordered */
extern void T279f6(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_ordered */
extern T0* T279f6ac1(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_LIBRARY].do_all */
extern void T390f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].item */
extern T0* T390f6(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].sort */
extern void T388f8(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T154f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T154f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T154c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T154f8(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T153c3(T6 a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].put_last */
extern void T390f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].replace */
extern void T474f12(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].item */
extern T0* T474f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T228f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T228f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].make */
extern T0* T390c8(T6 a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].new_cursor */
extern T0* T390f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIBRARY].make */
extern T0* T532c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T531f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIBRARY].make_area */
extern T0* T640c2(T6 a1);
/* SPECIAL [ET_LIBRARY].make */
extern T0* T530c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T531c2(void);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T474f7(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T474f5(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].copy */
extern void T474f13(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T582f2(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T474f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].make */
extern T0* T584c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T474f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T474f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T584f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_position */
extern void T584f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T228f7(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T228f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T228f13(T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T45f4(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T228f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T188c4(T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T228f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T228f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T188f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_position */
extern void T188f5(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].reset */
extern void T388f9(T0* C);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T279f8(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].make */
extern T0* T388c7(T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].make */
extern T0* T474c11(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].make */
extern T0* T583f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]].make_area */
extern T0* T1035c2(T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].make */
extern T0* T582c3(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T583c2(void);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T228c11(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_map */
extern T0* T528c22(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_with_equality_testers */
extern void T528f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY].make */
extern T0* T637c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY].new_cursor */
extern T0* T637f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY].make */
extern T0* T1062c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].new_cursor */
extern T0* T528f19(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY].make */
extern T0* T639c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_sparse_container */
extern void T528f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].unset_found_item */
extern void T528f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_slots */
extern void T528f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].special_integer_ */
extern T0* T528f18(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].new_modulus */
extern T6 T528f20(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_clashes */
extern void T528f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_key_storage */
extern void T528f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_item_storage */
extern void T528f25(T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T280f5(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T280f5ac1(T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T392f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T392f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T392f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T392c20(T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T392f15(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T536c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T392f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T392f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T392f16(T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T392f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T392f24(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T392f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T392f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T537f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_ASSEMBLY].make_area */
extern T0* T642c2(T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make */
extern T0* T538c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T537c3(void);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T342f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.assembly */
extern T0* T288f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T399f9(T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T288f3(T0* C);
/* ET_LACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T247f148(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T342c2(T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T280f4(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T288c5(void);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T399c10(T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T399f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T540c3(T0* a1);
/* ET_LACE_SYSTEM.activate_processors */
extern void T247f156(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T272f10(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T272c9(void);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T272f11(T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T351f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T351c6(void);
/* ET_TYPE_CHECKER.make */
extern T0* T433c7(void);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge496os20359;
extern T0* ge496ov20359;
extern T0* T433f5(T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T433f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T433f7p1(T0* C);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge488os16069;
extern T0* ge488ov16069;
extern T0* T351f4(T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T351f5(T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T350c17(T6 a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T350f12(T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T447c3(T0* a1);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T350f22(T0* C);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T350f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T350f13(T0* C);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T350f14(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T350f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T350f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T350f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T349c17(T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T349f12(T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T444c3(T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T349f22(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T349f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T349f13(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T349f14(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T349f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T349f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T349f18(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T272f12(T0* C);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T272f8(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T347c21(void);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T443c1(void);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T442c3(void);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T568c6(T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T568f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T1033c3(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T347f22(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T367f16(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T367f17(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T440f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T440f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T566f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T565f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T440f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T440f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T347f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T440f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T440f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T567f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T567f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T440f6(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T367c14(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T367f15(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge440os16698;
extern T0* ge440ov16698;
extern T0* T367f4(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T440f7(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T440c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T440f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T567c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T566f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1030c2(T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T565c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T566c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T439c6(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T439f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T564c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T523f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T634c2(T6 a1);
/* SPECIAL [ET_FEATURE].make */
extern T0* T524c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T523c2(void);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T438c6(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T438f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T563c3(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T561f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1029c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T562c1(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T561c2(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T360c16(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T360f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T466c6(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T437c6(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T437f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T560c3(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T558f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1028c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T559c1(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T558c2(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T361c16(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T361f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T467c6(T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T436c6(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T436f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T557c3(T0* a1);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge493os15777;
extern T0* ge493ov15777;
extern T0* T347f19(T0* C);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T347f18(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T278c11(void);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T380c4(void);
/* ET_SIGNATURE_CHECKER.make */
extern void T380f4p1(T0* C);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T380f3(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T377c5(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T516f23(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T624f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T516c22(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T516f24(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T624c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T624f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1052c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T516f19(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T626c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T516f25(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T516f30(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T516f29(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T516f18(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T516f20(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T516f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T516f27(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T620f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1051c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T622c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T620c2(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T516f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T627f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1053c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T629c1(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T627c2(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T514f19(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T513c1(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T514c18(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T514f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T619c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T514f24(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T514f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T514f14(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T514f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T514f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T514f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T514f20(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T377f5p1(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T377f4(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T376c10(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T512c22(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T512f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T613c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T613f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1049c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T512f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T615c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T512f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T512f29(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T512f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T512f18(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T512f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T512f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T512f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T512f25(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T616f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1050c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T618c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T616c2(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T511f23(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T608f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T511c22(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T511f24(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T608c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T608f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1047c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T511f19(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T610c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T511f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T511f30(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T511f29(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T511f18(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T511f20(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T511f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T511f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T511f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T611f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T1048c2(T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T611c2(void);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T510f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T510c18(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T510f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T606c3(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T510f24(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T510f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T510f14(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T510f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T510f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T510f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T510f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T509f23(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T600f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge391os6915;
extern T0* ge391ov6915;
extern T0* T376f8(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T369c1(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T509c22(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T509f24(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T600c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T600f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1045c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T509f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T602c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T509f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T509f30(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T509f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T509f18(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T509f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T509f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T509f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T509f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T603f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1046c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T605c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T603c2(void);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T376f10p1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T376f9(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T368f23(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T486f6(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T278f9(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T368c22(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T368f24(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T486c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T486f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T591c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T368f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T488c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T368f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T368f30(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T368f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T368f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T368f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T368f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T368f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T368f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T489f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T592c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T491c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T489c2(void);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T386c4(void);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T386f4p1(T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T386f3(T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T385f5(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T385c4(void);
/* ET_PARENT_CHECKER3.make */
extern void T385f4p1(T0* C);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T385f3(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern void T278f11p1(T0* C);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T278f10(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T277c20(void);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T384c22(T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T384f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FEATURE, INTEGER_32].make */
extern T0* T520c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T520f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T633c3(T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T384f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T522c3(T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T384f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T384f29(T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T384f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T384f18(T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T384f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T384f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T384f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T384f25(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T383c6(void);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge481os18276;
extern T0* ge481ov18276;
extern T0* T383f3(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T518c5(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T550f4(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T550f3(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T550c5(T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T383f5(T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T383f6p1(T0* C);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T383f4(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T382c3(void);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T382f2(T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T381c3(void);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T381f2(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T379c4(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T517c5(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T517f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T631c22(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T631f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1058c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1058f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1191c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T631f19(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1060c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T631f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T631f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T631f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T631f18(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T631f20(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T631f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T631f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1054f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_FEATURE].make_area */
extern T0* T1190c2(T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make */
extern T0* T1055c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1054c2(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T631f25(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T630c6(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T630f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1056c3(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T379f4p1(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T379f3(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T378c3(void);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T378f2(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T375c22(T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T375f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T504c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T504f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T597c3(T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T375f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T506c3(T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T375f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T375f29(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T375f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T375f18(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T375f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T375f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T375f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T375f25(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T507f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT].make_area */
extern T0* T598c2(T6 a1);
/* SPECIAL [ET_CLIENT].make */
extern T0* T508c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T507c2(void);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T374c6(T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T374f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T502c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T500f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT_LIST].make_area */
extern T0* T596c2(T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make */
extern T0* T501c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T500c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T371f23(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T494f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge430os13984;
extern T0* ge430ov13984;
extern T0* T277f18(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T372c1(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T371c22(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T371f24(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T494c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T494f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T594c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T371f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T496c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T371f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T371f30(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T371f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T371f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T371f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T371f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T371f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T371f26(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T277f17(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T277f20p1(T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T277f19(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T276c8(void);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T366c5(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T482c5(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T482f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T589c22(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T589f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1039c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1039f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1185c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T589f19(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1041c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T589f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T589f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T589f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T589f18(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T589f20(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T589f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T589f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T589f25(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T588c6(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T588f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1037c3(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T366f5p1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T366f4(T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T365c3(void);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T365f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T364c22(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T364f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T476c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T476f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T586c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T364f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T478c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T364f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T364f29(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T364f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T364f18(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T364f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T364f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T364f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T364f25(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T363c5(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T363f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T473c22(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T473f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].make */
extern T0* T579c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T579f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1034c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T473f19(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T581c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T473f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T473f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T473f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T473f18(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T473f20(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T473f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T473f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T473f25(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T276f8p1(T0* C);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T276f7(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T275c3(void);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T275f2(T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T274c914(void);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T274f916(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T274f919(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge580os12596;
extern T0* ge580ov12596;
extern T0* T274f876(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T274f657(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T46f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T274f937(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T274f948(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T426f2(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T80f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].copy_data */
extern void T45f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].move_data */
extern void T45f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T45f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T45f12(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge944os1971;
extern T0* ge944ov1971;
extern T0* T274f857(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T426c1(void);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T274f936(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T274f935(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T274f934(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T274f933(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T274f932(T0* C, T0* a1);
/* ARRAY [INTEGER_32].make */
extern T0* T80c5(T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make_area */
extern void T80f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge580os12589;
extern T0* ge580ov12589;
extern T0* T274f874(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T274f931(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T274f930(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T274f929(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T274f928(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T274f927(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T274f926(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge580os12588;
extern T0* ge580ov12588;
extern T0* T274f871(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge580os12585;
extern T0* ge580ov12585;
extern T0* T274f866(T0* C);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T274f925(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T274f924(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge580os12584;
extern T0* ge580ov12584;
extern T0* T274f653(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge580os12581;
extern T0* ge580ov12581;
extern T0* T274f647(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T274f947(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T274f946(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge580os12580;
extern T0* ge580ov12580;
extern T0* T274f643(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge580os12577;
extern T0* ge580ov12577;
extern T0* T274f639(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T274f945(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T274f944(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge580os12576;
extern T0* ge580ov12576;
extern T0* T274f615(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge580os12575;
extern T0* ge580ov12575;
extern T0* T274f613(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T274f918(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T274f915(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T274f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T274f920(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T274f922(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge588os13262;
extern T0* ge588ov13262;
extern T0* T274f651(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T274f855(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge588os13261;
extern T0* ge588ov13261;
extern T0* T274f648(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge588os13260;
extern T0* ge588ov13260;
extern T0* T274f646(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge588os13259;
extern T0* ge588ov13259;
extern T0* T274f644(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge588os13258;
extern T0* ge588ov13258;
extern T0* T274f642(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge588os13257;
extern T0* ge588ov13257;
extern T0* T274f640(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge588os13253;
extern T0* ge588ov13253;
extern T0* T274f637(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T274f943(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T274f949(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T274f942(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T274f941(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge588os13249;
extern T0* ge588ov13249;
extern T0* T274f635(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T274f940(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T274f939(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T274f938(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge796os2112;
extern T0* ge796ov2112;
extern T0* T274f872(T0* C);
/* YY_BUFFER.make */
extern T0* T44c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T44f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T173f14(T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T44f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T362c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T362f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T471c4(T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T359c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T359f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T465c4(T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].make */
extern T0* T358c10(T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T357c8(T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T356c8(T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T355c9(T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T354c9(T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T121c8(T6 a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T43f20(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T43c20(T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T43f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge961os3749;
extern T0* ge961ov3749;
extern T0* T29f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T352c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T352f21(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T352f24(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T352f12(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T352f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.std */
extern T0* T274f877(T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T274f914p1(T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T273c44(void);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T273f45(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T273f35(T0* C);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T273f46(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T273f48(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T273f50(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T273f29(T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T273f47(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T273f49(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge582os11289;
extern T0* ge582ov11289;
extern T0* T273f38(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T273f42(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge582os11288;
extern T0* ge582ov11288;
extern T0* T273f36(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge582os11287;
extern T0* ge582ov11287;
extern T0* T273f34(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge582os11286;
extern T0* ge582ov11286;
extern T0* T273f32(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge582os11285;
extern T0* ge582ov11285;
extern T0* T273f30(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge582os11284;
extern T0* ge582ov11284;
extern T0* T273f28(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge582os11281;
extern T0* ge582ov11281;
extern T0* T273f40(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T273f54(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T273f55(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T273f43(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T273f53(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge582os11278;
extern T0* ge582ov11278;
extern T0* T273f37(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T273f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T273f51(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T273f31(T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T273f33(T0* C);
/* ET_LACE_SYSTEM.set_use_reference_keyword */
extern void T247f155(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attribute_keyword */
extern void T247f154(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T247f153(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T246c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T266f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.make */
extern T0* T245c38(T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T245f39(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T246f6(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_error_handler */
extern void T247f152(T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T247c151(void);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T270c1(void);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T247f162(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge376os9435;
extern T0* ge376ov9435;
extern T0* T267f64(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge376os9414;
extern T0* ge376ov9414;
extern T0* T267f63(T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge376os9406;
extern T0* ge376ov9406;
extern T0* T267f62(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge376os9432;
extern T0* ge376ov9432;
extern T0* T267f61(T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge376os9401;
extern T0* ge376ov9401;
extern T0* T267f60(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge376os9426;
extern T0* ge376ov9426;
extern T0* T267f59(T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge376os9391;
extern T0* ge376ov9391;
extern T0* T267f58(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge376os9421;
extern T0* ge376ov9421;
extern T0* T267f57(T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge376os9384;
extern T0* ge376ov9384;
extern T0* T267f56(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge376os9420;
extern T0* ge376ov9420;
extern T0* T267f55(T0* C);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge376os9381;
extern T0* ge376ov9381;
extern T0* T267f54(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge376os9417;
extern T0* ge376ov9417;
extern T0* T267f53(T0* C);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge376os9377;
extern T0* ge376ov9377;
extern T0* T267f52(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].wipe_out */
extern void T250f43(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_wipe_out */
extern void T250f51(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_wipe_out */
extern void T250f50(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_wipe_out */
extern void T250f49(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_wipe_out */
extern void T250f48(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors_after */
extern void T250f46(T0* C);
/* ET_LACE_SYSTEM.set_basic_classes */
extern void T247f161(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge376os9413;
extern T0* ge376ov9413;
extern T0* T267f51(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge376os9411;
extern T0* ge376ov9411;
extern T0* T267f49(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge376os9410;
extern T0* ge376ov9410;
extern T0* T267f48(T0* C);
/* ET_LACE_SYSTEM.set_system_object_class */
extern void T247f181(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge376os9409;
extern T0* ge376ov9409;
extern T0* T267f47(T0* C);
/* ET_LACE_SYSTEM.set_string_32_class */
extern void T247f180(T0* C, T0* a1);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T313c4(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T408c7(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T408f7p1(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge376os9408;
extern T0* ge376ov9408;
extern T0* T267f46(T0* C);
/* ET_LACE_SYSTEM.set_string_8_class */
extern void T247f179(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge376os9407;
extern T0* ge376ov9407;
extern T0* T267f45(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge376os9405;
extern T0* ge376ov9405;
extern T0* T267f44(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge376os9404;
extern T0* ge376ov9404;
extern T0* T267f43(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge376os9434;
extern T0* ge376ov9434;
extern T0* T267f42(T0* C);
/* ET_LACE_SYSTEM.set_real_64_class */
extern void T247f178(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge376os9403;
extern T0* ge376ov9403;
extern T0* T267f41(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge376os9433;
extern T0* ge376ov9433;
extern T0* T267f40(T0* C);
/* ET_LACE_SYSTEM.set_real_32_class */
extern void T247f177(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge376os9402;
extern T0* ge376ov9402;
extern T0* T267f39(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge376os9400;
extern T0* ge376ov9400;
extern T0* T267f38(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge376os9399;
extern T0* ge376ov9399;
extern T0* T267f37(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge376os9431;
extern T0* ge376ov9431;
extern T0* T267f36(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge376os9398;
extern T0* ge376ov9398;
extern T0* T267f35(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge376os9397;
extern T0* ge376ov9397;
extern T0* T267f34(T0* C);
/* ET_LACE_SYSTEM.set_none_class */
extern void T247f176(T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T283c13(T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge376os9396;
extern T0* ge376ov9396;
extern T0* T267f33(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge376os9430;
extern T0* ge376ov9430;
extern T0* T267f32(T0* C);
/* ET_LACE_SYSTEM.set_natural_64_class */
extern void T247f175(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge376os9395;
extern T0* ge376ov9395;
extern T0* T267f31(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge376os9429;
extern T0* ge376ov9429;
extern T0* T267f30(T0* C);
/* ET_LACE_SYSTEM.set_natural_32_class */
extern void T247f174(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge376os9394;
extern T0* ge376ov9394;
extern T0* T267f29(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge376os9428;
extern T0* ge376ov9428;
extern T0* T267f28(T0* C);
/* ET_LACE_SYSTEM.set_natural_16_class */
extern void T247f173(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge376os9393;
extern T0* ge376ov9393;
extern T0* T267f27(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge376os9427;
extern T0* ge376ov9427;
extern T0* T267f26(T0* C);
/* ET_LACE_SYSTEM.set_natural_8_class */
extern void T247f172(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge376os9392;
extern T0* ge376ov9392;
extern T0* T267f25(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge376os9390;
extern T0* ge376ov9390;
extern T0* T267f24(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge376os9425;
extern T0* ge376ov9425;
extern T0* T267f23(T0* C);
/* ET_LACE_SYSTEM.set_integer_64_class */
extern void T247f171(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge376os9388;
extern T0* ge376ov9388;
extern T0* T267f22(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge376os9424;
extern T0* ge376ov9424;
extern T0* T267f21(T0* C);
/* ET_LACE_SYSTEM.set_integer_32_class */
extern void T247f170(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge376os9387;
extern T0* ge376ov9387;
extern T0* T267f20(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge376os9423;
extern T0* ge376ov9423;
extern T0* T267f19(T0* C);
/* ET_LACE_SYSTEM.set_integer_16_class */
extern void T247f169(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge376os9386;
extern T0* ge376ov9386;
extern T0* T267f18(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge376os9422;
extern T0* ge376ov9422;
extern T0* T267f17(T0* C);
/* ET_LACE_SYSTEM.set_integer_8_class */
extern void T247f168(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge376os9385;
extern T0* ge376ov9385;
extern T0* T267f16(T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge376os9383;
extern T0* ge376ov9383;
extern T0* T267f15(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge376os9382;
extern T0* ge376ov9382;
extern T0* T267f14(T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern unsigned char ge376os9380;
extern T0* ge376ov9380;
extern T0* T267f13(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge376os9419;
extern T0* ge376ov9419;
extern T0* T267f12(T0* C);
/* ET_LACE_SYSTEM.set_character_32_class */
extern void T247f167(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge376os9379;
extern T0* ge376ov9379;
extern T0* T267f11(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge376os9418;
extern T0* ge376ov9418;
extern T0* T267f10(T0* C);
/* ET_LACE_SYSTEM.set_character_8_class */
extern void T247f166(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge376os9378;
extern T0* ge376ov9378;
extern T0* T267f9(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge376os9416;
extern T0* ge376ov9416;
extern T0* T267f8(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge376os9376;
extern T0* ge376ov9376;
extern T0* T267f7(T0* C);
/* ET_CLASS.set_basic */
extern void T90f114(T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge376os9375;
extern T0* ge376ov9375;
extern T0* T267f6(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge376os9373;
extern T0* ge376ov9373;
extern T0* T267f5(T0* C);
/* ET_LACE_SYSTEM.set_any_class */
extern void T247f165(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class */
extern T0* T268f1(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge376os9374;
extern T0* ge376ov9374;
extern T0* T267f3(T0* C);
/* ET_LACE_SYSTEM.set_preparse_shallow_mode */
extern void T247f160(T0* C);
/* ET_LACE_SYSTEM.set_default_keyword_usage */
extern void T247f159(T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T247f158(T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T280c3(void);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T391c8(T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T391f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T535c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T534f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_area */
extern T0* T641c2(T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T533c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T534c2(void);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T279c5(void);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T387c8(T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T387f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T527c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T526f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ADAPTED_LIBRARY].make_area */
extern T0* T635c2(T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make */
extern T0* T525c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T526c2(void);
/* ET_LACE_SYSTEM.initialize */
extern void T247f158p1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T250f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T335f6(T0* C, T0* a1);
/* ET_LACE_SYSTEM.class_name_tester */
extern unsigned char ge413os9035;
extern T0* ge413ov9035;
extern T0* T247f139(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T281c2(void);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T250c41(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T250f45(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T335c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T335f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T413c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T250f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T250f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T250f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T250f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T338f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T414c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T337c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T338c3(void);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T250f63(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern unsigned char ge376os10016;
extern T0* ge376ov10016;
extern T0* T267f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T268c338(void);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern unsigned char ge376os10015;
extern T0* ge376ov10015;
extern T0* T267f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T76c23(void);
/* KL_STANDARD_FILES.error */
extern unsigned char ge961os3751;
extern T0* ge961ov3751;
extern T0* T29f2(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T60c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T60f14(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T60f19(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T60f6(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T60f18(T0* C, T0* a1);
/* ET_LACE_SYSTEM.tokens */
extern T0* T247f144(T0* C);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].item */
extern T0* T109f4(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_item */
extern T0* T53f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].item */
extern T0* T53f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].after */
extern T1 T109f6(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_after */
extern T1 T53f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].start */
extern void T109f8(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_start */
extern void T53f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].is_empty */
extern T1 T53f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].off */
extern T1 T109f5(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_off */
extern T1 T53f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].cursor_before */
extern T1 T53f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].new_cursor */
extern T0* T53f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [TS_CLUSTER].make */
extern T0* T109c7(T0* a1);
/* TS_TESTCASES.set_version */
extern void T40f15(T0* C, T0* a1);
/* TS_TESTCASES.make */
extern T0* T40c14(T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make */
extern T0* T88c40(T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_with_equality_testers */
extern void T88f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make */
extern T0* T160c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].new_cursor */
extern T0* T160f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make */
extern T0* T222c3(T0* a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_sparse_container */
extern void T88f42(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_slots */
extern void T88f46(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_clashes */
extern void T88f45(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_key_storage */
extern void T88f44(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_PAIR [DS_LIST [STRING_8], STRING_8], ET_CLASS].make_item_storage */
extern void T88f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]].make */
extern T0* T162f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]].make_area */
extern T0* T223c2(T6 a1);
/* SPECIAL [DS_PAIR [DS_LIST [STRING_8], STRING_8]].make */
extern T0* T163c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_PAIR [DS_LIST [STRING_8], STRING_8]].default_create */
extern T0* T162c3(void);
/* KL_EQUALITY_TESTER [ET_CLASS].default_create */
extern T0* T158c3(void);
/* TS_CONFIG.set_default_test_included */
extern void T22f10(T0* C, T1 a1);
/* TS_CLUSTER.set_default_test_included */
extern void T54f10(T0* C, T1 a1);
/* TS_CONFIG.set_feature_regexp */
extern void T22f9(T0* C, T0* a1);
/* TS_CLUSTER.set_feature_regexp */
extern void T54f9(T0* C, T0* a1);
/* TS_CONFIG.set_class_regexp */
extern void T22f8(T0* C, T0* a1);
/* TS_CLUSTER.set_class_regexp */
extern void T54f8(T0* C, T0* a1);
/* TS_CONFIG.set_compile */
extern void T22f7(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.close */
extern void T24f43(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T24f46(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T24f48(T0* C, T14 a1);
/* TS_CONFIG_PARSER.parse */
extern void T23f203(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yyparse */
extern void T23f208(T0* C);
/* TS_CONFIG_PARSER.yy_pop_last_value */
extern void T23f222(T0* C, T6 a1);
/* TS_CONFIG_PARSER.yy_push_error_value */
extern void T23f221(T0* C);
/* TS_CONFIG_PARSER.yy_do_action */
extern void T23f220(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TS_CLUSTER].resize */
extern T0* T59f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [TS_CLUSTER].aliased_resized_area */
extern T0* T58f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TS_CLUSTER].make */
extern T0* T59f1(T0* C, T6 a1);
/* TO_SPECIAL [TS_CLUSTER].make_area */
extern T0* T111c2(T6 a1);
/* SPECIAL [TS_CLUSTER].make */
extern T0* T58c4(T6 a1);
/* KL_SPECIAL_ROUTINES [TS_CLUSTER].default_create */
extern T0* T59c3(void);
/* TS_CONFIG_PARSER.new_cluster */
extern T0* T23f144(T0* C, T0* a1, T0* a2);
/* TS_CLUSTER.make */
extern T0* T54c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [TS_CLUSTER].force_last */
extern void T53f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].resize */
extern void T53f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].new_capacity */
extern T6 T53f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [TS_CLUSTER].extendible */
extern T1 T53f7(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]].resize */
extern T0* T57f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]].aliased_resized_area */
extern T0* T55f3(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]].make */
extern T0* T57f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]].make_area */
extern T0* T110c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]].make */
extern T0* T55c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [TS_CLUSTER]].default_create */
extern T0* T57c3(void);
/* DS_ARRAYED_LIST [TS_CLUSTER].put_last */
extern void T53f17(T0* C, T0* a1);
/* TS_CONFIG_PARSER.default_cluster */
extern T0* T23f140(T0* C);
/* TS_CONFIG_PARSER.default_cluster_pathname */
extern unsigned char ge63os2244;
extern T0* ge63ov2244;
extern T0* T23f192(T0* C);
/* TS_CONFIG_PARSER.default_cluster_name */
extern unsigned char ge63os2243;
extern T0* ge63ov2243;
extern T0* T23f191(T0* C);
/* DS_ARRAYED_LIST [TS_CLUSTER].make */
extern T0* T53c16(T6 a1);
/* TS_CONFIG_PARSER.default_feature_regexp */
extern unsigned char ge63os2241;
extern T0* ge63ov2241;
extern T0* T23f139(T0* C);
/* LX_DFA_REGULAR_EXPRESSION.compile_case_insensitive */
extern T0* T35c16(T0* a1);
/* LX_DFA_REGULAR_EXPRESSION.compile */
extern void T35f17(T0* C, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T83c37(T0* a1);
/* LX_FULL_DFA.build */
extern void T83f40(T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T83f46(T0* C);
/* ARRAY [INTEGER_32].put */
extern void T80f6(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T118f11(T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T83f45(T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T152f6(T0* C, T6 a1);
/* ARRAY [LX_DFA_STATE].item */
extern T0* T214f4(T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T147f10(T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T118f10(T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T83f44(T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T152f8(T0* C, T0* a1, T6 a2);
/* ARRAY [LX_DFA_STATE].put */
extern void T214f7(T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T150f4(T0* C, T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T197f4(T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T83f36(T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T147f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T149f9(T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T147f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T148f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T148f21(T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T147f14(T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T147f9(T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T147c16(T0* a1, T6 a2, T6 a3);
/* LX_RULE.set_useful */
extern void T128f22(T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T118f16(T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T204f3(T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T204f4(T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T204f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T118f21(T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T229f1(T0* C, T0* a1, T0* a2);
/* LX_RULE.infix "<" */
extern T1 T128f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T118f6(T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern unsigned char ge722os6289;
extern T0* ge722ov6289;
extern T0* T147f7(T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T204c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T229c2(void);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T148f29(T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T202f3(T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T202f4(T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T202f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T148f26(T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T232f1(T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.infix "<" */
extern T1 T157f9(T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern unsigned char ge722os6288;
extern T0* ge722ov6288;
extern T0* T147f8(T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T202c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T232c2(void);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T148f9(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T148f8(T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T118f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T118f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].resize */
extern T0* T180f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T145f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T118f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T118f8(T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T157f6(T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T157f10(T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T157f7(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T148f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T148f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T148f31(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].resize */
extern T0* T208f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T206f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T148f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T148f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T118c12(T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T118f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T181c4(T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T180f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_RULE].make_area */
extern T0* T238c2(T6 a1);
/* SPECIAL [LX_RULE].make */
extern T0* T145c4(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T180c3(void);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T152c7(T6 a1, T6 a2);
/* KL_ARRAY_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T215c1(void);
/* ARRAY [LX_DFA_STATE].make */
extern T0* T214c5(T6 a1, T6 a2);
/* ARRAY [LX_DFA_STATE].make_area */
extern void T214f6(T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make */
extern T0* T211c4(T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T147f13(T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].upper */
extern T6 T152f5(T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T147f12(T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].lower */
extern T6 T152f4(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T148f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T148f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T148c23(T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T148f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T209c7(T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T208f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_NFA_STATE].make_area */
extern T0* T241c2(T6 a1);
/* SPECIAL [LX_NFA_STATE].make */
extern T0* T206c4(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T208c3(void);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T150f8(T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T147f18(T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T150f10(T0* C);
/* ARRAY [BOOLEAN].clear_all */
extern void T154f7(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T153f5(T0* C);
/* SPECIAL [BOOLEAN].put_default */
extern void T153f6(T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T150f10p1(T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T195f9(T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T195f10(T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T195f5(T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T150f7(T0* C);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T150f6(T0* C);
/* LX_FULL_DFA.resize */
extern void T83f49(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T149f10(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].resize */
extern T0* T212f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T211f3(T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T150f5(T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T197f5(T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T149f6(T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T150c9(T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T150f9p1(T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T197f7(T0* C, T0* a1, T6 a2);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T195c4(T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make */
extern T0* T197c6(T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_area */
extern void T197f8(T0* C, T6 a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make */
extern T0* T196c2(T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T83f39(T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T118f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T118f17(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T118f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T181f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T118f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T118f18(T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T128c14(T6 a1);
/* LX_RULE.dummy_action */
extern unsigned char ge807os8297;
extern T0* ge807ov8297;
extern T0* T128f11(T0* C);
/* LX_ACTION.make */
extern T0* T199c2(T0* a1);
/* LX_RULE.dummy_pattern */
extern unsigned char ge807os8296;
extern T0* ge807ov8296;
extern T0* T128f13(T0* C);
/* LX_NFA.make_epsilon */
extern T0* T126c8(T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T148f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T148f30(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T148f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T209f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T148f33(T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T157f13(T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T190c5(T0* a1);
/* LX_NFA_STATE.make */
extern T0* T157c12(T1 a1);
/* LX_FULL_DFA.initialize */
extern void T83f38(T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T83f43(T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T83f48(T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T126f4(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T148f14(T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T155f7(T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T119f7(T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T83f47(T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T157f15(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T156f37(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T156f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T156f44(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T156f43(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T156f29(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T156f28(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T156f21(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T156f42(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T156f50(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T156f31(T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T156f49(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T156f48(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].resize */
extern T0* T130f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T129f3(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T156f34(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T156f47(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T156f24(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T156f33(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T156f41(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T156f38(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T217f1(T0* C, T6 a1, T6 a2);
/* KL_EQUALITY_TESTER [INTEGER_32].any_ */
extern T0* T217f2(T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T156f40(T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T156f22(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T156f32(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T156f23(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T156c36(T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T156f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [LX_NFA, INTEGER_32].make */
extern T0* T219c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [LX_NFA, INTEGER_32].new_cursor */
extern T0* T219f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T243c3(T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T156f30(T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T221c3(T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T156f46(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T156f54(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T156f53(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T156f52(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T156f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T130f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_NFA].make_area */
extern T0* T200c2(T6 a1);
/* SPECIAL [LX_NFA].make */
extern T0* T129c4(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T130c3(void);
/* KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T217c3(void);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T149c8(T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T149f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T213c3(T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T212f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_DFA_STATE].make_area */
extern T0* T242c2(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T212c3(void);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T127f6(T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T127f5(T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T127f4(T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T127f3(T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T83f42(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].put */
extern void T146f5(T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make */
extern T0* T146c4(T6 a1, T6 a2);
/* ARRAY [LX_RULE].make_area */
extern void T146f6(T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T71f6(T0* C);
/* LX_FULL_DFA.build_rules */
extern void T83f41(T0* C, T0* a1);
/* LX_START_CONDITIONS.names */
extern T0* T119f8(T0* C);
/* LX_REGEXP_PARSER.parse_string */
extern void T81f238(T0* C, T0* a1);
/* LX_REGEXP_PARSER.parse */
extern void T81f242(T0* C);
/* LX_REGEXP_PARSER.yy_pop_last_value */
extern void T81f255(T0* C, T6 a1);
/* LX_REGEXP_PARSER.yy_push_error_value */
extern void T81f254(T0* C);
/* LX_REGEXP_PARSER.yy_do_action */
extern void T81f253(T0* C, T6 a1);
/* LX_REGEXP_PARSER.process_singleton_string */
extern void T81f283(T0* C, T6 a1);
/* LX_REGEXP_PARSER.append_character_to_string */
extern T0* T81f182(T0* C, T6 a1, T0* a2);
/* LX_REGEXP_PARSER.new_symbol_nfa */
extern T0* T81f231(T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T126c18(T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T194c6(T6 a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force_new */
extern void T122f47(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_put */
extern void T122f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_put */
extern void T122f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_put */
extern void T122f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_put */
extern void T122f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_item */
extern T6 T122f22(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].hash_position */
extern T6 T122f31(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_item */
extern T6 T122f21(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].resize */
extern void T122f52(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_resize */
extern void T122f60(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].special_integer_ */
extern T0* T122f33(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_resize */
extern void T122f59(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_resize */
extern void T122f58(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_item */
extern T0* T122f25(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_resize */
extern void T122f57(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_modulus */
extern T6 T122f27(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_capacity */
extern T6 T122f30(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].unset_found_item */
extern void T122f50(T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T127f11(T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T195f7(T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T195f8(T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T195f6(T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T195f11(T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T123f14(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.put */
extern void T123f19(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T123f21(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T123f22(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T123f13(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T123f11(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T123f16(T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T123f12(T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T123f10(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T123f15(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T123c18(T6 a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T123f9(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found_item */
extern T0* T122f24(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_item */
extern T0* T122f32(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found */
extern T1 T122f23(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search */
extern void T122f46(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search_position */
extern void T122f48(T0* C, T0* a1);
/* LX_REGEXP_PARSER.process_singleton_empty_string */
extern void T81f282(T0* C);
/* LX_REGEXP_PARSER.append_character_set_to_character_class */
extern T0* T81f181(T0* C, T6 a1, T6 a2, T0* a3);
/* LX_REGEXP_PARSER.report_negative_range_in_character_class_error */
extern void T81f306(T0* C);
/* UT_ERROR_HANDLER.report_error */
extern void T41f7(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T41f8(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T97f4(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T97f6(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T97f5(T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T41f5(T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T177c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.filename */
extern T0* T81f205(T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].resize */
extern T0* T125f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T124f2(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T125f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_SYMBOL_CLASS].make_area */
extern T0* T189c2(T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make */
extern T0* T124c4(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T125c3(void);
/* LX_REGEXP_PARSER.append_character_to_character_class */
extern T0* T81f180(T0* C, T6 a1, T0* a2);
/* LX_REGEXP_PARSER.new_character_class */
extern T0* T81f179(T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T123f20(T0* C, T1 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force */
extern void T122f45(T0* C, T0* a1, T0* a2);
/* LX_REGEXP_PARSER.new_nfa_from_character_class */
extern T0* T81f178(T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T123f24(T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T123f26(T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort */
extern void T256f3(T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort_with_comparator */
extern void T256f4(T0* C, T0* a1, T0* a2);
/* DS_SHELL_SORTER [INTEGER_32].subsort_with_comparator */
extern void T256f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T123f25(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T263f1(T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern unsigned char ge719os8136;
extern T0* ge719ov8136;
extern T0* T123f17(T0* C);
/* DS_SHELL_SORTER [INTEGER_32].make */
extern T0* T256c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T263c2(void);
/* LX_REGEXP_PARSER.process_singleton_symbol_class */
extern void T81f281(T0* C, T0* a1);
/* LX_REGEXP_PARSER.process_singleton_dot */
extern void T81f280(T0* C);
/* LX_REGEXP_PARSER.new_symbol_class_nfa */
extern T0* T81f177(T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T126c17(T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T193c6(T0* a1, T0* a2);
/* LX_REGEXP_PARSER.dot_character_class */
extern T0* T81f176(T0* C);
/* LX_REGEXP_PARSER.process_singleton_fixed_iteration */
extern void T81f279(T0* C, T6 a1);
/* LX_REGEXP_PARSER.new_iteration_nfa */
extern T0* T81f175(T0* C, T0* a1, T6 a2);
/* LX_NFA.build_iteration */
extern void T126f16(T0* C, T6 a1);
/* LX_NFA.cloned_object */
extern T0* T126f6(T0* C);
/* LX_NFA.twin */
extern T0* T126f7(T0* C);
/* LX_NFA.copy */
extern void T126f19(T0* C, T0* a1);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T157f14(T0* C, T0* a1);
/* LX_NFA_STATE.cloned_object */
extern T0* T157f8(T0* C);
/* LX_NFA_STATE.twin */
extern T0* T157f11(T0* C);
/* LX_NFA_STATE.copy */
extern void T157f18(T0* C, T0* a1);
/* LX_REGEXP_PARSER.report_iteration_not_positive_error */
extern void T81f305(T0* C);
/* LX_ITERATION_NOT_POSITIVE_ERROR.make */
extern T0* T176c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.process_singleton_unbounded_iteration */
extern void T81f278(T0* C, T6 a1);
/* LX_REGEXP_PARSER.new_unbounded_iteration_nfa */
extern T0* T81f174(T0* C, T0* a1, T6 a2);
/* LX_NFA.build_unbounded_iteration */
extern void T126f15(T0* C, T6 a1);
/* LX_REGEXP_PARSER.process_singleton_bounded_iteration */
extern void T81f277(T0* C, T6 a1, T6 a2);
/* LX_REGEXP_PARSER.new_bounded_iteration_nfa */
extern T0* T81f173(T0* C, T0* a1, T6 a2, T6 a3);
/* LX_NFA.build_bounded_iteration */
extern void T126f14(T0* C, T6 a1, T6 a2);
/* LX_REGEXP_PARSER.report_bad_iteration_values_error */
extern void T81f304(T0* C);
/* LX_BAD_ITERATION_VALUES_ERROR.make */
extern T0* T175c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.process_singleton_optional */
extern void T81f276(T0* C);
/* LX_NFA.build_optional */
extern void T126f13(T0* C);
/* LX_NFA.final_state */
extern T0* T126f5(T0* C);
/* LX_REGEXP_PARSER.process_singleton_plus */
extern void T81f275(T0* C);
/* LX_NFA.build_positive_closure */
extern void T126f12(T0* C);
/* LX_REGEXP_PARSER.process_singleton_star */
extern void T81f274(T0* C);
/* LX_NFA.build_closure */
extern void T126f11(T0* C);
/* LX_REGEXP_PARSER.process_singleton_char */
extern void T81f273(T0* C, T6 a1);
/* LX_REGEXP_PARSER.new_nfa_from_character */
extern T0* T81f172(T0* C, T6 a1);
/* LX_REGEXP_PARSER.process_singleton_series */
extern void T81f272(T0* C);
/* LX_NFA.build_concatenation */
extern void T126f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T148f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T148f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T209f10(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T148f36(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T148f37(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T209f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T148f38(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T209f4(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T148f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T209f5(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_after */
extern T1 T148f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T209f9(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T148f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T209f6(T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_off */
extern T1 T148f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_before */
extern T1 T148f20(T0* C, T0* a1);
/* LX_REGEXP_PARSER.process_regexp_or_series */
extern void T81f271(T0* C);
/* LX_NFA.build_union */
extern void T126f9(T0* C, T0* a1);
/* LX_REGEXP_PARSER.new_epsilon_nfa */
extern T0* T81f163(T0* C);
/* LX_REGEXP_PARSER.report_trailing_context_used_twice_error */
extern void T81f270(T0* C);
/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR.make */
extern T0* T133c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.append_eol_to_regexp */
extern T0* T81f162(T0* C, T0* a1);
/* LX_REGEXP_PARSER.append_trail_context_to_regexp */
extern T0* T81f156(T0* C, T0* a1, T0* a2);
/* LX_NFA.set_accepted_rule */
extern void T126f21(T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T157f16(T0* C, T0* a1);
/* LX_NFA.set_beginning_as_normal */
extern void T126f22(T0* C);
/* LX_NFA_STATE.set_beginning_as_normal */
extern void T157f17(T0* C);
/* LX_REGEXP_PARSER.report_unrecognized_rule_error */
extern void T81f269(T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T132c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.process_rule */
extern void T81f268(T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T119f12(T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T151f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T155f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T155f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T155f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T155f8(T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T119f15(T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T119f6(T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T82f34(T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T128f21(T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T128f20(T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T128f19(T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T128f18(T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T128f17(T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T128f16(T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T128f15(T0* C, T0* a1);
/* LX_REGEXP_PARSER.process_bol_rule */
extern void T81f267(T0* C, T0* a1);
/* LX_START_CONDITIONS.add_bol_nfa_to_all */
extern void T119f11(T0* C, T0* a1);
/* LX_START_CONDITION.put_bol_nfa */
extern void T151f7(T0* C, T0* a1);
/* LX_START_CONDITIONS.add_bol_nfa_to_non_exclusive */
extern void T119f14(T0* C, T0* a1);
/* LX_DESCRIPTION.set_bol_needed */
extern void T82f35(T0* C, T1 a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T82f33(T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T127c9(T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T127f12(T0* C);
/* LX_REGEXP_PARSER.check_options */
extern void T81f266(T0* C);
/* LX_REGEXP_PARSER.report_full_and_variable_trailing_context_error */
extern void T81f299(T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T142c7(void);
/* LX_REGEXP_PARSER.report_full_and_reject_error */
extern void T81f298(T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T141c7(void);
/* LX_REGEXP_PARSER.report_full_and_meta_equiv_classes_error */
extern void T81f297(T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T140c7(void);
/* LX_REGEXP_PARSER.build_equiv_classes */
extern void T81f265(T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].forth */
extern void T131f8(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_forth */
extern void T122f66(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].add_traversing_cursor */
extern void T122f68(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_next_cursor */
extern void T131f10(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].remove_traversing_cursor */
extern void T122f67(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_position */
extern void T131f9(T0* C, T6 a1);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T123f23(T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T127f8(T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T127f7(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T131f4(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_item */
extern T0* T122f37(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].after */
extern T1 T131f5(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_after */
extern T1 T122f36(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].start */
extern void T131f7(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_start */
extern void T122f65(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_off */
extern T1 T122f42(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].is_empty */
extern T1 T122f41(T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T122f35(T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T131c6(T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T127f10(T0* C);
/* LX_REGEXP_PARSER.yy_push_last_value */
extern void T81f252(T0* C, T6 a1);
/* LX_REGEXP_PARSER.accept */
extern void T81f251(T0* C);
/* LX_REGEXP_PARSER.yy_do_error_action */
extern void T81f249(T0* C, T6 a1);
/* LX_REGEXP_PARSER.report_error */
extern void T81f264(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T79c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.report_eof_expected_error */
extern void T81f263(T0* C);
/* LX_REGEXP_PARSER.read_token */
extern void T81f248(T0* C);
/* LX_REGEXP_PARSER.yy_execute_action */
extern void T81f262(T0* C, T6 a1);
/* LX_REGEXP_PARSER.report_bad_character_error */
extern void T81f296(T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T139c7(T0* a1, T6 a2, T0* a3);
/* LX_REGEXP_PARSER.report_bad_character_class_error */
extern void T81f295(T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T138c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.start_condition */
extern T6 T81f201(T0* C);
/* LX_REGEXP_PARSER.process_escaped_character */
extern void T81f294(T0* C);
/* LX_REGEXP_PARSER.text_count */
extern T6 T81f223(T0* C);
/* LX_REGEXP_PARSER.report_missing_quote_error */
extern void T81f293(T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T137c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.report_missing_bracket_error */
extern void T81f292(T0* C);
/* LX_MISSING_BRACKET_ERROR.make */
extern T0* T136c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.report_bad_character_in_brackets_error */
extern void T81f291(T0* C);
/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR.make */
extern T0* T135c7(T0* a1, T6 a2);
/* LX_REGEXP_PARSER.report_integer_too_large_error */
extern void T81f290(T0* C, T0* a1);
/* LX_INTEGER_TOO_LARGE_ERROR.make */
extern T0* T134c7(T0* a1, T6 a2, T0* a3);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T170f13(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T170f17(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T170f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T170f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T236f7(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge1366os8469;
extern T0* ge1366ov8469;
extern T0* T170f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T236c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f6(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f10(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* SPECIAL [NATURAL_64].make */
extern T0* T258c2(T6 a1);
/* STRING_8.has */
extern T1 T17f31(T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f22(T6* C);
/* CHARACTER_8.is_digit */
extern T1 T2f18(T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T170f22(T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge1329os1267;
extern T0* ge1329ov1267;
extern T0* T17f23(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T170f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T170f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T170f19(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T170f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T170c16(void);
/* STRING_8.is_integer */
extern T1 T17f19(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f24(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T170f12(T0* C);
/* LX_REGEXP_PARSER.process_character */
extern void T81f289(T0* C, T6 a1);
/* LX_REGEXP_PARSER.report_character_out_of_range_error */
extern void T81f302(T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T143c7(T0* a1, T6 a2, T0* a3);
/* LX_REGEXP_PARSER.text_item */
extern T2 T81f196(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T122f34(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].has */
extern T1 T122f26(T0* C, T0* a1);
/* LX_REGEXP_PARSER.text */
extern T0* T81f192(T0* C);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T173f6(T0* C, T6 a1, T6 a2);
/* LX_REGEXP_PARSER.less */
extern void T81f288(T0* C, T6 a1);
/* LX_REGEXP_PARSER.yy_set_line_column */
extern void T81f301(T0* C);
/* LX_REGEXP_PARSER.set_start_condition */
extern void T81f287(T0* C, T6 a1);
/* LX_REGEXP_PARSER.yy_execute_eof_action */
extern void T81f261(T0* C, T6 a1);
/* LX_REGEXP_PARSER.terminate */
extern void T81f286(T0* C);
/* LX_REGEXP_PARSER.wrap */
extern T1 T81f129(T0* C);
/* LX_REGEXP_PARSER.yy_refill_input_buffer */
extern void T81f260(T0* C);
/* LX_REGEXP_PARSER.yy_set_content */
extern void T81f258(T0* C, T0* a1);
/* LX_REGEXP_PARSER.yy_null_trans_state */
extern T6 T81f128(T0* C, T6 a1);
/* LX_REGEXP_PARSER.yy_previous_state */
extern T6 T81f127(T0* C);
/* LX_REGEXP_PARSER.fatal_error */
extern void T81f259(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T60f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T60f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T60f21(T0* C, T14 a1, T2 a2);
/* LX_REGEXP_PARSER.std */
extern T0* T81f183(T0* C);
/* LX_REGEXP_PARSER.special_integer_ */
extern T0* T81f152(T0* C);
/* LX_REGEXP_PARSER.yy_init_value_stacks */
extern void T81f247(T0* C);
/* LX_REGEXP_PARSER.yy_clear_all */
extern void T81f256(T0* C);
/* LX_REGEXP_PARSER.clear_all */
extern void T81f284(T0* C);
/* LX_REGEXP_PARSER.clear_stacks */
extern void T81f300(T0* C);
/* LX_REGEXP_PARSER.yy_clear_value_stacks */
extern void T81f303(T0* C);
/* SPECIAL [LX_NFA].clear_all */
extern void T129f6(T0* C);
/* SPECIAL [LX_NFA].put_default */
extern void T129f7(T0* C, T6 a1);
/* SPECIAL [STRING_8].clear_all */
extern void T70f8(T0* C);
/* SPECIAL [LX_SYMBOL_CLASS].clear_all */
extern void T124f6(T0* C);
/* SPECIAL [LX_SYMBOL_CLASS].put_default */
extern void T124f7(T0* C, T6 a1);
/* SPECIAL [INTEGER_32].clear_all */
extern void T45f7(T0* C);
/* SPECIAL [INTEGER_32].put_default */
extern void T45f8(T0* C, T6 a1);
/* LX_REGEXP_PARSER.abort */
extern void T81f250(T0* C);
/* LX_REGEXP_PARSER.set_input_buffer */
extern void T81f241(T0* C, T0* a1);
/* LX_REGEXP_PARSER.yy_load_input_buffer */
extern void T81f246(T0* C);
/* YY_BUFFER.set_position */
extern void T44f14(T0* C, T6 a1, T6 a2, T6 a3);
/* LX_REGEXP_PARSER.new_string_buffer */
extern T0* T81f123(T0* C, T0* a1);
/* LX_REGEXP_PARSER.make_from_description */
extern T0* T81c237(T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T120c1(void);
/* LX_START_CONDITIONS.make */
extern void T119f10(T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T119c10(T6 a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T119f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T184c4(T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T183f1(T0* C, T6 a1);
/* TO_SPECIAL [LX_START_CONDITION].make_area */
extern T0* T239c2(T6 a1);
/* SPECIAL [LX_START_CONDITION].make */
extern T0* T182c2(T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T183c2(void);
/* LX_REGEXP_PARSER.make_parser_skeleton */
extern void T81f240(T0* C);
/* LX_REGEXP_PARSER.yy_build_parser_tables */
extern void T81f245(T0* C);
/* LX_REGEXP_PARSER.yycheck_template */
extern unsigned char ge784os5789;
extern T0* ge784ov5789;
extern T0* T81f138(T0* C);
/* LX_REGEXP_PARSER.yyfixed_array */
extern T0* T81f229(T0* C, T0* a1);
/* LX_REGEXP_PARSER.yytable_template */
extern unsigned char ge784os5788;
extern T0* ge784ov5788;
extern T0* T81f137(T0* C);
/* LX_REGEXP_PARSER.yypgoto_template */
extern unsigned char ge784os5787;
extern T0* ge784ov5787;
extern T0* T81f135(T0* C);
/* LX_REGEXP_PARSER.yypact_template */
extern unsigned char ge784os5786;
extern T0* ge784ov5786;
extern T0* T81f134(T0* C);
/* LX_REGEXP_PARSER.yydefgoto_template */
extern unsigned char ge784os5785;
extern T0* ge784ov5785;
extern T0* T81f133(T0* C);
/* LX_REGEXP_PARSER.yydefact_template */
extern unsigned char ge784os5784;
extern T0* ge784ov5784;
extern T0* T81f130(T0* C);
/* LX_REGEXP_PARSER.yytypes2_template */
extern unsigned char ge784os5783;
extern T0* ge784ov5783;
extern T0* T81f124(T0* C);
/* LX_REGEXP_PARSER.yytypes1_template */
extern unsigned char ge784os5782;
extern T0* ge784ov5782;
extern T0* T81f122(T0* C);
/* LX_REGEXP_PARSER.yyr1_template */
extern unsigned char ge784os5781;
extern T0* ge784ov5781;
extern T0* T81f117(T0* C);
/* LX_REGEXP_PARSER.yytranslate_template */
extern unsigned char ge784os5780;
extern T0* ge784ov5780;
extern T0* T81f116(T0* C);
/* LX_REGEXP_PARSER.yy_create_value_stacks */
extern void T81f244(T0* C);
/* LX_REGEXP_PARSER.make_lex_scanner_from_description */
extern void T81f239(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_key_equality_tester */
extern void T122f44(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8].internal_set_equality_tester */
extern void T186f6(T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_map */
extern T0* T122c43(T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_with_equality_testers */
extern void T122f49(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T186c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T186f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T240c3(T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_sparse_container */
extern void T122f56(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_slots */
extern void T122f64(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_clashes */
extern void T122f63(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_key_storage */
extern void T122f62(T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_item_storage */
extern void T122f61(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T72f41(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].internal_set_equality_tester */
extern void T115f6(T0* C, T0* a1);
/* LX_REGEXP_PARSER.string_equality_tester */
extern T0* T81f120(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T72c40(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T72f43(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].make */
extern T0* T115c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].new_cursor */
extern T0* T115f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8].make */
extern T0* T178c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T72f27(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T102c7(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T72f51(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T72f44(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T72f59(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T72f28(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T72f22(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T72f58(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T72f57(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T72f56(T0* C, T6 a1);
/* LX_REGEXP_PARSER.make_with_buffer */
extern void T81f243(T0* C, T0* a1);
/* LX_REGEXP_PARSER.yy_initialize */
extern void T81f257(T0* C);
/* LX_REGEXP_PARSER.yy_build_tables */
extern void T81f285(T0* C);
/* LX_REGEXP_PARSER.yy_accept_template */
extern unsigned char ge777os5956;
extern T0* ge777ov5956;
extern T0* T81f216(T0* C);
/* LX_REGEXP_PARSER.yy_fixed_array */
extern T0* T81f236(T0* C, T0* a1);
/* LX_REGEXP_PARSER.yy_meta_template */
extern unsigned char ge777os5955;
extern T0* ge777ov5955;
extern T0* T81f215(T0* C);
/* LX_REGEXP_PARSER.yy_ec_template */
extern unsigned char ge777os5954;
extern T0* ge777ov5954;
extern T0* T81f214(T0* C);
/* LX_REGEXP_PARSER.yy_def_template */
extern unsigned char ge777os5953;
extern T0* ge777ov5953;
extern T0* T81f213(T0* C);
/* LX_REGEXP_PARSER.yy_base_template */
extern unsigned char ge777os5952;
extern T0* ge777ov5952;
extern T0* T81f212(T0* C);
/* LX_REGEXP_PARSER.yy_chk_template */
extern unsigned char ge777os5951;
extern T0* ge777ov5951;
extern T0* T81f211(T0* C);
/* LX_REGEXP_PARSER.yy_nxt_template */
extern unsigned char ge777os5950;
extern T0* ge777ov5950;
extern T0* T81f210(T0* C);
/* LX_REGEXP_PARSER.empty_buffer */
extern T0* T81f144(T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T82f32(T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T82f31(T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T82f30(T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T82f29(T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T82c28(void);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T119c13(T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T119f16(T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T119f17(T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T119f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T184f5(T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T119f19(T0* C, T6 a1, T6 a2);
/* LX_START_CONDITIONS.put_last */
extern void T119f18(T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T151c6(T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T155c10(T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T155f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T216c3(T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T41c6(void);
/* UT_ERROR_HANDLER.null_output_stream */
extern unsigned char ge992os3748;
extern T0* ge992ov3748;
extern T0* T41f4(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T97c3(T0* a1);
/* LX_DFA_REGULAR_EXPRESSION.wipe_out */
extern void T35f18(T0* C);
/* TS_CONFIG_PARSER.default_class_regexp */
extern unsigned char ge63os2240;
extern T0* ge63ov2240;
extern T0* T23f138(T0* C);
/* TS_CONFIG_PARSER.new_regexp */
extern T0* T23f137(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_regexp_syntax_error */
extern void T28f32(T0* C, T0* a1, T0* a2);
/* TS_REGEXP_SYNTAX_ERROR.make */
extern T0* T104c7(T0* a1, T0* a2, T6 a3);
/* LX_DFA_REGULAR_EXPRESSION.is_compiled */
extern T1 T35f14(T0* C);
/* TS_CONFIG_PARSER.set_defaults */
extern void T23f232(T0* C, T0* a1);
/* TS_CONFIG_PARSER.default_execute */
extern T0* T23f178(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T102f9(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T72f61(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T72f63(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T102f11(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T72f62(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T102f10(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T72f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T102f6(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T72f34(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T72f37(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T102f5(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T72f33(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T72f31(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T102f4(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T72f32(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T102f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T72f60(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T72f39(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T72f38(T0* C);
/* TS_VARIABLES.new_cursor */
extern T0* T27f3(T0* C);
/* TS_CONFIG_PARSER.file_system */
extern T0* T23f193(T0* C);
/* TS_CONFIG_PARSER.unix_file_system */
extern T0* T23f198(T0* C);
/* TS_CONFIG_PARSER.windows_file_system */
extern T0* T23f197(T0* C);
/* TS_CONFIG_PARSER.operating_system */
extern T0* T23f196(T0* C);
/* TS_CONFIG_PARSER.default_compile */
extern T0* T23f177(T0* C, T0* a1);
/* TS_CONFIG_PARSER.new_config */
extern T0* T23f136(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* TS_CONFIG.make */
extern T0* T22c6(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* TS_CONFIG_PARSER.yy_push_last_value */
extern void T23f219(T0* C, T6 a1);
/* TS_CONFIG_PARSER.accept */
extern void T23f218(T0* C);
/* TS_CONFIG_PARSER.yy_do_error_action */
extern void T23f216(T0* C, T6 a1);
/* TS_CONFIG_PARSER.report_error */
extern void T23f231(T0* C, T0* a1);
/* TS_ERROR_HANDLER.report_config_syntax_error */
extern void T28f29(T0* C, T0* a1, T0* a2);
/* TS_CONFIG_PARSER.current_position */
extern T0* T23f175(T0* C);
/* TS_CONFIG_PARSER.report_eof_expected_error */
extern void T23f230(T0* C);
/* TS_CONFIG_PARSER.read_token */
extern void T23f215(T0* C);
/* TS_CONFIG_PARSER.yy_execute_action */
extern void T23f229(T0* C, T6 a1);
/* TS_CONFIG_PARSER.yy_set_line_column */
extern void T23f239(T0* C);
/* TS_CONFIG_PARSER.text_item */
extern T2 T23f174(T0* C, T6 a1);
/* TS_CONFIG_PARSER.integer_ */
extern T0* T23f172(T0* C);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge1021os5287;
extern T6 ge1021ov5287;
extern T6 T62f1(T0* C);
/* TS_CONFIG_PARSER.platform */
extern unsigned char ge1013os1961;
extern T0* ge1013ov1961;
extern T0* T23f171(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T62c2(void);
/* TS_CONFIG_PARSER.set_start_condition */
extern void T23f236(T0* C, T6 a1);
/* TS_CONFIG_PARSER.text_substring */
extern T0* T23f168(T0* C, T6 a1, T6 a2);
/* TS_CONFIG_PARSER.text_count */
extern T6 T23f167(T0* C);
/* TS_CONFIG_PARSER.new_identifier */
extern T0* T23f165(T0* C, T0* a1);
/* TS_CONFIG_PARSER.text */
extern T0* T23f164(T0* C);
/* TS_CONFIG_PARSER.yy_set_column */
extern void T23f238(T0* C, T6 a1);
/* TS_CONFIG_PARSER.yy_set_line */
extern void T23f237(T0* C, T6 a1);
/* TS_CONFIG_PARSER.yy_execute_eof_action */
extern void T23f228(T0* C, T6 a1);
/* TS_CONFIG_PARSER.terminate */
extern void T23f235(T0* C);
/* TS_CONFIG_PARSER.wrap */
extern T1 T23f122(T0* C);
/* TS_CONFIG_PARSER.yy_refill_input_buffer */
extern void T23f227(T0* C);
/* TS_CONFIG_PARSER.yy_set_content */
extern void T23f225(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yy_null_trans_state */
extern T6 T23f121(T0* C, T6 a1);
/* TS_CONFIG_PARSER.yy_previous_state */
extern T6 T23f120(T0* C);
/* TS_CONFIG_PARSER.fatal_error */
extern void T23f226(T0* C, T0* a1);
/* TS_CONFIG_PARSER.std */
extern T0* T23f147(T0* C);
/* TS_CONFIG_PARSER.special_integer_ */
extern T0* T23f141(T0* C);
/* TS_CONFIG_PARSER.yy_init_value_stacks */
extern void T23f214(T0* C);
/* TS_CONFIG_PARSER.yy_clear_all */
extern void T23f223(T0* C);
/* TS_CONFIG_PARSER.clear_all */
extern void T23f233(T0* C);
/* TS_CONFIG_PARSER.clear_stacks */
extern void T23f240(T0* C);
/* TS_CONFIG_PARSER.yy_clear_value_stacks */
extern void T23f241(T0* C);
/* SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]].clear_all */
extern void T55f6(T0* C);
/* SPECIAL [DS_ARRAYED_LIST [TS_CLUSTER]].put_default */
extern void T55f7(T0* C, T6 a1);
/* SPECIAL [TS_CLUSTER].clear_all */
extern void T58f6(T0* C);
/* SPECIAL [TS_CLUSTER].put_default */
extern void T58f7(T0* C, T6 a1);
/* TS_CONFIG_PARSER.abort */
extern void T23f217(T0* C);
/* TS_CONFIG_PARSER.set_input_buffer */
extern void T23f207(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yy_load_input_buffer */
extern void T23f213(T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T43f18(T0* C, T6 a1, T6 a2, T6 a3);
/* TS_CONFIG_PARSER.new_file_buffer */
extern T0* T23f131(T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T43c16(T0* a1);
/* TS_CONFIG_PARSER.reset */
extern void T23f206(T0* C);
/* TS_CONFIG_PARSER.reset_compressed_scanner_skeleton */
extern void T23f212(T0* C);
/* TS_CONFIG_PARSER.set_compiler_ise */
extern void T23f202(T0* C, T1 a1);
/* TS_CONFIG_PARSER.set_compiler_ge */
extern void T23f201(T0* C, T1 a1);
/* TS_CONFIG_PARSER.set_fail_on_rescue */
extern void T23f200(T0* C, T1 a1);
/* TS_CONFIG_PARSER.make */
extern T0* T23c199(T0* a1, T0* a2);
/* TS_CONFIG_PARSER.make_parser_skeleton */
extern void T23f205(T0* C);
/* TS_CONFIG_PARSER.yy_build_parser_tables */
extern void T23f211(T0* C);
/* TS_CONFIG_PARSER.yycheck_template */
extern unsigned char ge57os1822;
extern T0* ge57ov1822;
extern T0* T23f125(T0* C);
/* TS_CONFIG_PARSER.yyfixed_array */
extern T0* T23f189(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yytable_template */
extern unsigned char ge57os1821;
extern T0* ge57ov1821;
extern T0* T23f114(T0* C);
/* TS_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge57os1820;
extern T0* ge57ov1820;
extern T0* T23f112(T0* C);
/* TS_CONFIG_PARSER.yypact_template */
extern unsigned char ge57os1819;
extern T0* ge57ov1819;
extern T0* T23f110(T0* C);
/* TS_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge57os1818;
extern T0* ge57ov1818;
extern T0* T23f109(T0* C);
/* TS_CONFIG_PARSER.yydefact_template */
extern unsigned char ge57os1817;
extern T0* ge57ov1817;
extern T0* T23f108(T0* C);
/* TS_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge57os1816;
extern T0* ge57ov1816;
extern T0* T23f107(T0* C);
/* TS_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge57os1815;
extern T0* ge57ov1815;
extern T0* T23f105(T0* C);
/* TS_CONFIG_PARSER.yyr1_template */
extern unsigned char ge57os1814;
extern T0* ge57ov1814;
extern T0* T23f103(T0* C);
/* TS_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge57os1813;
extern T0* ge57ov1813;
extern T0* T23f102(T0* C);
/* TS_CONFIG_PARSER.yy_create_value_stacks */
extern void T23f210(T0* C);
/* TS_CONFIG_PARSER.make_config_scanner */
extern void T23f204(T0* C, T0* a1, T0* a2);
/* TS_CONFIG_PARSER.make_with_buffer */
extern void T23f209(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yy_initialize */
extern void T23f224(T0* C);
/* TS_CONFIG_PARSER.yy_build_tables */
extern void T23f234(T0* C);
/* TS_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge53os2260;
extern T0* ge53ov2260;
extern T0* T23f185(T0* C);
/* TS_CONFIG_PARSER.yy_fixed_array */
extern T0* T23f195(T0* C, T0* a1);
/* TS_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge53os2259;
extern T0* ge53ov2259;
extern T0* T23f184(T0* C);
/* TS_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge53os2258;
extern T0* ge53ov2258;
extern T0* T23f183(T0* C);
/* TS_CONFIG_PARSER.yy_def_template */
extern unsigned char ge53os2257;
extern T0* ge53ov2257;
extern T0* T23f182(T0* C);
/* TS_CONFIG_PARSER.yy_base_template */
extern unsigned char ge53os2256;
extern T0* ge53ov2256;
extern T0* T23f181(T0* C);
/* TS_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge53os2255;
extern T0* ge53ov2255;
extern T0* T23f180(T0* C);
/* TS_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge53os2254;
extern T0* ge53ov2254;
extern T0* T23f179(T0* C);
/* TS_CONFIG_PARSER.empty_buffer */
extern T0* T23f104(T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T30f12(T0* C);
/* KL_STDOUT_FILE.put_line */
extern void T30f11(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge961os3750;
extern T0* ge961ov3750;
extern T0* T29f1(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T30c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T30f17(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T30f22(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T30f4(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T30f21(T0* C, T0* a1);
/* GETEST.std */
extern T0* T21f17(T0* C);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T24f11(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T24f27(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T24f42(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T24f47(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T24f24(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T24f47p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T24f25(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T24f19(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T66f7(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T66f5(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T24f40(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T24c40(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T24f45(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T24f15(T0* C);
/* GETEST.read_command_line */
extern void T21f27(T0* C);
/* GETEST.report_undefined_environment_variable_error */
extern void T21f33(T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.make */
extern T0* T39c7(T0* a1);
/* GETEST.execution_environment */
extern T0* T21f22(T0* C);
/* TS_ERROR_HANDLER.report_option_regexp_syntax_error */
extern void T28f26(T0* C, T0* a1, T0* a2);
/* TS_OPTION_REGEXP_SYNTAX_ERROR.make */
extern T0* T77c7(T0* a1, T0* a2);
/* GETEST.set_defined_variable */
extern void T21f32(T0* C, T0* a1);
/* TS_VARIABLES.set_value */
extern void T27f5(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T72f42(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T72f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T72f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T72f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T72f25(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T72f26(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T72f47(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T72f55(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T72f54(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T72f53(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T72f52(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T72f30(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T72f46(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T72f45(T0* C, T0* a1);
/* STRING_8.index_of */
extern T6 T17f6(T0* C, T2 a1, T6 a2);
/* GETEST.report_usage_error */
extern void T21f31(T0* C);
/* GETEST.usage_message */
extern unsigned char ge50os1782;
extern T0* ge50ov1782;
extern T0* T21f25(T0* C);
/* UT_USAGE_MESSAGE.make */
extern T0* T38c7(T0* a1);
/* GETEST.compiler_specified */
extern T1 T21f18(T0* C);
/* GETEST.report_usage_message */
extern void T21f30(T0* C);
/* GETEST.report_version_number */
extern void T21f29(T0* C);
/* UT_VERSION_NUMBER.make */
extern T0* T37c7(T0* a1);
/* KL_ARGUMENTS.argument */
extern T0* T26f2(T0* C, T6 a1);
/* TS_ERROR_HANDLER.make_standard */
extern T0* T28c24(void);
/* TS_VARIABLES.make */
extern T0* T27c4(void);
/* TS_VARIABLES.string_equality_tester */
extern T0* T27f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T26f5(T0* C, T0* a1);
/* GETEST.arguments */
extern unsigned char ge1026os1790;
extern T0* ge1026ov1790;
extern T0* T21f15(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T26c4(void);
/* MANAGED_POINTER.dispose */
extern void T168f8(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f7(T14* C);
/* POINTER.c_free */
extern void T14f11(T14* C, T14 a1);
/* KL_DIRECTORY.dispose */
extern void T93f29(T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T92f21(T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T24f41(T0* C);
/* ET_TAGGED_ASSERTION.reset */
extern void T1025f6(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T980f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T979f7(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T696f33(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T681f21(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T675f18(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1023f8(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T707f61(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1220f3(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1015f6(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T948f7(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T962f10(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T962f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T962f10p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T918f9(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T962f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T960f9(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T959f7(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T959f7p1(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T959f4(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T921f9(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T920f5(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T920f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T921f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T917f9(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T915f10(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T913f6(T0* C);
/* ET_COMPOUND.reset */
extern void T834f10(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T912f14(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T912f9(T0* C);
/* ET_VARIANT.reset */
extern void T878f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T875f9(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T909f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T930f6(T0* C);
/* ET_WHEN_PART.reset */
extern void T934f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T936f9(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T909f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T907f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T924f6(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T926f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T926f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T907f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T906f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T905f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T899f8(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T693f13(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1013f24(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T836f11(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T832f11(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T429f14(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1198f10(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T430f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1013f15(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T1003f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1012f26(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T453f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1199f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T865f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1012f26p1(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1012f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1011f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1011f26p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1011f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1010f26(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1010f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1009f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1009f28p1(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1009f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1008f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1008f28p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1008f18(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T998f9(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T991f14(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T989f13(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T988f11(T0* C);
/* ET_CALL_AGENT.reset */
extern void T986f14(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T986f8(T0* C);
/* ET_OBJECT_TEST.reset */
extern void T985f13(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T984f9(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T983f8(T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T982f8(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T981f8(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T978f9(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T976f9(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T975f9(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T974f9(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T973f9(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T967f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T966f12(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T950f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T950f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T950f14p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T950f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T901f8(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T993f9(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T395f61(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T897f10(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T897f10p1(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T897f6(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T749f13(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T746f11(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T746f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T723f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T722f16(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T721f16(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T720f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T718f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T717f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T716f29(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T715f30(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T714f30(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T713f21(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T712f25(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T711f20(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T710f17(T0* C);
/* ET_VOID.reset */
extern void T699f16(T0* C);
/* ET_RESULT.reset */
extern void T690f16(T0* C);
/* ET_CURRENT.reset */
extern void T672f22(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T661f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T716f28(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T715f29(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T714f29(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T716f27(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T715f28(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T714f28(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T716f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T715f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T714f27(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T855f4(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T856f14(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T498f51(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T847f41(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T847f58(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T847f57(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T846f40(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T846f58(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T846f57(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T845f40(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T845f58(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T845f57(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T844f43(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T844f61(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T844f60(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T840f40(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T840f57(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T840f56(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T839f42(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T839f61(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T839f60(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T838f42(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T838f61(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T838f60(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T831f38(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T831f51(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T831f50(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T830f38(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T830f50(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T830f49(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T827f36(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T827f47(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T827f46(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T548f38(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T548f54(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T548f53(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T844f45(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T844f45p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T840f42(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T840f42p1(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T839f44(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T839f44p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T838f44(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T838f44p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T831f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T831f40p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T830f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T830f40p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T827f38(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T827f38p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T844f46(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T844f64(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T844f63(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T844f62(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T429f15(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T840f43(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T840f60(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T840f59(T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T840f58(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T839f45(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T839f45p1(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T839f64(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T839f63(T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T839f62(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T838f45(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T838f45p1(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T838f64(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T838f63(T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T838f62(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T831f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T831f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T831f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T831f29(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T831f28(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T831f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T830f41(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T830f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T830f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T830f29(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T830f28(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T830f51(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T827f39(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T827f50(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T827f49(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T827f27(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T827f26(T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T827f48(T0* C);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T844f44(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T840f41(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T839f43(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T838f43(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T831f39(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T830f39(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T827f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T844f42(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T840f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T839f41(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T838f41(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T831f37(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T830f37(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T827f35(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1068f26(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T894f30(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T894f11(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T892f33(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.target_type */
extern T0* T892f12(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T892f13(T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T887f29(T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T885f33(T0* C);
/* ET_BIT_FEATURE.reset_qualified_anchored_types */
extern void T772f37(T0* C);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T772f13(T0* C);
/* ET_BIT_N.reset_qualified_anchored_types */
extern void T771f37(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T771f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T759f32(T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T427f28(T0* C);
/* ET_GENERIC_CLASS_TYPE.reset_qualified_anchored_types */
extern void T312f31(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T400f22(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T286f18(T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T287f30(T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T284f31(T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T90f153(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1068f25(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T894f29(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T892f32(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T887f28(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T885f32(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T885f11(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T50f29(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T772f36(T0* C);
/* ET_BIT_N.reset */
extern void T771f36(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T759f30(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T760f9(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T427f26(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T284f30(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1068f24(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T894f28(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T892f31(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T887f27(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T885f31(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T772f35(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T771f35(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T759f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T427f27(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T312f29(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T287f28(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T284f29(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T90f112(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1068f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1068f17(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T894f31(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T892f34(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T887f30(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T885f34(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T772f39(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T771f38(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T759f33(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T759f19(T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T427f29(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T427f17(T0* C);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T312f32(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T400f23(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T400f15(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T286f19(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T286f11(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T286f12(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T400f13(T0* C);
/* ET_CLASS_TYPE.append_to_string */
extern void T287f31(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T284f32(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T90f154(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T312f30(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T287f29(T0* C);
/* ET_CLASS.reset_type */
extern void T90f152(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T412f4(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T411f6(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T410f4(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T409f4(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T334f6(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T334f8(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T334f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T431f11(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].go_after */
extern void T431f10(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_go_after */
extern void T348f69(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T431f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T431f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T431f9(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T334f9(T0* C);
/* ET_PARENT_LIST.parent */
extern T0* T307f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T307f8(T0* C, T6 a1);
/* ET_CLASS.is_dotnet */
extern T1 T90f59(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.current_system */
extern T0* T334f4(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T334f7(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T76f24(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T76f25(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T76f26(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T76f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T76f27p1(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T1063c12(void);
/* TS_ERROR_HANDLER.report_giaaa_error */
extern void T28f33(T0* C);
/* TS_ERROR_HANDLER.report_internal_error */
extern void T28f34(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T334f3(T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T90f125(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T333f8(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T333f10(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T333f13(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T412f3(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T333f12(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T427f6(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T333f11(T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T411f5(T0* C, T0* a1);
/* ET_QUERY_LIST.item */
extern T0* T418f4(T0* C, T6 a1);
/* ET_INTERFACE_STATUS_CHECKER.current_system */
extern T0* T333f6(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T333f9(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T333f5(T0* C);
/* ET_CLASS.unset_interface_error */
extern void T90f124(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T332f7(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T332f9(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T332f12(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T410f3(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T332f11(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T332f10(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.current_system */
extern T0* T332f5(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T332f8(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T332f4(T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T90f123(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T331f7(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T331f9(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T331f11(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T409f3(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T331f10(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.current_system */
extern T0* T331f5(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T331f8(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T331f4(T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T90f122(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T412f16(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T411f7(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T410f5(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T409f16(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T412f10(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T411f8(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T410f6(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T409f10(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T412f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T412f19(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T412f8(T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T411f9(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T411f12(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T410f7(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T410f10(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T410f12(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T409f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T409f19(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T409f8(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T412f5(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T412f7(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T411f10(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T410f8(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T410f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T409f5(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T409f7(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_generic_class_type */
extern void T412f6(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_generic_class_type */
extern void T411f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_generic_class_type */
extern void T410f9(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_generic_class_type */
extern void T409f6(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T412f9(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T411f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T410f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T409f9(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T412f12(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T411f14(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T410f14(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T409f12(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_bit_n */
extern void T412f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_bit_type_validity */
extern void T412f20(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_bit_n */
extern void T411f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_bit_n */
extern void T410f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_bit_type_validity */
extern void T410f20(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_bit_n */
extern void T409f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_bit_type_validity */
extern void T409f20(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_bit_feature */
extern void T412f14(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_bit_feature */
extern void T411f16(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_bit_feature */
extern void T410f16(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_bit_feature */
extern void T409f14(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T412f15(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T411f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T410f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T409f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T412f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T412f21(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T411f18(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T411f20(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T411f21(T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T410f18(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T410f21(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T409f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T409f21(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T412f18(T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T411f19(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T410f19(T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T409f18(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.reset */
extern void T853f23(T0* C);
/* ET_INFIX_NAME.reset */
extern void T852f72(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T851f23(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T850f44(T0* C);
/* ET_IDENTIFIER.reset */
extern void T50f68(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T50f28(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T847f43(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T847f31(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T846f42(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T846f35(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T845f42(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T845f35(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T548f40(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T548f33(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T847f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T847f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T847f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T847f59(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T846f43(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T846f43p1(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T846f61(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T846f60(T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T846f59(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T845f43(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T845f43p1(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T845f61(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T845f60(T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T845f59(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T548f41(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T548f57(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T548f56(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T548f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T847f42(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T846f41(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T845f41(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T548f39(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T847f40(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T846f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T845f39(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T548f37(T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].set_target */
extern void T194f7(T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].set_target */
extern void T193f7(T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].set_target */
extern void T190f6(T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T194f8(T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T150f12(T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T150f12p1(T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T193f8(T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T150f11(T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T150f11p1(T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T190f7(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T759f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T427f18(T0* C);
/* ET_CLASS.root_context */
extern T0* T90f72(T0* C);
/* ET_CLASS.context_base_type_actual */
extern T0* T90f71(T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T90f70(T0* C);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T427f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T427f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T759f22(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T427f20(T0* C, T6 a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1200f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1068f22(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T894f26(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T892f28(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T887f24(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T885f28(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T883f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T772f32(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T771f31(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T759f24(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T427f22(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T312f26(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T287f26(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T284f26(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T90f97(T0* C, T0* a1);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T852f8(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T850f15(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T50f51(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T852f9(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T850f16(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T50f52(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T852f10(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T850f17(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T50f53(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T852f32(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T850f20(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T50f33(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T852f33(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T850f21(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T50f34(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T852f34(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T850f22(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T50f35(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T852f35(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T850f23(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T50f36(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T852f36(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T850f24(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T50f37(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T852f37(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T850f25(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T50f38(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T852f38(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T850f26(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T50f39(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T852f39(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T850f27(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T50f40(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T852f40(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T850f28(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T50f41(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T852f41(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T850f29(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T50f42(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T852f42(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T850f30(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T50f43(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T852f43(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T850f31(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T50f44(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T852f44(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T850f32(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T50f45(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T852f45(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T850f33(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T50f46(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T852f46(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T850f34(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T50f47(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T852f47(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T850f35(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T50f48(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T852f48(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T850f36(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T50f49(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1023f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1013f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1012f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1011f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1010f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1009f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1008f17(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T998f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T991f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T989f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T988f7(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T986f10(T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T985f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T984f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T983f6(T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T982f6(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T981f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T978f7(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T976f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T975f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T974f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T973f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T967f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T966f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T950f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T901f6(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T897f7(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T749f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T746f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T723f12(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T722f12(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T721f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T720f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T718f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T717f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T716f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T715f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T714f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T713f13(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T712f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T711f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T710f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T707f16(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T699f11(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T690f11(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T672f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T661f9(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T50f56(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T950f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T948f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T723f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T722f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T716f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T715f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T714f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T710f12(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T50f55(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1013f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1012f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1011f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1010f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1009f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1008f16(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T998f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T991f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T989f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T988f6(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T986f7(T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T985f9(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T984f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T983f4(T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T982f5(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T981f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T978f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T976f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T975f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T974f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T973f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T967f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T966f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T950f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T901f5(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T897f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T749f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T746f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T723f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T722f10(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T721f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T720f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T718f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T717f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T716f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T715f16(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T714f16(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T713f12(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T712f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T711f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T710f11(T0* C);
/* ET_VOID.expression_item */
extern T0* T699f10(T0* C);
/* ET_RESULT.expression_item */
extern T0* T690f10(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T672f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T661f8(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T50f54(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T713f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T712f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T711f7(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1066f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T778f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T777f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T767f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1066f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T767f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1066f7(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T894f12(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T892f14(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T887f17(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T885f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T778f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T274f913(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T777f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T274f912(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T772f14(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T771f17(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T767f6(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.type_mark */
extern T0* T894f9(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T894f10(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T713f14(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T712f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T711f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T716f14(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T696f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T715f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T714f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T716f8(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T696f9(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T715f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T714f8(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T853f9(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T852f6(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T851f9(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T850f6(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T50f26(T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T853f10(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T852f7(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T851f10(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T850f7(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T50f18(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T856f9(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T856f10(T0* C);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T853f11(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T852f11(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T851f11(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T851f13(T0* C);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T850f8(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T498f6(T0* C, T0* a1);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T50f50(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T50f32(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1066f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T274f910(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T765f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T274f911(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T765f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T765f9(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T894f3(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T892f6(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T887f9(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T885f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T772f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T771f7(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T767f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T274f909(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1025f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1013f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1012f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1011f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1010f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1009f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1008f15(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T998f5(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T991f8(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T989f7(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T988f5(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T986f6(T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T985f8(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T984f4(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T983f5(T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T982f4(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T981f4(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T978f6(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T976f4(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T975f4(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T974f4(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T973f4(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T967f5(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T966f6(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T950f5(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T901f4(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T897f4(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T749f7(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T746f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T723f7(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T722f7(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T721f9(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T720f9(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T718f8(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T717f8(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T716f12(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T715f12(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T714f12(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T713f9(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T712f13(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T711f8(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T710f8(T0* C);
/* ET_VOID.assertion */
extern T0* T699f9(T0* C);
/* ET_RESULT.assertion */
extern T0* T690f9(T0* C);
/* ET_CURRENT.assertion */
extern T0* T672f9(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T661f7(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T50f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T847f37(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T846f36(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T845f36(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T844f39(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T840f36(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T839f38(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T838f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T831f34(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T830f34(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T827f32(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T548f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T831f32(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T830f32(T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T827f25(T0* C);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T844f38(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T844f59(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T844f58(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T844f57(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T844f56(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T840f32(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T840f55(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T840f54(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T840f53(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T840f52(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T840f51(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T839f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T839f59(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T839f58(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T839f57(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T839f56(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T838f37(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T838f59(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T838f58(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T838f57(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T838f56(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T831f26(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T831f49(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T831f48(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T831f47(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T831f46(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T831f45(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T831f44(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T830f26(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T830f48(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T830f47(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T830f46(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T830f45(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T830f44(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T827f28(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T827f45(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T827f44(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T827f43(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T827f42(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T844f37(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T840f31(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T839f36(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T838f36(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T831f27(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T830f27(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T827f29(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T844f34(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T840f34(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T839f33(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T838f33(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T831f31(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T830f31(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T827f24(T0* C);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T844f40(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T840f37(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T839f39(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T838f39(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T831f35(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T830f35(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T827f33(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T844f35(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T840f35(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T839f34(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T838f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T831f30(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T830f30(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T827f30(T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T547f8(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T283f3(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T245f31(T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T547f3(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T283f5(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T245f33(T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T547f4(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T245f34(T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T547f5(T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T283f7(T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T245f35(T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T547f6(T0* C);
/* ET_TOKEN_CONSTANTS.empty_system */
extern unsigned char ge376os10013;
extern T0* ge376ov10013;
extern T0* T267f157(T0* C);
/* ET_SYSTEM.make */
extern T0* T269c143(void);
/* ET_SYSTEM.set_default_class_mapping */
extern void T269f148(T0* C);
/* ET_SYSTEM.set_basic_classes */
extern void T269f147(T0* C);
/* ET_SYSTEM.set_system_object_class */
extern void T269f168(T0* C, T0* a1);
/* ET_SYSTEM.set_string_32_class */
extern void T269f167(T0* C, T0* a1);
/* ET_SYSTEM.set_string_8_class */
extern void T269f166(T0* C, T0* a1);
/* ET_SYSTEM.set_real_64_class */
extern void T269f165(T0* C, T0* a1);
/* ET_SYSTEM.set_real_32_class */
extern void T269f164(T0* C, T0* a1);
/* ET_SYSTEM.set_none_class */
extern void T269f163(T0* C, T0* a1);
/* ET_SYSTEM.set_natural_64_class */
extern void T269f162(T0* C, T0* a1);
/* ET_SYSTEM.set_natural_32_class */
extern void T269f161(T0* C, T0* a1);
/* ET_SYSTEM.set_natural_16_class */
extern void T269f160(T0* C, T0* a1);
/* ET_SYSTEM.set_natural_8_class */
extern void T269f159(T0* C, T0* a1);
/* ET_SYSTEM.set_integer_64_class */
extern void T269f158(T0* C, T0* a1);
/* ET_SYSTEM.set_integer_32_class */
extern void T269f157(T0* C, T0* a1);
/* ET_SYSTEM.set_integer_16_class */
extern void T269f156(T0* C, T0* a1);
/* ET_SYSTEM.set_integer_8_class */
extern void T269f155(T0* C, T0* a1);
/* ET_SYSTEM.set_character_32_class */
extern void T269f154(T0* C, T0* a1);
/* ET_SYSTEM.set_character_8_class */
extern void T269f153(T0* C, T0* a1);
/* ET_SYSTEM.set_any_class */
extern void T269f152(T0* C, T0* a1);
/* ET_SYSTEM.set_preparse_shallow_mode */
extern void T269f146(T0* C);
/* ET_SYSTEM.set_default_keyword_usage */
extern void T269f145(T0* C);
/* ET_SYSTEM.set_use_reference_keyword */
extern void T269f150(T0* C, T1 a1);
/* ET_SYSTEM.set_use_attribute_keyword */
extern void T269f149(T0* C, T1 a1);
/* ET_SYSTEM.initialize */
extern void T269f144(T0* C);
/* ET_CLUSTERS.make_empty */
extern T0* T644c3(void);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T648c6(T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T648f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1082c3(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1080f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLUSTER].make_area */
extern T0* T1228c2(T6 a1);
/* SPECIAL [ET_CLUSTER].make */
extern T0* T1081c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1080c2(void);
/* ET_SYSTEM.initialize */
extern void T269f144p1(T0* C);
/* ET_SYSTEM.class_name_tester */
extern T0* T269f142(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T269f138(T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T547f7(T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T547f2(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T283f4(T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T547f11(T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T547f13(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T283f10(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T283f12(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T245f20(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T245f18(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T245f26(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T245f25(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T245f30(T0* C);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T547f10(T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T547f12(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T283f9(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T283f11(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T245f36(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T245f37(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T1068f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current */
extern T1 T894f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current */
extern T1 T892f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T887f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T885f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T772f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T771f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T759f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T427f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T312f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T287f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T284f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T90f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T1068f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type */
extern T1 T894f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type */
extern T1 T892f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T887f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T885f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T772f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T771f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T759f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T427f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T312f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T287f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T284f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T286f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T284f8(T0* C);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T90f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T1068f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type */
extern T1 T894f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type */
extern T1 T892f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T887f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T885f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T772f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T771f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T759f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T427f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T312f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T400f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T287f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T284f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T90f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T1068f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T894f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T892f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T887f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T885f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T772f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T771f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T759f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T427f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T312f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T287f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T284f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T90f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T1068f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_bit_type */
extern T1 T894f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_bit_type */
extern T1 T892f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T887f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T885f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T772f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T772f21(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T772f38(T0* C);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T771f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T759f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T427f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T312f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T287f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T284f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T90f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T1068f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature */
extern T1 T894f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature */
extern T1 T892f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T887f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T885f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.seeded_query */
extern T0* T90f91(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T418f7(T0* C, T6 a1);
/* ET_CLASS.seeded_procedure */
extern T0* T90f90(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T253f7(T0* C, T6 a1);
/* ET_LIKE_FEATURE.index */
extern T6 T885f21(T0* C);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T772f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T771f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T759f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T427f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T312f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T287f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T284f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T90f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1068f10(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T894f5(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T892f8(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T887f12(T0* C);
/* ET_CURRENT.position */
extern T0* T672f12(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T885f7(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T772f12(T0* C);
/* ET_BIT_N.position */
extern T0* T771f14(T0* C);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T312f14(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T287f12(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T284f11(T0* C);
/* ET_CLASS.position */
extern T0* T90f84(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T1068f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T894f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T892f21(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T894f19(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T892f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier */
extern T1 T887f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier */
extern T1 T885f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_qualified_like_identifier */
extern T1 T772f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_qualified_like_identifier */
extern T1 T771f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier */
extern T1 T759f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier */
extern T1 T427f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T312f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T287f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier */
extern T1 T284f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_qualified_like_identifier */
extern T1 T90f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1068f14(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T894f21(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T892f22(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T887f16(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T885f22(T0* C);
/* ET_BIT_FEATURE.to_text */
extern T0* T772f24(T0* C);
/* ET_BIT_N.to_text */
extern T0* T771f16(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T312f18(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T287f13(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T284f18(T0* C);
/* ET_CLASS.to_text */
extern T0* T90f88(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1068f4(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T894f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T892f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T887f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T885f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T772f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_type */
extern T1 T771f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T759f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T427f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T312f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T287f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T284f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T90f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1068f18(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T367f7(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T367f18(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T367f19(T0* C);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T367f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T367f6(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T894f22(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.new_type_context */
extern T0* T367f8(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T367f20(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T367f11(T0* C);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T367f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T367f12(T0* C, T6 a1);
/* ET_CLASS.new_type_context */
extern T0* T90f92(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T892f24(T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T887f20(T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T885f24(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T367f5(T0* C);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T772f26(T0* C, T0* a1);
/* ET_BIT_N.base_type_actual_count */
extern T6 T771f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T312f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T287f20(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T284f20(T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T90f76(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1068f19(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1068f16(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T894f23(T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T894f20(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T892f25(T0* C, T6 a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T887f21(T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T885f25(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T772f27(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.base_type_actual */
extern T0* T771f26(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T312f21(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T287f21(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T284f21(T0* C, T6 a1, T0* a2);
/* ET_CLASS.base_type_actual */
extern T0* T90f77(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1068f15(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T894f18(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T892f20(T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T887f18(T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T885f20(T0* C, T0* a1);
/* ET_BIT_FEATURE.base_class_in_context */
extern T0* T772f20(T0* C, T0* a1);
/* ET_BIT_N.base_class_in_context */
extern T0* T771f23(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_class_in_context */
extern T0* T312f19(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T287f19(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T284f17(T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T90f89(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1068f20(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T894f24(T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T892f26(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T887f22(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T367f13(T0* C);
/* ET_CLASS.context_named_type */
extern T0* T90f95(T0* C);
/* ET_LIKE_FEATURE.named_type */
extern T0* T885f26(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_type */
extern T0* T772f29(T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type */
extern T0* T772f31(T0* C, T0* a1);
/* ET_BIT_N.named_type */
extern T0* T771f28(T0* C, T0* a1);
/* ET_BIT_N.base_type */
extern T0* T771f30(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T759f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T427f10(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T312f23(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T312f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T312f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T400f16(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T286f13(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T286f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T287f23(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T287f25(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T284f23(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T284f24(T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T90f93(T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T90f96(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1200f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1068f7(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T894f4(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T892f7(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T887f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T885f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T883f3(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T772f23(T0* C);
/* ET_BIT_N.type */
extern T0* T771f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T759f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T427f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T312f27(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T287f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T284f6(T0* C);
/* ET_CLASS.type */
extern T0* T90f67(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1200f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1068f21(T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T894f25(T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T892f27(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T887f23(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T885f27(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T883f4(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T772f30(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T771f29(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T759f23(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T427f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T312f24(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T287f24(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T284f25(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T90f94(T0* C);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T772f28(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T771f27(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T312f22(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T287f22(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T284f22(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T90f80(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T312f12(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T287f8(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T90f78(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T90f81(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T312f13(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T287f9(T0* C);
/* ET_CLASS.is_separate */
extern T1 T90f79(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T90f82(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T312f11(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T287f7(T0* C);
/* ET_CLASS.is_generic */
extern T1 T90f74(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T287f4(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_keyword */
extern T1 T707f8(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T707f14(T0* C);
/* ET_KEYWORD.is_keyword */
extern T1 T401f7(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T401f14(T0* C);
/* ET_BRACKET_SYMBOL.is_keyword */
extern T1 T395f9(T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T395f15(T0* C);
/* ET_SYMBOL.is_keyword */
extern T1 T394f4(T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T394f7(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T707f9(T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T401f20(T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T395f10(T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T394f15(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T707f10(T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T401f21(T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T395f11(T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T394f16(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T707f12(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T401f13(T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T395f12(T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T394f6(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T707f13(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T401f15(T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T395f13(T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T394f8(T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T707f11(T0* C);
/* ET_KEYWORD.position */
extern T0* T401f6(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T395f8(T0* C);
/* ET_SYMBOL.position */
extern T0* T394f5(T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T707f20(T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T395f19(T0* C);
/* ET_SYMBOL.text */
extern T0* T394f19(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T853f12(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T853f14(T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T852f13(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T852f31(T0* C);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T851f12(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T851f14(T0* C);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T850f10(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T850f14(T0* C);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T50f16(T0* C, T0* a1);
/* ET_INFIX_NAME.hash_code */
extern T6 T852f12(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T850f9(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T853f17(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T852f51(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T851f17(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T850f37(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T50f9(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T853f18(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T853f19(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T852f52(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T852f53(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T851f18(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T851f19(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T850f38(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T850f39(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T50f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T847f35(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T846f32(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T845f32(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T548f29(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T847f32(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T846f34(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T845f34(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T548f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T847f36(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T847f56(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T847f55(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T847f54(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T847f53(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T846f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T846f56(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T846f55(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T846f54(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T846f53(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T845f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T845f56(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T845f55(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T845f54(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T845f53(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T548f30(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T548f52(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T548f51(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T548f50(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T548f49(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T548f48(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T847f38(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T846f37(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T845f37(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T548f35(T0* C, T6 a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].cloned_object */
extern T0* T194f3(T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].twin */
extern T0* T194f5(T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].copy */
extern void T194f9(T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].cloned_object */
extern T0* T193f3(T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].twin */
extern T0* T193f5(T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].copy */
extern void T193f9(T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].cloned_object */
extern T0* T190f2(T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].twin */
extern T0* T190f4(T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].copy */
extern void T190f8(T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T194f4(T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T193f4(T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T190f3(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T716f19(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T716f30(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T63f4(T0* C, T6 a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T716f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T715f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T715f31(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T715f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T714f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T714f31(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T714f23(T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T707f17(T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T707f62(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T707f57(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T696f10(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T696f34(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T696f15(T0* C);
/* ET_CURRENT.to_text */
extern T0* T672f13(T0* C);
/* ET_CURRENT.append_to_string */
extern void T672f23(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T672f17(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T401f22(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T401f78(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T401f23(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T395f17(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T395f62(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T395f57(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T394f17(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T394f79(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T394f56(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T101f10(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T101f15(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T101f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T101f17(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T101f19(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T101f18(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T101f11(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T50f57(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T50f69(T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T50f58(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1241f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T716f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T715f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T714f21(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T713f15(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T712f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T711f14(T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T707f18(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T696f12(T0* C);
/* ET_CURRENT.line */
extern T6 T672f15(T0* C);
/* ET_KEYWORD.line */
extern T6 T401f11(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T395f16(T0* C);
/* ET_SYMBOL.line */
extern T6 T394f10(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T50f10(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1241f2(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T716f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T715f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T714f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T713f16(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T712f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T711f15(T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T707f19(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T696f13(T0* C);
/* ET_CURRENT.column */
extern T6 T672f16(T0* C);
/* ET_KEYWORD.column */
extern T6 T401f12(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T395f18(T0* C);
/* ET_SYMBOL.column */
extern T6 T394f18(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T50f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T716f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T715f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T714f17(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T713f17(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T712f21(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T711f16(T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null */
extern T1 T707f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T696f11(T0* C);
/* ET_CURRENT.is_null */
extern T1 T672f14(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T401f10(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T395f14(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T394f9(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T50f14(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1195f55(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1195f16(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1195f13(T0* C);
/* ARRAY [STRING_8].valid_index */
extern T1 T71f4(T0* C, T6 a1);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1195f54(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1194f11(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1194f13(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1194f12(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1194f15(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1193f12(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1193f7(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1193f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1193f9(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T1063f5(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T1063f7(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T1063f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T1063f9(T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T177f5(T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T177f3(T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T177f6(T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T177f4(T0* C);
/* LX_ITERATION_NOT_POSITIVE_ERROR.default_message */
extern T0* T176f5(T0* C);
/* LX_ITERATION_NOT_POSITIVE_ERROR.message */
extern T0* T176f3(T0* C, T0* a1);
/* LX_ITERATION_NOT_POSITIVE_ERROR.arguments */
extern T0* T176f6(T0* C);
/* LX_ITERATION_NOT_POSITIVE_ERROR.string_ */
extern T0* T176f4(T0* C);
/* LX_BAD_ITERATION_VALUES_ERROR.default_message */
extern T0* T175f5(T0* C);
/* LX_BAD_ITERATION_VALUES_ERROR.message */
extern T0* T175f3(T0* C, T0* a1);
/* LX_BAD_ITERATION_VALUES_ERROR.arguments */
extern T0* T175f6(T0* C);
/* LX_BAD_ITERATION_VALUES_ERROR.string_ */
extern T0* T175f4(T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T143f2(T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T143f4(T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T143f6(T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T143f5(T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T142f2(T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T142f4(T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T142f6(T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T142f5(T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T141f2(T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T141f4(T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T141f6(T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T141f5(T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T140f2(T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T140f4(T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T140f6(T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T140f5(T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T139f2(T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T139f4(T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T139f6(T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T139f5(T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T138f2(T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T138f4(T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T138f6(T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T138f5(T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T137f2(T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T137f4(T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T137f6(T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T137f5(T0* C);
/* LX_MISSING_BRACKET_ERROR.default_message */
extern T0* T136f2(T0* C);
/* LX_MISSING_BRACKET_ERROR.message */
extern T0* T136f4(T0* C, T0* a1);
/* LX_MISSING_BRACKET_ERROR.arguments */
extern T0* T136f6(T0* C);
/* LX_MISSING_BRACKET_ERROR.string_ */
extern T0* T136f5(T0* C);
/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR.default_message */
extern T0* T135f2(T0* C);
/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR.message */
extern T0* T135f4(T0* C, T0* a1);
/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR.arguments */
extern T0* T135f6(T0* C);
/* LX_BAD_CHARACTER_IN_BRACKETS_ERROR.string_ */
extern T0* T135f5(T0* C);
/* LX_INTEGER_TOO_LARGE_ERROR.default_message */
extern T0* T134f2(T0* C);
/* LX_INTEGER_TOO_LARGE_ERROR.message */
extern T0* T134f4(T0* C, T0* a1);
/* LX_INTEGER_TOO_LARGE_ERROR.arguments */
extern T0* T134f6(T0* C);
/* LX_INTEGER_TOO_LARGE_ERROR.string_ */
extern T0* T134f5(T0* C);
/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR.default_message */
extern T0* T133f2(T0* C);
/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR.message */
extern T0* T133f4(T0* C, T0* a1);
/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR.arguments */
extern T0* T133f6(T0* C);
/* LX_TRAILING_CONTEXT_USED_TWICE_ERROR.string_ */
extern T0* T133f5(T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T132f2(T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T132f4(T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T132f6(T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T132f5(T0* C);
/* TS_REGEXP_SYNTAX_ERROR.default_message */
extern T0* T104f5(T0* C);
/* TS_REGEXP_SYNTAX_ERROR.message */
extern T0* T104f3(T0* C, T0* a1);
/* TS_REGEXP_SYNTAX_ERROR.arguments */
extern T0* T104f6(T0* C);
/* TS_REGEXP_SYNTAX_ERROR.string_ */
extern T0* T104f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T91f5(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T91f3(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T91f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T91f4(T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T79f5(T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T79f3(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T79f6(T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T79f4(T0* C);
/* TS_EIFFEL_COMPILATION_ERROR.default_message */
extern T0* T78f5(T0* C);
/* TS_EIFFEL_COMPILATION_ERROR.message */
extern T0* T78f3(T0* C, T0* a1);
/* TS_EIFFEL_COMPILATION_ERROR.arguments */
extern T0* T78f6(T0* C);
/* TS_EIFFEL_COMPILATION_ERROR.string_ */
extern T0* T78f4(T0* C);
/* TS_OPTION_REGEXP_SYNTAX_ERROR.default_message */
extern T0* T77f5(T0* C);
/* TS_OPTION_REGEXP_SYNTAX_ERROR.message */
extern T0* T77f3(T0* C, T0* a1);
/* TS_OPTION_REGEXP_SYNTAX_ERROR.arguments */
extern T0* T77f6(T0* C);
/* TS_OPTION_REGEXP_SYNTAX_ERROR.string_ */
extern T0* T77f4(T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.default_message */
extern T0* T39f2(T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.message */
extern T0* T39f4(T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.arguments */
extern T0* T39f6(T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.string_ */
extern T0* T39f5(T0* C);
/* UT_USAGE_MESSAGE.default_message */
extern T0* T38f2(T0* C);
/* UT_USAGE_MESSAGE.message */
extern T0* T38f4(T0* C, T0* a1);
/* UT_USAGE_MESSAGE.arguments */
extern T0* T38f6(T0* C);
/* UT_USAGE_MESSAGE.string_ */
extern T0* T38f5(T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T37f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T37f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T37f6(T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T37f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T25f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T25f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T25f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T25f5(T0* C);
/* ET_CLASS.is_equal */
extern T1 T90f45(T0* C, T0* a1);
/* STRING_8.is_equal */
extern T1 T17f4(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f9(T0* C, T0* a1, T0* a2, T6 a3);
/* INTEGER_32.is_equal */
extern T1 T6f27(T6* C, T6 a1);
extern T0* GE_ma80(T6 c, T6 n, ...);
extern T0* GE_ma1078(T6 c, T6 n, ...);
extern T0* ge1002ov3760;
extern T0* ge934ov5506;
extern T0* ge1030ov1787;
extern T0* ge1091ov3760;
extern T0* ge988ov2522;
extern T0* ge986ov7472;
extern T0* ge967ov7472;
extern T0* ge986ov7473;
extern T0* ge969ov7593;
extern T0* ge969ov7592;
extern T0* ge967ov7473;
extern T0* ge376ov9860;
extern T0* ge376ov9850;
extern T0* ge1125ov20790;
extern T0* ge971ov2502;
extern T0* ge574ov23066;
extern T0* ge574ov23062;
extern T0* ge574ov23058;
extern T0* ge1010ov7434;
extern T0* ge323ov8676;
extern T0* ge323ov8677;
extern T0* ge574ov23067;
extern T0* ge574ov23063;
extern T0* ge574ov23059;
extern T0* ge376ov9841;
extern T0* ge376ov9837;
extern T0* ge376ov9897;
extern T0* ge376ov9883;
extern T0* ge376ov9882;
extern T0* ge376ov9858;
extern T0* ge376ov9884;
extern T0* ge376ov9898;
extern T0* ge376ov9844;
extern T0* ge376ov9834;
extern T0* ge376ov9886;
extern T0* ge376ov9855;
extern T0* ge376ov9857;
extern T0* ge376ov9905;
extern T0* ge376ov9852;
extern T0* ge376ov9849;
extern T0* ge376ov9879;
extern T0* ge376ov9867;
extern T0* ge376ov9892;
extern T0* ge376ov9877;
extern T0* ge376ov9708;
extern T0* ge376ov9672;
extern T0* ge568ov23970;
extern T0* ge568ov23725;
extern T0* ge568ov23568;
extern T0* ge576ov23075;
extern T0* ge576ov23074;
extern T0* ge568ov23969;
extern T0* ge568ov23567;
extern T0* ge376ov9903;
extern T0* ge376ov9875;
extern T0* ge376ov9861;
extern T0* ge376ov9891;
extern T0* ge376ov9712;
extern T0* ge376ov9878;
extern T0* ge376ov9842;
extern T0* ge376ov9872;
extern T0* ge376ov9887;
extern T0* ge376ov10004;
extern T0* ge376ov10006;
extern T0* ge376ov10005;
extern T0* ge568ov24010;
extern T0* ge568ov23751;
extern T0* ge568ov23608;
extern T0* ge376ov9787;
extern T0* ge376ov9755;
extern T0* ge376ov9754;
extern T0* ge376ov9736;
extern T0* ge376ov9735;
extern T0* ge376ov9821;
extern T0* ge376ov9829;
extern T0* ge376ov9828;
extern T0* ge376ov9827;
extern T0* ge376ov9927;
extern T0* ge376ov9932;
extern T0* ge376ov9928;
extern T0* ge376ov9933;
extern T0* ge376ov9915;
extern T0* ge376ov9941;
extern T0* ge568ov24009;
extern T0* ge568ov23750;
extern T0* ge568ov23607;
extern T0* ge376ov9775;
extern T0* ge376ov9811;
extern T0* ge376ov9727;
extern T0* ge376ov9731;
extern T0* ge376ov9730;
extern T0* ge376ov9729;
extern T0* ge376ov9726;
extern T0* ge376ov9728;
extern T0* ge376ov9720;
extern T0* ge376ov9719;
extern T0* ge376ov9718;
extern T0* ge376ov9717;
extern T0* ge376ov9724;
extern T0* ge376ov9723;
extern T0* ge376ov9722;
extern T0* ge376ov9721;
extern T0* ge376ov9826;
extern T0* ge376ov9825;
extern T0* ge376ov9824;
extern T0* ge376ov9820;
extern T0* ge376ov9819;
extern T0* ge376ov9929;
extern T0* ge376ov9914;
extern T0* ge376ov9809;
extern T0* ge376ov9807;
extern T0* ge376ov9806;
extern T0* ge376ov9789;
extern T0* ge376ov9786;
extern T0* ge376ov9785;
extern T0* ge376ov9784;
extern T0* ge376ov9782;
extern T0* ge376ov9781;
extern T0* ge376ov9776;
extern T0* ge376ov9764;
extern T0* ge376ov9763;
extern T0* ge376ov9762;
extern T0* ge376ov9761;
extern T0* ge376ov9744;
extern T0* ge376ov9738;
extern T0* ge376ov9737;
extern T0* ge376ov9733;
extern T0* ge376ov9812;
extern T0* ge376ov9805;
extern T0* ge376ov9804;
extern T0* ge376ov9803;
extern T0* ge376ov9802;
extern T0* ge376ov9801;
extern T0* ge376ov9800;
extern T0* ge376ov9799;
extern T0* ge376ov9798;
extern T0* ge376ov9797;
extern T0* ge376ov9796;
extern T0* ge376ov9795;
extern T0* ge376ov9794;
extern T0* ge376ov9793;
extern T0* ge376ov9792;
extern T0* ge376ov9791;
extern T0* ge376ov9734;
extern T0* ge376ov9833;
extern T0* ge376ov9771;
extern T0* ge376ov9808;
extern T0* ge376ov9788;
extern T0* ge376ov9765;
extern T0* ge376ov9748;
extern T0* ge376ov9739;
extern T0* ge376ov9732;
extern T0* ge376ov9774;
extern T0* ge376ov9773;
extern T0* ge376ov9772;
extern T0* ge376ov9769;
extern T0* ge376ov9767;
extern T0* ge376ov9750;
extern T0* ge376ov9749;
extern T0* ge376ov9751;
extern T0* ge376ov9716;
extern T0* ge376ov9715;
extern T0* ge376ov9760;
extern T0* ge376ov9822;
extern T0* ge376ov9906;
extern T0* ge376ov9880;
extern T0* ge376ov9870;
extern T0* ge376ov9885;
extern T0* ge376ov9845;
extern T0* ge376ov9783;
extern T0* ge376ov9741;
extern T0* ge376ov9725;
extern T0* ge376ov9713;
extern T0* ge376ov9752;
extern T0* ge376ov9790;
extern T0* ge376ov9779;
extern T0* ge376ov9831;
extern T0* ge376ov9780;
extern T0* ge376ov9759;
extern T0* ge376ov9758;
extern T0* ge376ov9709;
extern T0* ge376ov9756;
extern T0* ge376ov9745;
extern T0* ge376ov9766;
extern T0* ge376ov9816;
extern T0* ge376ov9817;
extern T0* ge376ov9757;
extern T0* ge376ov9742;
extern T0* ge376ov9810;
extern T0* ge376ov9815;
extern T0* ge376ov9830;
extern T0* ge376ov9743;
extern T0* ge376ov9814;
extern T0* ge376ov9876;
extern T0* ge376ov9856;
extern T0* ge376ov9901;
extern T0* ge376ov9866;
extern T0* ge376ov9669;
extern T0* ge376ov9851;
extern T0* ge376ov9853;
extern T0* ge376ov9888;
extern T0* ge376ov9843;
extern T0* ge376ov9863;
extern T0* ge376ov9846;
extern T0* ge376ov9890;
extern T0* ge376ov9873;
extern T0* ge568ov23959;
extern T0* ge568ov23722;
extern T0* ge568ov23557;
extern T0* ge568ov23952;
extern T0* ge568ov23550;
extern T0* ge568ov23951;
extern T0* ge568ov23549;
extern T0* ge568ov23950;
extern T0* ge568ov23548;
extern T0* ge568ov23955;
extern T0* ge568ov23553;
extern T0* ge568ov23957;
extern T0* ge568ov23555;
extern T0* ge568ov24016;
extern T0* ge568ov23757;
extern T0* ge568ov23614;
extern T0* ge376ov9747;
extern T0* ge568ov24015;
extern T0* ge568ov23756;
extern T0* ge568ov23613;
extern T0* ge376ov9768;
extern T0* ge568ov24011;
extern T0* ge568ov23752;
extern T0* ge568ov23609;
extern T0* ge568ov24014;
extern T0* ge568ov23755;
extern T0* ge568ov23612;
extern T0* ge376ov9746;
extern T0* ge376ov9943;
extern T0* ge376ov9944;
extern T0* ge376ov9945;
extern T0* ge376ov9946;
extern T0* ge376ov9947;
extern T0* ge376ov9948;
extern T0* ge376ov9949;
extern T0* ge376ov9950;
extern T0* ge376ov9951;
extern T0* ge376ov9952;
extern T0* ge376ov9953;
extern T0* ge376ov9954;
extern T0* ge376ov9955;
extern T0* ge376ov9956;
extern T0* ge376ov9957;
extern T0* ge376ov9958;
extern T0* ge376ov9959;
extern T0* ge376ov9960;
extern T0* ge376ov9961;
extern T0* ge376ov9962;
extern T0* ge376ov9670;
extern T0* ge376ov9671;
extern T0* ge376ov9673;
extern T0* ge376ov9674;
extern T0* ge376ov9675;
extern T0* ge376ov9676;
extern T0* ge376ov9678;
extern T0* ge376ov9677;
extern T0* ge376ov9679;
extern T0* ge376ov9680;
extern T0* ge376ov9681;
extern T0* ge376ov9682;
extern T0* ge376ov9683;
extern T0* ge376ov9684;
extern T0* ge376ov9685;
extern T0* ge376ov9686;
extern T0* ge376ov9687;
extern T0* ge376ov9688;
extern T0* ge376ov9689;
extern T0* ge376ov9690;
extern T0* ge376ov9691;
extern T0* ge376ov9692;
extern T0* ge376ov9693;
extern T0* ge376ov9694;
extern T0* ge376ov9695;
extern T0* ge376ov9696;
extern T0* ge376ov9697;
extern T0* ge376ov9698;
extern T0* ge376ov9699;
extern T0* ge376ov9700;
extern T0* ge376ov9701;
extern T0* ge376ov9702;
extern T0* ge376ov9703;
extern T0* ge376ov9704;
extern T0* ge376ov9705;
extern T0* ge376ov9706;
extern T0* ge376ov9707;
extern T0* ge376ov9710;
extern T0* ge376ov9711;
extern T0* ge376ov9714;
extern T0* ge376ov9740;
extern T0* ge376ov9753;
extern T0* ge376ov9770;
extern T0* ge376ov9777;
extern T0* ge376ov9778;
extern T0* ge376ov9813;
extern T0* ge376ov9818;
extern T0* ge376ov9823;
extern T0* ge376ov9832;
extern T0* ge376ov9835;
extern T0* ge376ov9836;
extern T0* ge376ov9838;
extern T0* ge376ov9839;
extern T0* ge376ov9840;
extern T0* ge376ov9847;
extern T0* ge376ov9848;
extern T0* ge376ov9854;
extern T0* ge376ov9859;
extern T0* ge376ov9862;
extern T0* ge376ov9864;
extern T0* ge376ov9865;
extern T0* ge376ov9868;
extern T0* ge376ov9869;
extern T0* ge376ov9871;
extern T0* ge376ov9874;
extern T0* ge376ov9881;
extern T0* ge376ov9889;
extern T0* ge376ov9893;
extern T0* ge376ov9894;
extern T0* ge376ov9895;
extern T0* ge376ov9896;
extern T0* ge376ov9899;
extern T0* ge376ov9900;
extern T0* ge376ov9902;
extern T0* ge376ov9904;
extern T0* ge376ov9907;
extern T0* ge376ov9908;
extern T0* ge376ov9909;
extern T0* ge376ov9910;
extern T0* ge376ov9911;
extern T0* ge376ov9912;
extern T0* ge376ov9913;
extern T0* ge376ov9916;
extern T0* ge376ov9917;
extern T0* ge376ov9918;
extern T0* ge376ov9919;
extern T0* ge376ov9920;
extern T0* ge376ov9921;
extern T0* ge376ov9922;
extern T0* ge376ov9923;
extern T0* ge376ov9924;
extern T0* ge376ov9925;
extern T0* ge376ov9926;
extern T0* ge376ov9930;
extern T0* ge376ov9934;
extern T0* ge376ov9935;
extern T0* ge376ov9936;
extern T0* ge376ov9937;
extern T0* ge376ov9938;
extern T0* ge376ov9939;
extern T0* ge376ov9940;
extern T0* ge1006ov4596;
extern T0* ge975ov16094;
extern T0* ge585ov11390;
extern T0* ge989ov7307;
extern T0* ge64ov4514;
extern T0* ge766ov6229;
extern T0* ge991ov3760;
extern T0* ge1303ov4099;
extern T0* ge63ov2242;
extern T0* ge967ov7483;
extern T0* ge986ov7483;
extern T0* ge976ov3760;
extern T0* ge50ov1784;
extern T0* ge50ov1785;
extern T0* ge50ov1786;
extern T0* ge50ov1783;
extern T0* ge476ov20740;
extern T0* ge474ov22333;
extern T0* ge467ov21809;
extern T0* ge436ov14458;
extern T0* ge569ov23031;
extern T0* ge569ov23030;
extern T0* ge569ov23029;
extern T0* ge376ov9931;
extern T0* ge376ov9942;
extern T0* ge408ov22212;
extern T0* ge376ov9963;
extern T0* ge376ov9979;
extern T0* ge376ov9967;
extern T0* ge376ov9968;
extern T0* ge376ov9969;
extern T0* ge376ov9970;
extern T0* ge376ov9964;
extern T0* ge376ov9971;
extern T0* ge376ov9972;
extern T0* ge376ov9973;
extern T0* ge376ov9974;
extern T0* ge376ov9965;
extern T0* ge376ov9980;
extern T0* ge376ov9975;
extern T0* ge376ov9976;
extern T0* ge376ov9977;
extern T0* ge376ov9966;
extern T0* ge395ov22104;
extern T0* ge376ov9982;
extern T0* ge376ov9983;
extern T0* ge376ov9981;
extern T0* ge755ov3214;
extern T0* ge730ov3214;
extern T0* ge751ov3214;
extern T0* ge736ov3214;
extern T0* ge742ov3214;
extern T0* ge731ov3214;
extern T0* ge728ov3214;
extern T0* ge754ov3214;
extern T0* ge735ov3214;
extern T0* ge750ov3214;
extern T0* ge752ov3214;
extern T0* ge748ov3214;
extern T0* ge745ov3214;
extern T0* ge733ov3214;
extern T0* ge741ov3214;
extern T0* ge55ov3214;
extern T0* ge888ov3214;
extern T0* ge882ov3214;
extern T0* ge62ov3214;
extern T0* ge61ov3214;
extern T0* ge881ov3214;
extern T0* ge892ov3214;
extern T0* ge885ov3214;
extern T0* ge883ov3214;
extern void GE_const_init(void);
extern EIF_TYPE GE_types[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-12-14 20:57:35 +0100 (Fri, 14 Dec 2007) $"
	revision: "$Revision: 6208 $"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

/* Raises an Eiffel exception of the given code with no associated tag. */
extern void xraise(int code);
/* Raise 'Operating system error' exception. */
extern void esys(void);
/* As a special case, an I/O error is raised when a system call which is I/O bound fails. */
extern void eise_io(char *tag);

/*
 * Predefined exception numbers. Value cannot start at 0 because this may need
 * a propagation via longjmp and USG implementations turn out a 0 to be 1.
 */
#define EN_VOID		1			/* Feature applied to void reference */
#define EN_MEM		2			/* No more memory */
#define EN_PRE		3			/* Pre-condition violated */
#define EN_POST		4			/* Post-condition violated */
#define EN_FLOAT	5			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		6			/* Class invariant violated */
#define EN_CHECK	7			/* Assertion violated */
#define EN_FAIL		8			/* Routine failure */
#define EN_WHEN		9			/* Unmatched inspect value */
#define EN_VAR		10			/* Non-decreasing loop variant */
#define EN_LINV		11			/* Loop invariant violated */
#define EN_SIG		12			/* Operating system signal */
#define EN_BYE		13			/* Eiffel run-time panic */
#define EN_RESC		14			/* Exception in rescue clause */
#define EN_OMEM		15			/* Out of memory (cannot be ignored) */
#define EN_RES		16			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		17			/* Create on deferred */
#define EN_EXT		18			/* External event */
#define EN_VEXP		19			/* Void assigned to expanded */
#define EN_HDLR		20			/* Exception in signal handler */
#define EN_IO		21			/* I/O error */
#define EN_SYS		22			/* Operating system error */
#define EN_RETR		23			/* Retrieval error */
#define EN_PROG		24			/* Developer exception */
#define EN_FATAL	25			/* Eiffel run-time fatal error */
#define EN_DOL		26			/* $ applied to melted feature */
#define EN_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		28			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-12-14 20:57:35 +0100 (Fri, 14 Dec 2007) $"
	revision: "$Revision: 6208 $"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Create directory `dirname'.
 */
extern void file_mkdir(char* dirname);

/*
 * Rename file `from' into `to'.
 */
extern void file_rename(char* from, char* to);

/*
 * Link file `from' into `to'.
 */
extern void file_link(char *from, char *to);

/*
 * Delete file or directory `name'.
 */
extern void file_unlink(char *name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_open(char *name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);

/*
 * Close the file.
 */
extern void file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void file_touch(char *name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void file_utime(char *name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern void file_stat(char *path, struct stat *buf);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void file_perm(char *name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void file_chmod(char *path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void file_chown(char *name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void file_chgrp(char *name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN file_exists(char *name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN file_path_exists(char *name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER file_info(struct stat *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_open(char* name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-03-30 21:58:53 +0200 (Fri, 30 Mar 2007) $"
	revision: "$Revision: 5932 $"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-03-30 21:58:53 +0200 (Fri, 30 Mar 2007) $"
	revision: "$Revision: 5932 $"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-10-06 12:51:02 +0200 (Sat, 06 Oct 2007) $"
	revision: "$Revision: 6103 $"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2008-06-17 06:08:32 +0200 (Tue, 17 Jun 2008) $"
	revision: "$Revision: 6429 $"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement the main function"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date: 2007-09-13 20:19:54 +0200 (Thu, 13 Sep 2007) $"
	revision: "$Revision: 6067 $"
*/

#ifndef EIF_MAIN_H
#define EIF_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Used in WEL.
*/
extern HINSTANCE eif_hInstance;

#endif

/*
	Used by the ISE runtime to figure out whether the application
	was launched from EiffelStudio in workbench mode or not.
*/
extern int debug_mode;

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
